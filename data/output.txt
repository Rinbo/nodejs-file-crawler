const hello = () => {
const aMuchLongerFunctionName = (one, two) => {
console.log(one+two);
entry: "./src/app.js",
path: `${__dirname}/dist`
test: /\.js$/,
exclude: /node_modules/,
options: {
presets: ["es2015"]
"main": "src/app.js",
"angular-address-book": {
"devDependencies": {
"schematics": {},
"options": {
"index": "src/index.html",
"outputPath": "dist/angular-address-book",
"main": "src/main.ts",
"polyfills": "src/polyfills.ts",
"tsConfig": "src/tsconfig.app.json",
"src/favicon.ico",
"assets": [
"styles": [
"src/assets"
"src/styles.css"
"scripts": []
"configurations": {
"production": {
"fileReplacements": [
"options": {
"configurations": {
"production": {
"extract-i18n": {
"options": {
"options": {
"builder": "@angular-devkit/build-angular:karma",
"main": "src/test.ts",
"tsConfig": "src/tsconfig.spec.json",
"polyfills": "src/polyfills.ts",
"karmaConfig": "src/karma.conf.js",
"styles": [
"src/styles.css"
"scripts": [],
"assets": [
"src/favicon.ico",
"src/assets"
"options": {
"tsConfig": [
"src/tsconfig.app.json",
"exclude": [
"src/tsconfig.spec.json"
"**/node_modules/**"
"root": "e2e/",
"angular-address-book-e2e": {
"options": {
"production": {
"protractorConfig": "e2e/protractor.conf.js",
"configurations": {
"options": {
"exclude": [
"**/node_modules/**"
"tsConfig": "e2e/tsconfig.e2e.json",
"outDir": "./dist/out-tsc",
"node_modules/@types"
"@angular/animations": "^6.1.0",
"compilerOptions": {
"@angular/common": "^6.1.0",
"@angular/compiler": "^6.1.0",
"@angular/forms": "^6.1.0",
"@angular/http": "^6.1.0",
"@angular/core": "^6.1.0",
"@angular/platform-browser": "^6.1.0",
"@angular/platform-browser-dynamic": "^6.1.0",
"devDependencies": {
"@angular-devkit/build-angular": "~0.8.0",
"@angular/router": "^6.1.0",
"@angular/cli": "~6.2.4",
"@angular/compiler-cli": "^6.1.0",
"@angular/language-service": "^6.1.0",
"@types/jasminewd2": "~2.0.3",
"@types/jasmine": "~2.8.8",
"@types/node": "~8.9.4",
"node_modules/codelyzer"
"rulesDirectory": [
"comment-format": [
"import-blacklist": [
"max-line-length": [
"member-ordering": [
"no-inferrable-types": [
"typedef-whitespace": [
"devDependencies": {
"triple-equals": [
const puppeteer = require('puppeteer');
await this.newBrowser()
class BrowserHelpers {
await this.newPage()
async newBrowser() {
const options = {
this.browser = await puppeteer.launch(options)
this.page = await this.browser.newPage()
async visitPage(url) {
return await this.page.goto(url)
await this.browser.close()
this.inputElement = await this.page.$(selector)
async fillIn(selector, options) {
await this.inputElement.type(options.with)
async clickOnButton(selector) {
//await this.page.click(selector)
await this.page.evaluate((selector) => {
document.querySelector(selector).click();
async getContent(element) {
async getElement(element) {
async selectOption(selector, options){
await this.page.select(selector, options.option);
const requestedElement = await this.page.$$(element)
async selectCheckBox(element) {
await this.page.click(element);
async selectRadioButton(element) {
await this.page.click(element);
async takeScreenshot(){
async debugTheCode() {
await this.page.screenshot({path: 'screenshot.png'});
await this.page.evaluate(() => {debugger;});
"type": "image/x-icon"
"index.html": "/company-registry-react/index.html",
"@material-ui/core": "latest",
"@material-ui/core": "^3.5.1",
"@material-ui/icons": "^3.0.1",
"devDependencies": {
"url": "/company-registry-react/index.html"
self.__precacheManifest = [
const fs = require("fs");
lib.baseDir = path.join(__dirname, "./");
const path = require("path");
lib.searchDir = path.join(__dirname, "../");
// Write data to file
if (!err && fileDesciptor) {
lib.create = function(dir, file, data, callback) {
fs.close(fileDesciptor, function(err) {
fs.writeFile(fileDesciptor, data, function(err) {
if (!err) {
} else {
callback(false);
callback("Could not close the file");
callback("Error writing to file");
lib.read = function(dir, file, callback) {
function(err, data) {
if (!err && data) {
callback(false, data);
// Update a file with new data
} else callback(err, data);
lib.update = function(dir, file, data, callback) {
// Open file for writing
if (!err && fileDesciptor) {
fs.writeFile(fileDesciptor, data, function(err) {
fs.close(fileDesciptor, function(err) {
if (!err) {
} else {
callback(false);
callback("Error closing the file");
callback("Could not write to file");
lib.listDirectoryContent = function(dir, callback) {
{ encoding: "utf8", withFileTypes: true },
`${lib.searchDir}/${dir == null ? "" : dir + "/"}`,
function(err, data) {
if (!err && data && data.length > 0) {
const content = [];
data.forEach(element => {
content.push(element);
callback(false, content);
callback(err, data);
lib.listFiles = function(dir, callback) {
if (!err && data && data.length > 0) {
const trimmedFileNames = [];
data.forEach(fileName => {
callback(false, trimmedFileNames);
dirContentL1.forEach(elementL1 => {
const fileSystem = require("./data");
callback(err, data);
// Element is a file
if (elementL1.isFile()) {
if (elementL1.name.match(".js")) {
appendToOutputFile(data);
if (!err) {
} else {
// Element is a folder
if (!err) {
dirContentL2.forEach(elementL2 => {
if (elementL2.isFile()) {
if (elementL2.name.match(".js")) {
fileSystem.read(
(err, data) => {
if (!err) {
appendToOutputFile(data);
} else {
}
}
);
} else {
// Element is a folder
fileSystem.listDirectoryContent(
(err, dirContentL3) => {
elementL1.name + "/" + elementL2.name,
if (!err) {
if (elementL3.isFile()) {
fileSystem.read(
dirContentL3.forEach(elementL3 => {
(err, data) => {
if (!err) {
console.log(
} else {
}
);
);
}
}
} else {
}
});
} else {
console.log(
);
const appendToOutputFile = data => {
}
data.split("\n").forEach(line => {
console.log("Success");
console.log(err, "Bummer!");
* See https://goo.gl/nhQhGp
* See https://goo.gl/2aRDsh
workbox.clientsClaim();
workbox.precaching.suppressWarnings();
* See https://goo.gl/S9QRab
blacklist: [/^\/_/,/\/[^\/]+\.[^\/]+$/],
"@rails/webpacker": "3.5",
"@rails/webpacker": "3.5",
"devDependencies": {
"devDependencies": {
if (number % 15 == 0) {
if (number % 3 == 0) {
console.log("fizzbuzz")
console.log("fizz");
} else if (number % 5 == 0) {
"devDependencies": {
console.log("buzz");
"test": "karma start ./test-config/karma.conf.js",
"homepage": "http://ionicframework.com/",
"@angular/animations": "5.2.11",
"@angular/common": "5.2.11",
"@angular/compiler": "5.2.11",
"@angular/core": "5.2.11",
"@angular/compiler-cli": "5.2.11",
"@angular/forms": "5.2.11",
"@angular/http": "5.2.11",
"@angular/platform-browser": "5.2.11",
"@angular/platform-browser-dynamic": "5.2.11",
"@ionic-native/core": "~4.15.0",
"@ionic-native/splash-screen": "~4.15.0",
"@ionic-native/status-bar": "~4.15.0",
"@ionic/pro": "2.0.3",
"@ionic/storage": "2.2.0",
"devDependencies": {
"@types/jasmine": "^2.8.9",
"@ionic/app-scripts": "3.2.0",
"cordova-plugin-statusbar": {},
"cordova-plugin-whitelist": {},
"@types/node": "^10.11.7",
"cordova-plugin-splashscreen": {},
"cordova-plugin-ionic-keyboard": {}
"cordova-plugin-device": {},
"cordova-plugin-ionic-webview": {},
"src/**/__tests__/*.ts"
"src/**/*.spec.ts",
"compilerOptions": {
"no-unused-variable": [
"rulesDirectory": [
"node_modules/tslint-eslint-rules/dist/rules"
// Airplane.js make it so
Airplane.availableAirplanes = [
constructor(name, department) {
get department() {
get remainingVacationDays(){
takeVacationDays(daysOff) {
class HospitalEmployee {
// Create super-class
constructor(name){
static generatePassword() {
return Math.floor(Math.random() * 10000);
get remainingVacationDays(){
takeVacationDays(daysOff){
constructor(name, certifications) {
class Nurse extends HospitalEmployee {
get certifications(){
addCertification(newCertification){
this._certifications.push(newCertification);
nurseOlynyk.takeVacationDays(5);
console.log(nurseOlynyk.remainingVacationDays);
nurseOlynyk.addCertification("Genetics");
console.log(nurseOlynyk.certifications)
console.log(Nurse.generatePassword())
const takeOrder = (topping, crustType) => {
takeOrder('mushroom', 'thin crust');
takeOrder('pepperoni', 'brooklyn style');
takeOrder('spinach', 'whole wheat');
const getSubTotal = (itemCount) => {
const getTotal = (itemCount) => {
const getTax = (itemCount) => {
return getSubTotal(itemCount) * 0.06;
console.log(getTotal(orderCount));
// Function declaration (deos not end with semicolon)
if (numberOne > numberTwo) {
function isGreaterThan(numberOne, numberTwo) {
console.log(isGreaterThan(3, 4))
const isGreaterThan = (numberOne, numberTwo) =>{
console.log(isGreaterThan(4, 8))
if(numberOne > numberTwo){
document.addEventListener("click", function() {
console.log(name)
// array_iterators.js
let secretMessage = animals.map(animal => animal[0]);
console.log(secretMessage.join(''));
let bigNumbers = [100, 200, 300, 400, 500];
let smallNumbers = bigNumbers.map(number => number/100);
console.log(smallNumbers)
let randomNumbers = [375, 200, 3.14, 7, 13, 852];
let fruits = ['mango', 'papaya', 'pineapple', 'apple'];
console.log(longFavoriteWords)
console.log(smallNumbers);
console.log(words.some(function(word) {
console.log(interestingWords)
let smallerNums = nums.map(num => num - 5);
nums.some(num => num < 0);
let longCities = cities.filter(city => city.length > 7);
let nums = [1, 50, 75, 200, 350, 525, 1000];
console.log(typeof(123));
console.log(typeof("Hello"));
console.log(typeof(123/3));
console.log(typeof(undefined));
if (language == "English"){
console.log("Hellööuu");
} else if (language == "American"){
console.log("Howdy!");
console.log("Mumble muble");
myArray = ['Thomas', 'Amber', 'Raoul']
for (i in myArray) {
emptyArray[i] = myArray[i];
console.log(emptyArray)
// magic_eightball.js
console.log(userQuestion);
let randomNumber = Math.floor(Math.random() * 8);
switch (randomNumber) {
console.log(eightBall);
typeof(123/12) => 'number'
typeof("Hello") => 'string'
typeof(undefined) 'undefined'
myArray = ['Thomas', 'Amber', 'Raoul']
for (let i = 0; i<myArray.length; i++)  {
console.log(emptyArray)
emptyArray.push(myArray[i])
constructor(first, last) {
setName(first, last) {
return `${this.first} ${this.last}`;
robin = new Person("Robin", "Borjesson");
function helper(x) {
return 1/Math.sqrt(x +n);
robin.setName("Bob", "Bobson");
// function within a function
return helper(b);
let bor = function() {
console.log(bar(1,3)); // => 0.5
let rob = function (){
let fn = function(x, y) {
return `${x} ${y}`;
console.log(fn(rob(), bor()));
function Person(first, last) {
let privateFn = function(first,last) {
//private function
this.setName = function(first, last){
Person.prototype.fullName = function() {
// Extend prototype (add function/method)
snorre = new Person("Robin", "Börjesson");
console.log(snorre.fullName());
snorre.setName("Rolle", "Bolle");
function newFunction() {
console.log(snorre.fullName());
this.myFunc1 = function () {
return console.log("Hallå!!");
timer = setTimeout("myFunc1()", 3000);
let overusedWords = ['really', 'very', 'basically'];
let storyWords = story.split(" ");
let betterWords = storyWords.filter(function(word) {
for (i = 0; i < overusedWords.length; i++) {
if (word === overusedWords[i]) {
let betterWords = storyWords.filter(function(word){
return !unnecessaryWords.includes(word)
for (word of storyWords) {
if (word === "really") {
} else if (word === "very") {
} else if (word === "basically") {
storyWords.forEach(function(word){
console.log("Number of words: " + storyWords.length);
console.log("Number of sentences: " + sentenceCount);
console.log(betterWords.join(" "));
import Airplane from './airplane';
function displayFuelCapacity() {
displayFuelCapacity();
Airplane.availableAirplanes.forEach(function(element){
let availableAirplanes = [
{name: 'SkyJet',
availableStaff: ['pilots', 'flightAttendants']
if (availableStaff.length >= requiredStaff){
function displayFuelCapacity() {
let flightRequirements = {requiredStaff: 4};
availableAirplanes.forEach(function(element){
displayFuelCapacity();
function displayStaffStatus() {
availableAirplanes.forEach(function(element){
(resolve, reject) => {
const willIGetTreat = new Promise(
if (isDogHappy) {
const treat = {
resolve(treat);
reject(reason);
const happyDog = function (treat) {
return Promise.resolve(message);
const askForTreat = function () {
.then(fulfilled => console.log(fulfilled))
.then(happyDog)
.catch(error => console.log(error.message));
"escape-latex": {
"tiny-emitter": {
"javascript-natural-sort": {
"typed-function": {
// runner_registration.js
let raceNumber = Math.floor(Math.random() * 1000);
if (runnerAge > 18 && registerEarly){
if (runnerAge > 18 && registerEarly) {
} else if (runnerAge > 18 && !registerEarly){
} else if (runnerAge < 18) {
console.log("Please see the registration disk");
const math = require("mathjs");
n = math.parse("not toto");
console.log(n.toString());
"@angular/animations": "^6.1.0",
"@angular/common": "^6.1.0",
"@angular/compiler": "^6.1.0",
"@angular/core": "^6.1.0",
"@angular/forms": "^6.1.0",
"@angular/http": "^6.1.0",
"@angular/platform-browser": "^6.1.0",
"@angular/platform-browser-dynamic": "^6.1.0",
"devDependencies": {
"@angular/router": "^6.1.0",
"@angular/cli": "~6.2.4",
"@angular-devkit/build-angular": "~0.8.0",
"@angular/compiler-cli": "^6.1.0",
"@types/jasminewd2": "~2.0.3",
"@types/jasmine": "~2.8.8",
"@angular/language-service": "^6.1.0",
"@types/node": "~8.9.4",
"schematics": {},
"outputPath": "dist/new-app",
"options": {
"index": "src/index.html",
"main": "src/main.ts",
"polyfills": "src/polyfills.ts",
"tsConfig": "src/tsconfig.app.json",
"assets": [
"src/favicon.ico",
"styles": [
"src/assets"
"src/styles.css"
"scripts": []
"configurations": {
"production": {
"fileReplacements": [
"configurations": {
"options": {
"extract-i18n": {
"production": {
"options": {
"main": "src/test.ts",
"builder": "@angular-devkit/build-angular:karma",
"options": {
"polyfills": "src/polyfills.ts",
"tsConfig": "src/tsconfig.spec.json",
"styles": [
"karmaConfig": "src/karma.conf.js",
"src/styles.css"
"scripts": [],
"assets": [
"src/favicon.ico",
"tsConfig": [
"src/assets"
"options": {
"src/tsconfig.app.json",
"src/tsconfig.spec.json"
"exclude": [
"**/node_modules/**"
"root": "e2e/",
"options": {
"protractorConfig": "e2e/protractor.conf.js",
"configurations": {
"production": {
"options": {
"tsConfig": "e2e/tsconfig.e2e.json",
"**/node_modules/**"
"exclude": [
"compilerOptions": {
"outDir": "./dist/out-tsc",
"node_modules/@types"
"rulesDirectory": [
"node_modules/codelyzer"
"comment-format": [
"no-inferrable-types": [
"import-blacklist": [
"member-ordering": [
"max-line-length": [
"triple-equals": [
"typedef-whitespace": [
app.init = function() {
const workers = require("./lib/workers");
const server = require("./lib/server");
const server = require("./lib/server");
const cli = require("./lib/cli");
app.init = function(callback) {
// Start the CLI, but make sure it starts last
// Start the server
setTimeout(function() {
// Self envocing only if required directly
app.init(function() {});
if (require.main === module) {
const url = require("url");
const http = require("http");
const os = require("os");
const cluster = require("cluster");
const server = http.createServer(function(req, res) {
// extract information from request
const parsedUrl = url.parse(req.url, true);
const trimmedPath = path.replace(/^\/+|\/+$/g, "");
// Pick a handler based on which route the user hit
// Parse request and send a response
chosenHandler(function(statusCode) {
res.setHeader("Content-Type", "application/json");
// Set the status code
res.writeHead(statusCode);
// If 200 send a greeting back
//Stringify the payload
const payloadString = JSON.stringify(payload);
// Send the response
// Fork the process if cluster is master
res.end(payloadString);
for (var i = 0; i < os.cpus().length; i++) {
if (cluster.isMaster) {
server.listen(3000, function() {
// Listen to 3000 with all cores
console.log("Listening on port 3000");
// Declare handler container
return callback(200);
handler.hello = function(callback) {
// All other routes are handled by notFound
handler.notFound = function(callback) {
return callback(404);
// Declare the router
export class Child extends React.Component {
constructor(props) {
this.handleChange = this.handleChange.bind(this);
this.props.onChange(name);
onChange={this.handleChange}>
<option value="Frarthur">Frarthur</option>
<option value="Gromulus">Gromulus</option>
<option value="Thinkpiece">Thinkpiece</option>
export class Input extends React.Component {
constructor(props){
this.state = {userInput: ""};
handleUserInput(e) {
this.setState({userInput: e.target.value});
<h1>{this.state.userInput}</h1>
document.getElementById('app')
import { Sibling } from './Sibling';
class Parent extends React.Component {
import { Child } from './Child';
constructor(props) {
this.state = { name: 'Frarthur' };
this.changeName = this.changeName.bind(this);
changeName(newName) {
<Child onChange={this.changeName} />
<Sibling name={this.state.name} />
document.getElementById('app')
export class Sibling extends React.Component {
<h1>Hey, my name is {name}!</h1>
constructor(props)
class Toggle extends React.Component {
this.changeColor = this.changeColor.bind(this);
this.state = {color: green};
this.setState({ color: newColor });
<div style={{background: this.state.color}}>
<button onClick={this.changeColor}>
path: `${__dirname}/dist`
"repository": "git@github.com:Rinbo/RPS-js.git",
"devDependencies": {
entry: "./src/app.js",
"@rails/webpacker": "3.5",
exclude: /node_modules/,
test: /\.js$/,
presets: ["es2015"]
"compilerOptions": {
"extends": "../tsconfig.json",
"devDependencies": {
"outDir": "../out-tsc/app",
const renderContacts = () => {
if (contacts) {
function toggleForm() {
let div = document.querySelector('.contact-list');
const sect = document.createElement('section');
sect.classList.add('flex');
sect.classList.add('justify-start');
sect.classList.add('flex-col');
contacts.forEach(contact => {
<h3>${ contact.company }</h3>
<p>${ contact.notes }</p>
<h2>${ contact.name }</h2>
</div>
sect.appendChild(sectChild)
div.appendChild(sect)
document.addEventListener('DOMContentLoaded', () => {
renderContacts();
} = addContactForm.elements
event.preventDefault()
addContactForm.addEventListener('submit', event => {
contacts.push(contact)
const contact ={
id: Date.now(),
addContactForm.reset()
renderContacts()
const { SpecReporter } = require('jasmine-spec-reporter');
baseUrl: 'http://localhost:4200/',
'./src/**/*.e2e-spec.ts'
// Karma configuration file, see link for more information
module.exports = function (config) {
print: function() {}
require('ts-node').register({
require('karma-coverage-istanbul-reporter'),
require('karma-jasmine-html-reporter'),
coverageIstanbulReporter: {
require('karma-chrome-launcher'),
dir: require('path').join(__dirname, '../coverage'),
reports: ['html', 'lcovonly'],
reporters: ['progress', 'kjhtml'],
"outDir": "../out-tsc/spec",
require('karma-jasmine'),
"extends": "../tsconfig.json",
"compilerOptions": {
browsers: ['Chrome'],
"extends": "../tslint.json",
"extends": "../tsconfig.json",
"outDir": "../out-tsc/app",
"compilerOptions": {
const { expect } = require('chai');
"directive-selector": [
"component-selector": [
// features/index.feature.js
describe('User can calculate BMI', () => {
before(async () => {
const browser = new BrowserHelpers()
const BrowserHelpers = require('e2e_training_wheels')
await browser.init()
beforeEach(async () => {
await browser.page.reload();
await browser.visitPage('http://localhost:8080/')
after(async () => {
it('by inputing his weight and height', async () => {
await browser.close();
await browser.clickOnButton("button")
expect(content).to.eql('Your BMI is 27.76');
"type": "image/x-icon"
const chai = require('chai');
const fs = require('fs');
"type": "image/x-icon"
// spec/person_spec.js
let person = fs.readFileSync('./src/js/person.js');
let calc = fs.readFileSync('./src/js/calculator.js');
describe("Metric Person", () => {
it("should have weight of 90", () => {
const { Person } = require('./spec.helper')
let person = new Person({
expect(person.weight).to.equal(90);
it("should calculate BMI value", () => {
expect(person.height).to.equal(186);
it("should have height of 186", () => {
person.calculate_bmi("metric");
expect(person.bmiValue).to.equal(26.01);
person.calculate_bmi("metric");
it("should have a BMI Message", () => {
expect(person.bmiMessage).to.equal('Overweight');
let person = new Person({
describe("Imperial Person", () => {
it("should have weight of 201", () => {
expect(person.weight).to.equal(201);
it("should have height of 74", () => {
it("should calculate BMI value", () => {
expect(person.height).to.equal(74);
person.calculate_bmi("imperial");
expect(person.bmiValue).to.equal(25.80);
person.calculate_bmi("imperial");
it("should have a BMI Message", () => {
expect(person.bmiMessage).to.equal('Overweight');
import App from "./components/App";
ReactDOM.render(<App />, document.getElementById("root"));
// spec/calculator_spec.js
const { Person, BMICalculator } = require('./spec.helper')
describe("BMICalculator Metric", function() {
beforeEach(function() {
person = new Person({weight: 90, height: 186});
calculator.metric_bmi(person);
calculator = new BMICalculator();
expect(person.bmiValue).to.equal(26.01);
calculator.metric_bmi(person);
describe("BMICalculator Imperial", function() {
beforeEach(function() {
expect(person.bmiMessage).to.equal('Overweight');
person = new Person({weight: 201, height: 74});
calculator = new BMICalculator();
calculator.imperial_bmi(person);
expect(person.bmiValue).to.equal(25.80);
calculator.imperial_bmi(person);
expect(person.bmiMessage).to.equal('Overweight');
import Index from './pages/index';
import * as serviceWorker from './serviceWorker';
serviceWorker.unregister();
import green from '@material-ui/core/colors/green';
import purple from '@material-ui/core/colors/purple';
// Learn more about service workers: http://bit.ly/CRA-PWA
// A theme with custom primary and secondary color.
import CssBaseline from '@material-ui/core/CssBaseline';
const theme = createMuiTheme({
light: purple[300],
dark: purple[700],
light: green[300],
main: purple[500],
dark: green[700],
// thanks to React context.
function WithRoot(props) {
main: green[500],
function withRoot(Component) {
<MuiThemeProvider theme={theme}>
</MuiThemeProvider>
// This optional code is used to register a service worker.
<Component {...props} />
<CssBaseline />
// register() is not called by default.
// resources are updated in the background.
const isLocalhost = Boolean(
// opt-in, read http://bit.ly/CRA-PWA
// [::1] is the IPv6 localhost address.
window.location.hostname === '[::1]' ||
// 127.0.0.1/8 is considered localhost for IPv4.
export function register(config) {
if (publicUrl.origin !== window.location.origin) {
if (isLocalhost) {
window.addEventListener('load', () => {
checkValidServiceWorker(swUrl, config);
// service worker/PWA documentation.
navigator.serviceWorker.ready.then(() => {
console.log(
// Is not localhost. Just register service worker
registerValidSW(swUrl, config);
.then(registration => {
function registerValidSW(swUrl, config) {
registration.onupdatefound = () => {
if (installingWorker == null) {
installingWorker.onstatechange = () => {
if (installingWorker.state === 'installed') {
// content until all client tabs are closed.
if (navigator.serviceWorker.controller) {
console.log(
// Execute callback
if (config && config.onUpdate) {
config.onUpdate(registration);
// It's the perfect time to display a
// Execute callback
if (config && config.onSuccess) {
config.onSuccess(registration);
.catch(error => {
function checkValidServiceWorker(swUrl, config) {
registration.unregister().then(() => {
.then(response => {
// Service worker found. Proceed as normal.
window.location.reload();
registerValidSW(swUrl, config);
if ('serviceWorker' in navigator) {
export function unregister() {
describe('Fizz Buzz', () => {
const { FizzBuzz } =  require('./spec.helper')
navigator.serviceWorker.ready.then(registration => {
registration.unregister();
it('returns Fizz if number is divisible by 3', () => {
expect(fizzBuzz.check(3)).to.eql('Fizz')
expect(fizzBuzz.check(1)).to.eql(1)
it('returns Buzz if number is divisible by 5', () => {
expect(fizzBuzz.check(5)).to.eql('Buzz')
const  fs = require('fs');
expect(fizzBuzz.check(15)).to.eql('FizzBuzz')
const  chai = require('chai');
const BrowserHelpers = require('e2e_training_wheels')
const { FizzBuzz } = require('../spec/spec.helper')
before(async () => {
eval(fizzBuzz + `\nexports.FizzBuzz = FizzBuzz;`)
await browser.init()
await browser.visitPage('http://localhost:8080/')
beforeEach(async () => {
const browser = new BrowserHelpers()
await browser.page.reload();
let  fizzBuzz = fs.readFileSync('./src/js/fizz-buzz.js');
after(async () => {
it('clicking on the "Check" button', async () => {
expect(content).to.eql('Fizz');
expect(content).to.eql('Buzz');
await browser.close();
it('clicking on the "Check" button', async () => {
it('clicking on the "Check" button', async () => {
expect(content).to.eql('Buzz');
"extends": "../tsconfig.json",
it('clicking on the "Check" button', async () => {
"compilerOptions": {
expect(content).to.eql('FizzBuzz');
"src": "assets/imgs/logo.png",
"outDir": "../out-tsc/e2e",
"../node_modules/@types"
self.toolbox.options.cache = {
importScripts('./build/sw-toolbox.js');
// pre-cache our key assets
"type": "image/png"
'./build/main.css',
'./build/main.js',
'./build/vendor.js',
self.toolbox.precache(
'./build/polyfills.js',
self.toolbox.router.any('/*', self.toolbox.fastest);
// dynamically cache any other local assets
// for any other requests go to the network, cache,
const { SpecReporter } = require('jasmine-spec-reporter');
baseUrl: 'http://localhost:8100/',
'../e2e/**/*.e2e-spec.ts'
print: function() {}
module.exports = function(config) {
project: 'e2e/tsconfig.e2e.json'
var webpackConfig = require('./webpack.test.js');
'/assets/': '/base/src/assets/'
pattern: './test-config/karma-test-shim.js',
pattern: './src/assets/**/*',
webpackMiddleware: {
require('ts-node').register({
reports: [ 'html', 'lcovonly' ],
browserConsoleLogOptions: {
coverageIstanbulReporter: {
"src": "assets/imgs/logo.png",
config.set(_config);
frameworks: ['jasmine'],
"type": "image/png"
browsers: ['Chrome'],
self.toolbox.precache(
// pre-cache our key assets
importScripts('./build/sw-toolbox.js');
self.toolbox.options.cache = {
'./build/main.js',
'./build/vendor.js',
'./build/polyfills.js',
'./build/main.css',
self.toolbox.router.any('/*', self.toolbox.fastest);
// for any other requests go to the network, cache,
// dynamically cache any other local assets
require('core-js/es6');
require('zone.js/dist/long-stack-trace-zone');
require('core-js/es7/reflect');
require('zone.js/dist/zone');
require('zone.js/dist/proxy');
require('zone.js/dist/sync-test');
require('zone.js/dist/jasmine-patch');
require('zone.js/dist/fake-async-test');
require('zone.js/dist/async-test');
appContext.keys().forEach(appContext);
var path = require('path');
var testing = require('@angular/core/testing');
var webpack = require('webpack');
extensions: ['.ts', '.js']
test: /\.ts$/,
exclude: /(index.ts|mocks.ts|\.spec\.ts$)/,
}, 'angular2-template-loader']
test: /.+\.ts$/,
test: /\.html$/,
new webpack.ContextReplacementPlugin(
return path.resolve(__dirname, localPath);
// Hover to view descriptions of existing attributes.
"devDependencies": {
function root(localPath) {
"webRoot": "${workspaceFolder}"
"url": "http://localhost:8080",
// Use IntelliSense to learn about possible attributes.
// Hover to view descriptions of existing attributes.
"configurations": [
"mainClass": "${file}"
"name": "Debug (Launch) - Current File",
"configurations": [
const { SpecReporter } = require('jasmine-spec-reporter');
"name": "Debug (Launch)-App<dotcom>",
'./src/**/*.e2e-spec.ts'
"name": "Debug (Launch)-Game<dotcom-game>",
// Karma configuration file, see link for more information
baseUrl: 'http://localhost:4200/',
print: function() {}
require('ts-node').register({
module.exports = function (config) {
require('karma-jasmine-html-reporter'),
require('karma-chrome-launcher'),
require('karma-coverage-istanbul-reporter'),
coverageIstanbulReporter: {
require('karma-jasmine'),
dir: require('path').join(__dirname, '../coverage'),
reports: ['html', 'lcovonly'],
browsers: ['Chrome'],
reporters: ['progress', 'kjhtml'],
"extends": "../tsconfig.json",
"compilerOptions": {
"outDir": "../out-tsc/spec",
"component-selector": [
"directive-selector": [
"extends": "../tslint.json",
"compilerOptions": {
"extends": "../tsconfig.json",
"outDir": "../out-tsc/app",
"extends": "../tsconfig.json",
"compilerOptions": {
environments.staging = {
const environments = {};
environments.production = {
"outDir": "../out-tsc/app",
? process.env.NODE_ENV.toLowerCase()
? environments[currentEnvironment]
typeof environments[currentEnvironment] == "object"
const crypto = require("crypto");
const https = require("https");
const config = require("./config");
const querystring = require("querystring");
helpers.hash = function(str) {
// SHA256 hash (built into node.js)
if (typeof str == "string" && str.length > 0) {
.createHmac("sha256", config.hashingSecret)
.digest("hex");
const obj = JSON.parse(str);
helpers.parseJsonToObject = function(str) {
helpers.createRandomString = function(strLength) {
for (i = 1; i <= strLength; i++) {
let randomCharacter = possibleCharacters.charAt(
helpers.sendTwilioSms = function(phone, msg, callback) {
// Validate parameters
if (phone && msg) {
typeof phone == "string" && phone.trim().length == 10
// Configure the request payload
const stringPayload = querystring.stringify(payload);
const payload = {
// Configure the request details
const requestDetails = {
"Content-Length": Buffer.byteLength(stringPayload)
// Instantiate the request object
// Grab the status of the sent request
// Callback successfully if the request went through
if (status == 200 || status == 201) {
callback(false);
callback("Status code returned was " + status);
req.on("error", function(e) {
// Bind to the error event so it doesn't get thrown
req.write(stringPayload);
// Add the payload
// End the request
const fs = require("fs");
callback("Given parameters were missing or invalid");
const path = require("path");
const helpers = require("./helpers");
if (!err && fileDescriptor) {
lib.create = function(dir, file, data, callback) {
lib.baseDir = path.join(__dirname, "/.././.data/");
const stringData = JSON.stringify(data);
fs.close(fileDescriptor, function(err) {
if (!err) {
callback(false);
callback("Error closing new file");
callback("Error writing to new file");
lib.read = function(dir, file, callback) {
if (!err && data) {
const parsedData = helpers.parseJsonToObject(data);
callback(err, data);
callback(false, parsedData);
if (!err && fileDescriptor) {
lib.update = function(dir, file, data, callback) {
const stringData = JSON.stringify(data);
fs.ftruncate(fileDescriptor, function(err) {
fs.close(fileDescriptor, function(err) {
if (!err) {
if (!err) {
} else {
callback("Error closing the file");
callback("Error writing to existing file");
callback(false);
callback("Error truncating the file");
lib.delete = function(dir, file, callback) {
// List all the items in a directory
lib.list = function(dir,callback){
fs.readdir(lib.baseDir+dir+'/', function(err,data){
if(!err && data && data.length > 0){
const trimmedFileNames = [];
data.forEach(function(fileName){
callback(err,data);
callback(false,trimmedFileNames);
var fs = require("fs");
var path = require("path");
var zlib = require("zlib");
// Container for module (to be exported)
// Base directory of data folder
lib.baseDir = path.join(__dirname, "/../.logs/");
lib.append = function(file, str, callback) {
if (!err && fileDescriptor) {
// Open the file for appending
// Append to file and close it
fs.close(fileDescriptor, function(err) {
callback(false);
if (!err) {
callback("Error appending to file");
} else {
callback("Could open file for appending");
lib.list = function(includeCompressedLogs, callback) {
fs.readdir(lib.baseDir, function(err, data) {
if (!err && data && data.length > 0) {
var trimmedFileNames = [];
data.forEach(function(fileName) {
// Add the .log files
if (fileName.indexOf(".log") > -1) {
// Add the .gz files
callback(false, trimmedFileNames);
callback(err, data);
// Read the source file
lib.compress = function(logId, newFileId, callback) {
// Compress the data using gzip
if (!err && inputString) {
zlib.gzip(inputString, function(err, buffer) {
if (!err && buffer) {
if (!err && fileDescriptor) {
// Send the data to the destination file
// Write to the destination file
if (!err) {
// Close the destination file
fs.close(fileDescriptor, function(err) {
if (!err) {
} else {
callback(err);
callback(false);
}
});
} else {
} else {
callback(err);
callback(err);
callback(err);
callback(err);
lib.decompress = function(fileId, callback) {
if (!err && str) {
// Inflate the data
var inputBuffer = Buffer.from(str, "base64");
if (!err && outputBuffer) {
// Callback
var str = outputBuffer.toString();
callback(false, str);
callback(err);
callback(err);
// Truncate a log file
lib.truncate = function(logId, callback) {
callback(false);
const http = require("http");
// Export the module
callback(err);
const https = require("https");
const fs = require("fs");
const config = require("./config");
const url = require("url");
const handlers = require("./handlers");
const helpers = require("./helpers");
server.httpServer = http.createServer(function(req, res) {
const path = require("path");
unifiedServer(req, res);
server.unifiedServer(req, res);
server.unifiedServer = function(req, res) {
server.httpsServerOptions = {
const parsedUrl = url.parse(req.url, true);
const method = req.method.toLowerCase();
const decoder = new StringDecoder("utf-8");
const trimmedPath = path.replace(/^\/+|\/+$/g, "");
req.on("data", function(data) {
req.on("end", function() {
buffer += decoder.write(data);
buffer += decoder.end();
typeof server.router[trimmedPath] !== "undefined"
? server.router[trimmedPath]
payload: helpers.parseJsonToObject(buffer)
chosenHandler(data, function(statusCode, payload) {
payload = typeof payload == "object" ? payload : {};
const payloadString = JSON.stringify(payload);
res.setHeader("Content-Type", "application/json");
res.writeHead(statusCode);
res.end(payloadString);
server.init = function() {
server.httpServer.listen(config.httpPort, function() {
"\x1b[36m%s\x1b[0m",
"\x1b[35m%s\x1b[0m",
server.httpsServer.listen(config.httpsPort, function() {
awesomeFunctions = {};
awesomeFunctions.getANumber = function() {
// Simply return a number
// Sample functions to be tested
awesomeFunctions.greeter = function(langauge = "") {
// Hello in given language
switch (langauge) {
langauge = langauge.toLowerCase();
// Helper for callbackSomething
// A function that calls back
const val = adder(a, b);
const adder = function(a, b) {
const err = new Error("Mega error!");
if (typeof a !== "number" || typeof b !== "number") {
return parseInt(a) + parseInt(b);
// Logic for testrunner
// Container for the tests
// Add the unit tests
_app.tests.unit = require("./unit");
// Count all  the tests
for (let key in _app.tests) {
const subTests = _app.tests[key];
_app.countTests = function() {
if (_app.tests.hasOwnProperty(key)) {
for (let testName in subTests) {
_app.runTests = function() {
if (subTests.hasOwnProperty(testName)) {
// Run all the tests collecting the errors and successes
const errors = [];
const limit = _app.countTests();
for (let key in _app.tests) {
if (_app.tests.hasOwnProperty(key)) {
const subTests = _app.tests[key];
for (let testName in subTests) {
if (subTests.hasOwnProperty(testName)) {
(function() {
// call the test
let testValue = subTests[testName];
testValue(function() {
} catch (e) {
if (counter == limit) {
errors.push({
if (counter == limit) {
// Producee a test outcome report
console.log("Total Tests: ", limit);
console.log("----------BEGIN TEST REPORT----------");
console.log("pass: ", successes);
console.log("Fail ", errors.length);
// if there are errors print them in detail
if (errors.length > 0) {
errors.forEach(testError => {
console.log("\x1b[31m%s\x1b[0m", testError.name);
console.log(testError.error);
console.log("");
console.log("----------END ERROR DETAILS----------");
console.log("----------END TEST REPORT----------");
// Container for all environments
const keys = require("./keys");
environments.staging = {
const environments = {};
baseUrl: "http://localhost:3000/"
templateGlobals: {
environments.production = {
templateGlobals: {
baseUrl: "http://localhost:5000/"
// Testing environment
environments.testing = {
templateGlobals: {
baseUrl: "http://localhost:3000/"
? process.env.NODE_ENV.toLowerCase()
typeof environments[currentEnvironment] == "object"
// Export the correct environment
? environments[currentEnvironment]
const path = require("path");
const fs = require("fs");
const helpers = require("./helpers");
// Container for module
lib.baseDir = path.join(__dirname, "/../.data");
// Write data to file
lib.create = function(dir, file, data, callback) {
// Open file for writing
if (!err && fileDesciptor) {
const stringData = JSON.stringify(data);
// Stringify data
// Write to file and close it
fs.close(fileDesciptor, function(err) {
if (!err) {
callback(false);
} else {
callback("Could not close the file");
callback("Error writing to file");
// Read data from a file
lib.read = function(dir, file, callback) {
if (!err && data) {
const parsedData = helpers.parseJsonToObject(data);
callback(false, parsedData);
} else callback(err, data);
lib.update = function(dir, file, data, callback) {
// Open file for writing
// Update a file with new data
if (!err && fileDesciptor) {
// Convert data to string
const stringData = JSON.stringify(data);
// Truncate the file
fs.ftruncate(fileDesciptor, function(err) {
if (!err) {
if (!err) {
fs.close(fileDesciptor, function(err) {
} else {
callback(false);
callback("Error closing the file");
} else {
callback("Could not write to file");
callback("Error truncating the file");
lib.delete = function(dir, file, callback) {
// Unlink the file from the filesystem
lib.list = function(dir, callback) {
const trimmedFileNames = [];
data.forEach(fileName => {
if (!err && data && data.length > 0) {
callback(false, trimmedFileNames);
callback(err, data);
// Export lib object
const assert = require("assert");
const awesomeFunctions = require("../app/lib");
// --- GetANumber function ---
const val = awesomeFunctions.getANumber();
assert.equal(typeof val, "number");
assert.equal(val, 1);
const val = awesomeFunctions.getANumber();
assert.notEqual(val, 2);
const val = awesomeFunctions.getANumber();
// --- Greeter function ---
const res = awesomeFunctions.greeter();
] = function(done) {
const res = awesomeFunctions.greeter("swedish");
assert.equal(res, "Hej!");
const res = awesomeFunctions.greeter("swedish");
assert.equal(typeof res, "string");
] = function(done) {
const res = awesomeFunctions.greeter();
assert.equal(res, "Hello!");
// --- Callback function ---
] = function(done) {
assert.doesNotThrow(function() {
assert.ok(err);
] = function(done) {
assert.doesNotThrow(function() {
assert.ok(res);
assert.equal(typeof res, "number");
assert.equal(res, 2);
assert.notEqual(res, 3);
// This file contains the pizza menu
1: { name: "Capricciosa", price: 5 },
2: { name: "Hawaii", price: 6 },
3: { name: "Margarita", price: 3 },
4: { name: "Bosse's Special", price: 7 }
const http = require("http");
const https = require("https");
const environment = require("./config");
const fs = require("fs");
const path = require("path");
const url = require("url");
const helpers = require("./helpers");
const handlers = require("./handlers");
// Instantiate the server module object
const httpsOptions = {
server.unifiedServer(req, res);
// Add https config file
// Instantiate HTTPS server
server.httpServer = http.createServer(function(req, res) {
// Instantiate the HTTP server
server.unifiedServer = function(req, res) {
server.unifiedServer(req, res);
const trimmedPath = path.replace(/^\/+|\/+$/g, "");
// Get the queryString as an object
// Get the HTTP method
const parsedUrl = url.parse(req.url, true);
const method = req.method.toLowerCase();
// Get the headers
// Get the payload
const decoder = new StringDecoder("utf-8");
req.on("data", function(data) {
buffer += decoder.write(data);
req.on("end", function() {
buffer += decoder.end();
typeof server.router[trimmedPath] !== "undefined"
? server.router[trimmedPath]
payload: helpers.parseJsonToObject(buffer)
// Define the data object to send to the handler
server.processHandlerInput(
// Process handler input
server.processHandlerInput(
// Determine the type of response (fallback to JSON)
server.processHandlerInput = function(
if (contentType == "json") {
res.setHeader("Content-Type", "application/json");
payload = typeof payload == "object" ? payload : {};
payloadString = JSON.stringify(payload);
if (contentType == "html") {
if (contentType == "favicon") {
res.setHeader("Content-Type", "text/html");
res.setHeader("Content-Type", "image/x-icon");
if (contentType == "plain") {
res.setHeader("Content-Type", "text/plain");
if (contentType == "css") {
res.setHeader("Content-Type", "text/css");
if (contentType == "png") {
res.setHeader("Content-Type", "image/png");
if (contentType == "jpg") {
res.setHeader("Content-Type", "image/jpeg");
// Return the response-parts common to all content-types
res.writeHead(statusCode);
res.end(payloadString);
if (statusCode == 200) {
"\x1b[32m%s\x1b[0m",
"\x1b[31m%s\x1b[0m",
console.log(payload);
"session/create": handlers.sessionCreate,
"session/deleted": handlers.sessionDeleted,
// Define the router
"account/create": handlers.accountCreate,
"account/deleted": handlers.accountDeleted,
"account/edit": handlers.accountEdit,
"cart/create": handlers.cartCreate,
"cart/deleted": handlers.cartDeleted,
"cart/edit": handlers.cartEdit,
"api/users": handlers.users,
"api/menu": handlers.menu,
"api/ping": handlers.ping,
"api/tokens": handlers.tokens,
"api/carts": handlers.carts,
"api/order": handlers.order,
"examples/error": handlers.exampleError
server.init = function() {
"\x1b[35m%s\x1b[0m",
// Override the NODE_ENV variable
"\x1b[36m%s\x1b[0m",
// Logic for testrunner
// Container for the tests
// Add the unit tests
_app.tests.unit = require("./unit");
_app.tests.api = require("./api");
_app.countTests = function() {
// Count all  the tests
for (let key in _app.tests) {
const subTests = _app.tests[key];
if (_app.tests.hasOwnProperty(key)) {
for (let testName in subTests) {
// Run all the tests collecting the errors and successes
const errors = [];
_app.runTests = function() {
if (subTests.hasOwnProperty(testName)) {
const limit = _app.countTests();
for (let key in _app.tests) {
if (_app.tests.hasOwnProperty(key)) {
const subTests = _app.tests[key];
for (let testName in subTests) {
let testValue = subTests[testName];
if (subTests.hasOwnProperty(testName)) {
(function() {
// call the test
} catch (e) {
errors.push({
if (counter == limit) {
testValue(function() {
if (counter == limit) {
console.log("Total Tests: ", limit);
console.log("----------BEGIN TEST REPORT----------");
// Producee a test outcome report
console.log("Fail ", errors.length);
console.log("pass: ", successes);
// if there are errors print them in detail
errors.forEach(testError => {
if (errors.length > 0) {
console.log("\x1b[31m%s\x1b[0m", testError.name);
console.log(testError.error);
console.log("");
console.log("----------END ERROR DETAILS----------");
const app = require("./../index");
console.log("----------END TEST REPORT----------");
const assert = require("assert");
const http = require("http");
const config = require("./../lib/config");
helpers.makeGetRequest = function(path, callback) {
const requestDetails = {
// Configure the request details
"Content-Type": "application/json"
// Send the request
assert.doesNotThrow(function() {
const req = http.request(requestDetails, function(res) {
app.init(function(err) {
assert.equal(res.statusCode,200);
// Make request to /ping
// Make a request to /api/users
helpers.makeGetRequest('/api/ping',function(res){
helpers.makeGetRequest('/api/users',function(res){
assert.equal(res.statusCode,400);
assert.equal(res.statusCode,404);
import { StyleSheet, Text, View } from "react-native";
import FlexDimensions from "./components/FlexDimensions";
// Make a request to a random path
import FrontEdge from "./components/FrontEdge";
import FlexDirections from "./components/FlexDirections";
import PizzaTranslator from "./components/PizzaTranslator";
import BasicButtons from "./components/BasicButtons";
import FetchExample from "./components/FetchExample";
import FlatListBasics from "./components/FlatListBasics";
export default class App extends React.Component {
<View style={{ flex: 1 }}>
{/*         <FlexDimensions />
<FlexDirections />
<FrontEdge />
<BasicButtons />
<PizzaTranslator />
<FetchExample />
<FlatListBasics />
<SectionListBasics />*/}
const styles = StyleSheet.create({
"image": "./assets/splash.png",
"icon": "./assets/icon.png",
"assetBundlePatterns": [
const helpers = require("../lib/helpers");
assert.equal(typeof val, "number");
const val = helpers.getANumber();
const assert = require("assert");
// Assert that the getANumber function returns 1
const val = helpers.getANumber();
const val = helpers.getANumber();
// Assert that the getANumber function is not returning 2
assert.equal(val, 1);
module.exports = function(api) {
"main": "node_modules/expo/AppEntry.js",
assert.notEqual(val, 2);
"devDependencies": {
presets: ['babel-preset-expo'],
module.exports = function(api) {
"icon": "./assets/images/icon.png",
presets: ['babel-preset-expo'],
"image": "./assets/images/splash.png",
"assetBundlePatterns": [
"main": "node_modules/expo/AppEntry.js",
"@expo/samples": "2.1.1",
"devDependencies": {
import { AppLoading, Asset, Font, Icon } from 'expo';
import AppNavigator from './navigation/AppNavigator';
startAsync={this._loadResourcesAsync}
export default class App extends React.Component {
onError={this._handleLoadingError}
onFinish={this._handleFinishLoading}
<View style={styles.container}>
<AppNavigator />
_loadResourcesAsync = async () => {
return Promise.all([
Asset.loadAsync([
require('./assets/images/robot-dev.png'),
require('./assets/images/robot-prod.png'),
Font.loadAsync({
_handleLoadingError = error => {
// reporting service, for example Sentry
console.warn(error);
_handleFinishLoading = () => {
this.setState({ isLoadingComplete: true });
const styles = StyleSheet.create({
import { View } from "react-native";
import { Provider } from "react-redux";
import { createStore, applyMiddleware } from "redux";
import reducers from "./reducers";
import Router from "./Router";
export default class App extends React.Component {
<Provider store={store}>
<View style={{ flex: 1 }}>
module.exports = function(api) {
presets: ['babel-preset-expo'],
"icon": "./assets/icon.png",
"assetBundlePatterns": [
"main": "node_modules/expo/AppEntry.js",
"devDependencies": {
"image": "./assets/splash.png",
import { StyleSheet } from "react-native";
import { Scene, Router } from "react-native-router-flux";
import PhotoSearch from "./components/PhotoSearch";
import About from "./components/About";
import Settings from "./components/Settings";
<Scene key="root" style={styles.container}>
const styles = StyleSheet.create({
const RouterComponent = () => {
"extends": "./babel.config.js"
"build": "./node_modules/.bin/babel src -d dist",
"devDependencies": {
"main": "src/index.js",
"@babel/cli": "7.0.0-beta.47",
"@babel/code-frame": "7.0.0-beta.47",
"@babel/core": "7.0.0-beta.47",
"@types/react": "16.4.12",
"@babel/plugin-proposal-decorators": "7.0.0-beta.47",
"@types/react-native": "0.56.14",
"peerDependencies": {
"modulePathIgnorePatterns": [
"<rootDir>/examples/"
"transformIgnorePatterns": [
"./test/setup.js"
"filePath": "./eslintrc.js"
'jest/globals': true,
plugins: ['react', 'jest'],
'jest/no-disabled-tests': 'warn',
'jest/no-focused-tests': 'error',
'jest/no-identical-title': 'error',
'jest/valid-expect': 'error',
'react/forbid-prop-types': 'warn',
'react/prop-types': 'off',
'react/require-default-props': 'off',
'import/no-unresolved': [
'max-len': ['error', 180],
'react/no-unused-prop-types': 'off',
'import/no-cycle': 'warn',
'react/jsx-filename-extension': [
'import/no-self-import': 'warn',
extensions: ['.js', '.jsx'],
'import/no-extraneous-dependencies': [
'import/resolver': {
allow: ['^'],
extensions: ['.js', '.android.js', '.ios.js'],
import { Enthused } from './Enthused';
constructor(props) {
export class App extends React.Component {
this.addText = this.addText.bind(this);
this.handleChange = this.handleChange.bind(this);
this.setState({ text: text });
toggleEnthusiasm() {
this.setState({ text: text });
this.setText(e.target.value);
addText(newText) {
<button onClick={this.toggleEnthusiasm}>
<h1>Auto-Enthusiasm</h1>
if (this.state.enthused) {
onChange={this.handleChange}>
export class Enthused extends React.Component {
<h2>{this.state.text}</h2>
document.getElementById('app')
this.interval = setInterval(() => {
componentWillUnmount(prevProps, prevState) {
componentDidMount() {
this.props.addText('!');
clearInterval(this.interval);
<button onClick={this.props.toggle}>
"homepage": "https://rinbo.github.io/title-maker/",
"Cucumber Features": {
var path = require("path");
var https = require("https");
var fs = require("fs");
var helpers = require("./helpers");
var _data = require("./data");
var http = require("http");
var _logs = require("./logs");
var util = require("util");
var debug = util.debuglog("workers");
// Replace console.log to debug -> now all console.logs
// Start app with NODE_DEBUG=workers node index.js ->
var url = require("url");
// the app with "NODE_DEBUG=workers"
// Instantiate the worker module object
// Lookup all checks, get their data, send to validator
workers.gatherAllChecks = function() {
// Get all the checks
_data.list("checks", function(err, checks) {
if (!err && checks && checks.length > 0) {
checks.forEach(function(check) {
if (!err && originalCheckData) {
// Read in the check data
workers.validateCheckData(originalCheckData);
// Sanity-check the check-data,
originalCheckData.id.trim().length == 20
originalCheckData.userPhone.trim().length == 10
? originalCheckData.id.trim()
workers.validateCheckData = function(originalCheckData) {
? originalCheckData.userPhone.trim()
originalCheckData.url.trim().length > 0
["up", "down"].indexOf(originalCheckData.state) > -1
? originalCheckData.url.trim()
workers.performCheck(originalCheckData);
workers.performCheck = function(originalCheckData) {
// Prepare the intial check outcome
// If checks fail, log the error and fail silently
var checkOutcome = {
// Construct the request
// Mark that the outcome has not been sent yet
var parsedUrl = url.parse(
method: originalCheckData.method.toUpperCase(),
// Grab the status of the sent request
// Update the checkOutcome and pass the data along
var requestDetails = {
// Bind to the error event so it doesn't get thrown
if (!outcomeSent) {
req.on("error", function(e) {
// Update the checkOutcome and pass the data along
if (!outcomeSent) {
checkOutcome.error = { error: true, value: e };
// Bind to the timeout event
req.on("timeout", function() {
// End the request
// Update the checkOutcome and pass the data along
if (!outcomeSent) {
// Decide if the check is considered up or down
var timeOfCheck = Date.now();
// Decide if an alert is warranted
// Log the outcome
// Update the check data
if (alertWarranted) {
// Alert the user as to a change in their check status
// Save the updates
workers.alertUserToStatusChange(newCheckData);
workers.alertUserToStatusChange = function(newCheckData) {
workers.log = function(
newCheckData.method.toUpperCase() +
// Form the log data
// Send check data to a log file
var logString = JSON.stringify(logData);
// Convert the data to a string
// Determine the name of the log file
// Append the log string to the file
_logs.append(logFileName, logString, function(err) {
// Timer to execute the worker-process once per minute
console.log("Logging to file failed");
console.log("Logging to file succeeded");
setInterval(function() {
workers.loop = function() {
// Rotate (compress) the log files
workers.gatherAllChecks();
// List all the (non compressed) log files
workers.rotateLogs = function() {
_logs.list(false, function(err, logs) {
logs.forEach(function(logName) {
// Compress the data to a different file
if (!err && logs && logs.length > 0) {
var logId = logName.replace(".log", "");
var newFileId = logId + "-" + Date.now();
_logs.compress(logId, newFileId, function(err) {
if (!err) {
// Truncate the log
_logs.truncate(logId, function(err) {
if (!err) {
console.log("Success truncating logfile");
} else {
console.log("Error truncating logfile");
// Timer to execute the log-rotation process once per day
setInterval(function() {
workers.logRotationLoop = function() {
workers.rotateLogs();
}, 1000 * 60 * 60 * 24);
// Execute all the checks immediately
workers.init = function() {
// Call the loop so the checks will execute later on
// Compress all the logs immediately
workers.gatherAllChecks();
workers.logRotationLoop();
// Export the module
// File containing helper functions
workers.rotateLogs();
const https = require("https");
const config = require("./config");
const querystring = require("querystring");
const menu = require("./menu");
const crypto = require("crypto");
helpers.parseJsonToObject = function(str) {
const fs = require("fs");
const path = require("path");
const obj = JSON.parse(str);
helpers.hash = function(str) {
.createHmac("sha256", config.hashingSecret)
// Create a SHA256 hash
helpers.generateRandomString = function(strLength) {
.digest("hex");
if (typeof str == "string" && str.length > 0) {
// Define which characters are valid for the string
source.trim().length > 0 &&
for (i = 1; i <= strLength; i++) {
["tok_visa", "tok_mastercard"].indexOf(source) > -1
? source.trim()
? description.trim()
if (amount && source && description) {
// Configure the request payload
const payload = {
// NOTE: Amount is in cents!
const stringPayload = querystring.stringify(payload);
"Content-Length": Buffer.byteLength(stringPayload)
const requestDetails = {
// Configure the request details
// Instantiate the request object
// Callback successfully if the request went through
// Grab the status of the sent request
if (status == 200 || status == 201) {
callback(false);
path: "/v1/charges",
callback("Status code returned was " + status);
// Bind to the error event so it doesn't get thrown
// Add the payload
req.write(stringPayload);
// End the request
// Send mail function
cartData.email.trim().length > 0 &&
cartData.email.trim().indexOf("@") > -1
if (email && price && pizzas && amounts) {
req.on("error", function(e) {
pizzas.forEach((pizza, index) => {
//componse the message to be sent
? cartData.email.trim()
// Configure the request payload
// NOTE: Amount is in cents!
const payload = {
} USD each \r\n `;
const stringPayload = querystring.stringify(payload);
const requestDetails = {
// Instantiate the request object
"Content-Length": Buffer.byteLength(stringPayload)
// Configure the request details
// Callback successfully if the request went through
// Grab the status of the sent request
callback(false);
menu[pizza].price
// Bind to the error event so it doesn't get thrown
if (status == 200 || status == 201) {
callback("Status code returned was " + status);
req.write(stringPayload);
req.on("error", function(e) {
// Add the payload
// Calculate price of cart contents in cents
helpers.calculatePrice = function(cartData, callback) {
// End the request
const { pizzas, amounts } = cartData;
if (pizzas && amounts) {
callback("Could not calculate price");
callback(price);
if (!err && str && str.length > 0) {
if (templateName) {
// Do interpolation on the string
callback("A valid template name was not specified");
callback(false, finalString);
helpers.interpolate = function(str, data) {
for (let keyName in config.templateGlobals) {
if (config.templateGlobals.hasOwnProperty(keyName)) {
for (let key in data) {
callback("No template could be found");
const find = `{${key}}`;
const replace = data[key];
str = str.replace(find, replace);
if (!err && headerString) {
callback(false, fullString);
if (!err && headerString) {
// Add them all together
callback("Could not find the footer template");
// Get the footer
callback("Could not find the header template");
helpers.getStaticAsset = function(fileName, callback) {
const publicDir = path.join(__dirname, "/../public/");
if (!err && data) {
// Get the contents of a static (public) asset
callback("No file could be found");
callback("A valid file name was not specified");
// Samele for testing
callback(false, data);
helpers.getANumber = function() {
const readline = require("readline");
const events = require("events");
const debug = util.debuglog("cli");
const util = require("util");
const e = new _events();
const os = require("os");
class _events extends events {}
const v8 = require("v8");
const _data = require("./data");
const helpers = require("./helpers");
// Instantiate the cli module object
cli.responders.help();
const menu = require("./menu");
cli.responders.help();
e.on("man", function(str) {
e.on("help", function(str) {
e.on("menu", function(str) {
e.on("exit", function(str) {
e.on("stats", function(str) {
cli.responders.exit();
cli.responders.stats();
cli.responders.menu();
e.on("more order info", function(str) {
e.on("list recent orders", function(str) {
cli.responders.recentOrders();
cli.responders.moreOrderInfo(str);
e.on("list new users", function(str) {
e.on("list user", function(str) {
cli.responders.listNewUsers();
// Responders object
cli.responders.listUser(str);
cli.responders.help = function() {
// Codify the commands and their explanations
cli.responders = {};
const commands = {
cli.horizontalLine();
cli.centered("CLI MANUAL");
cli.horizontalLine();
for (var key in commands) {
if (commands.hasOwnProperty(key)) {
var value = commands[key];
for (i = 0; i < padding; i++) {
console.log(line);
cli.verticalSpace(1);
// End with another horizontal line
cli.verticalSpace(2);
cli.verticalSpace();
cli.horizontalLine();
// Create a vertical space
cli.verticalSpace = function(lines) {
console.log("");
for (i = 0; i < lines; i++) {
// Create a horizontal line across the screen
// Put in enough dashes to go across the screen
// Get the available screen size
cli.horizontalLine = function() {
console.log(line);
// Create centered text on the screen
cli.centered = function(str) {
// Get the available screen size
// Calculate the left padding there should be
// Put in left padded spaces before the string itself
for (i = 0; i < width; i++) {
console.log(line);
for (i = 0; i < leftPadding; i++) {
cli.responders.stats = function() {
cli.responders.exit = function() {
"CPU Count": os.cpus().length,
"Load Average": os.loadavg().join(" "),
"Free Memory": os.freemem(),
// Compile an object of stats
"Allocated Heap Used (%)": Math.round(
(v8.getHeapStatistics().used_heap_size /
v8.getHeapStatistics().total_heap_size) *
"Available Heap Allocated (%)": Math.round(
v8.getHeapStatistics().heap_size_limit) *
Uptime: os.uptime() + " Seconds"
(v8.getHeapStatistics().total_heap_size /
// Create a header for the stats
cli.verticalSpace(2);
// Log out each stat
cli.centered("SYSTEM STATISTICS");
cli.horizontalLine();
for (let key in stats) {
if (stats.hasOwnProperty(key)) {
let value = stats[key];
cli.horizontalLine();
console.log(line);
let line = "\x1b[33m " + key + "\x1b[0m";
// Create a footer for the stats
cli.responders.menu = function() {
for (i = 0; i < padding; i++) {
cli.verticalSpace();
cli.horizontalLine();
cli.verticalSpace();
cli.horizontalLine();
Object.values(menu).forEach(item => {
let price = `\x1b[33m $${item.price} \x1b[0m`;
for (i = 0; i < padding; i++) {
cli.centered("MENU");
console.log(name);
cli.responders.recentOrders = function() {
_data.list("orders", function(err, orderIds) {
if (!err && orderIds && orderIds.length > 0) {
cli.verticalSpace();
orderIds.forEach(function(userId) {
if (!err && orderData) {
console.log(userId);
cli.verticalSpace();
// Display all info for a given order
cli.responders.moreOrderInfo = function(str) {
const arr = str.split("--");
cli.verticalSpace();
// Get ID from string
typeof arr[1] == "string" && arr[1].trim().length > 0
// Lookup the order
? arr[1].trim()
if (!err && orderData) {
// Print their JSON object with text highlighting
cli.verticalSpace();
console.dir(orderData, { colors: true });
cli.verticalSpace();
// List new users (last 24 hours)
_data.list("users", function(err, emails) {
cli.responders.listNewUsers = function() {
cli.verticalSpace();
emails.forEach(function(email) {
if (!err && emails && emails.length > 0) {
console.log(email);
if (!err && userData) {
// Display all info on a given user
cli.responders.listUser = function(str) {
// Get ID from string
cli.verticalSpace();
const arr = str.split("--");
typeof arr[1] == "string" && arr[1].trim().length > 0
// Lookup the user
? arr[1].trim()
// Remove the hashed password
// Print their JSON object with text highlighting
_data.read("users", email, function(err, userData) {
if (!err && userData) {
console.dir(userData, { colors: true });
cli.processInput = function(str) {
const uniqueInputs = [
uniqueInputs.some(function(input) {
if (str.toLowerCase().indexOf(input) > -1) {
e.emit(input, str);
// If no match is found, tell the user to try again
cli.verticalSpace();
console.log("Sorry, try again");
if (!matchFound) {
cli.verticalSpace();
// Send to console, in gold
console.log("\x1b[33m%s\x1b[0m", "The CLI is running");
const _interface = readline.createInterface({
// Start the interface
cli.init = function() {
// Create an initial prompt
// Handle each line of input separately
_interface.on("line", function(str) {
// Send to the input processor
_interface.prompt();
// Re-initialize the prompt afterwards
cli.processInput(str);
_interface.on("close", function() {
_interface.prompt();
process.exit(0);
// Export the module
const helpers = require("./helpers");
const _data = require("./data");
const config = require("./config");
handlers.ping = function(data, callback) {
handlers.notFound = function(data, callback) {
handlers._users[data.method](data, callback);
if (acceptableMethods.indexOf(data.method) > -1) {
handlers._users = {};
handlers._users.post = function(data, callback) {
data.payload.firstName.trim().length > 0
data.payload.lastName.trim().length > 0
handlers.users = function(data, callback) {
? data.payload.firstName.trim()
? data.payload.phone.trim()
? data.payload.lastName.trim()
data.payload.phone.trim().length == 10
data.payload.password.trim().length > 0
// Make sure that the user does not already exist
? data.payload.password.trim()
_data.read("users", phone, function(err, data) {
if (hashedPassword) {
const hashedPassword = helpers.hash(password);
if (!err) {
callback(200);
const userObject = {
console.log(err);
// User already exists
callback(400, { Error: "Missing required fields" });
? data.queryStringObject.phone.trim()
data.queryStringObject.phone.trim().length == 10
if (tokenIsValid) {
handlers._users.get = function(data, callback) {
if (!err && data) {
_data.read("users", phone, function(err, data) {
callback(200, data);
handlers._users.put = function(data, callback) {
callback(400, { Error: "Missing required field" });
callback(403, {
data.payload.phone.trim().length == 10
data.payload.lastName.trim().length > 0
? data.payload.phone.trim()
data.payload.firstName.trim().length > 0
callback(404);
? data.payload.lastName.trim()
if (firstName || lastName || password) {
? data.payload.password.trim()
data.payload.password.trim().length > 0
if (tokenIsValid) {
if (!err && userData) {
if (firstName) {
if (!err) {
if (lastName) {
} else {
callback(200);
if (password) {
console.log(err);
callback(400, { Error: "Missing fields to update" });
callback(403, {
handlers._users.delete = function(data,callback){
// Check that phone number is valid
callback(400, { Error: "Missing required field" });
// Get token from headers
// Lookup the user
_data.read('users',phone,function(err,userData){
if(!err && userData){
// Delete the user's data
_data.delete('users',phone,function(err){
if(!err){
if(checksToDelete > 0){
// Loop through the checks
userChecks.forEach(function(checkId){
// Delete the check
if(err){
if(tokenIsValid){
if(!deletionErrors){
}
if(checksDeleted == checksToDelete){
callback(200);
}
}
});
} else {
} else {
} else {
callback(400,{'Error' : 'Missing required field'})
});
callback(200);
if (acceptableMethods.indexOf(data.method) > -1) {
handlers.tokens = function(data, callback) {
handlers._tokens[data.method](data, callback);
handlers._tokens.post = function(data, callback) {
handlers._tokens = {};
data.payload.phone.trim().length == 10
data.payload.password.trim().length > 0
? data.payload.password.trim()
? data.payload.phone.trim()
if (phone && password) {
if (!err && userData) {
const hashedPassword = helpers.hash(password);
_data.read("users", phone, function(err, userData) {
if (hashedPassword == userData.hashedPassword) {
const expires = Date.now() + 1000 * 60 * 60;
const tokenId = helpers.createRandomString(20);
callback(200, tokenObject);
if (!err) {
const tokenObject = {
callback(400, { Error: "Missing required fields" });
handlers._tokens.get = function(data, callback) {
callback(400, {
data.queryStringObject.id.trim().length == 20
? data.queryStringObject.id.trim()
_data.read("tokens", id, function(err, tokenData) {
callback(200, tokenData);
if (!err && tokenData) {
callback(404);
callback(400, { Error: "Missing required field" });
handlers._tokens.put = function(data, callback) {
_data.read("tokens", id, function(err, tokenData) {
? data.payload.id.trim()
if (id && extend) {
if (tokenData.expires > Date.now()) {
if (!err && tokenData) {
tokenData.expires = Date.now() + 1000 * 60 * 60;
if (!err) {
callback(200);
handlers._tokens.delete = function(data, callback) {
data.queryStringObject.id.trim().length == 20
callback(400, {
? data.queryStringObject.id.trim()
_data.read("tokens", id, function(err, data) {
if (!err && data) {
_data.delete("tokens", id, function(err) {
if (!err) {
callback(200);
callback(400, { Error: "Missing required field" });
if (!err && tokenData) {
_data.read("tokens", id, function(err, tokenData) {
callback(true);
handlers.checks = function(data, callback) {
callback(false);
if (acceptableMethods.indexOf(data.method) > -1) {
callback(false);
handlers._checks[data.method](data, callback);
handlers._checks.post = function(data, callback) {
? data.payload.url.trim()
handlers._checks = {};
["https", "http"].indexOf(data.payload.protocol) > -1
_data.read("tokens", token, function(err, tokenData) {
if (!err && tokenData) {
if (!err && userData) {
: [];
const checkObject = {
if (userChecks.length < config.maxChecks) {
userData.checks.push(checkId);
if (!err) {
if (!err) {
} else {
callback(200, checkObject);
});
callback(500, {
}
});
} else {
callback(400, {
Error: `You are already storing ${
callback(403);
} checks which is the maximum`
handlers._checks.get = function(data, callback) {
_data.read("checks", id, function(err, checkData) {
? data.queryStringObject.id.trim()
callback(403);
if (!err && checkData) {
data.queryStringObject.id.trim().length == 20
callback(404);
callback(200, checkData);
callback(400, { Error: "Missing required field" });
if (tokenIsValid) {
handlers._checks.put = function(data, callback) {
["https", "http"].indexOf(data.payload.protocol) > -1
? data.payload.id.trim()
? data.payload.url.trim()
_data.read("checks", id, function(err, checkData) {
if (url) {
if (!err && checkData) {
if (protocol) {
if (tokenIsValid) {
if (timeoutSeconds) {
if (method) {
if (successCodes) {
callback(200);
if (!err) {
} else {
callback(400, { Error: "Missing fields to update" });
callback(403);
handlers._checks.delete = function(data, callback) {
callback(400, { Error: "Missing required fields" });
? data.queryStringObject.id.trim()
data.queryStringObject.id.trim().length == 20
_data.read("checks", id, function(err, checkData) {
_data.delete("checks", id, function(err) {
if (tokenIsValid) {
if (!err && checkData) {
if (!err && userData) {
if (!err) {
if (checkPosition > -1) {
userChecks.splice(checkPosition, 1);
_data.update(
function(err) {
: [];
if (!err) {
} else {
callback(500, {
callback(200);
}
});
);
} else {
}
callback(500, {
} else {
}
});
callback(500, {
callback(403);
});
} else {
callback(400, { Error: "Missing required field" });
app.client.request = function(
// Container for frontend application
// AJAX Client (for RESTful API)
// Interface for making API calls
if (queryStringObject.hasOwnProperty(queryKey)) {
for (let queryKey in queryStringObject) {
path = typeof path == "string" ? path : "/";
if (counter > 1) {
// Add the key and value
? method.toUpperCase()
const xhr = new XMLHttpRequest();
xhr.open(method, requestUrl, true);
// For each header sent, add it to the request
// Form the http request as a JSON type
if (headers.hasOwnProperty(headerKey)) {
xhr.setRequestHeader(headerKey, headers[headerKey]);
if (app.config.sessionToken) {
for (let headerKey in headers) {
// When the request comes back, handle the response
if (xhr.readyState == XMLHttpRequest.DONE) {
// Callback if requested
xhr.onreadystatechange = function() {
callback(statusCode, parsedResponse);
if (callback) {
callback(statusCode, false);
} catch (e) {
// Send the payload as JSON
xhr.send(payloadString);
const payloadString = JSON.stringify(payload);
.getElementById("logoutButton")
app.bindLogoutButton = function() {
.addEventListener("click", function(e) {
// Bind the logout button
// Stop it from redirecting anywhere
app.logUserOut();
e.preventDefault();
// Log the user out then redirect them
app.logUserOut = function(redirectUser) {
// Set redirectUser to default to true
// Log the user out
const queryStringObject = {
app.client.request(
// Get the current token id
function(statusCode, responsePayload) {
// Set the app.config token as false
// Send the user to the logged out page
app.setSessionToken(false);
if (redirectUser) {
if (document.querySelector("form")) {
window.location = "/session/deleted";
app.bindForms = function() {
const allForms = document.querySelectorAll("form");
for (let i = 0; i < allForms.length; i++) {
allForms[i].addEventListener("submit", function(e) {
// Stop it from submitting
e.preventDefault();
let method = this.method.toUpperCase();
const payload = {};
// Turn the inputs into a payload
for (let i = 0; i < elements.length; i++) {
if (elements[i].type !== "submit") {
elements[i].type == "checkbox" &&
elements[i].classList.value.length > 0
? elements[i].classList.value
classOfElement.indexOf("multiselect") == -1
? elements[i].checked
? elements[i].value
: classOfElement.indexOf("intval") == -1
: parseInt(elements[i].value);
const elementIsChecked = elements[i].checked;
let nameOfElement = elements[i].name;
} else {
if (nameOfElement == "_method") {
if (nameOfElement == "httpmethod") {
if (elementIsChecked) {
if (nameOfElement == "uid") {
payload[nameOfElement] =
? payload[nameOfElement]
} else {
: [];
payload[nameOfElement] = valueOfElement;
if (formId == "checkout") {
app.client.request(
function(statusCode, responsePayload) {
// Call the API
// Display an error on the form if needed
if (statusCode !== 200) {
if (statusCode == 403) {
// log the user out
app.logUserOut();
} else {
document.querySelector(
).style.display = "block";
).innerHTML = error;
document.querySelector(
} else {
// Form response processor
const newPayload = {
if (formId == "accountCreate") {
app.client.request(
function(newStatusCode, newResponsePayload) {
// Display an error on the form if needed
if (newStatusCode !== 200) {
app.setSessionToken(newResponsePayload);
// Set the formError field with the error text
window.location = "/menu";
if (formId == "sessionCreate") {
app.setSessionToken(responsePayload);
if (formsWithSuccessMessages.indexOf(formId) > -1) {
window.location = "/menu";
if (formId == "accountEdit3") {
app.logUserOut(false);
window.location = "/account/deleted";
// and display a success modal
localStorage.removeItem("cart");
if (formId == "checkout") {
span.onclick = function() {
window.location = "/";
window.onclick = function(event) {
if (formId == "cartDelete") {
if (event.target == modal) {
app.getSessionToken = function() {
window.location = "/menu";
const tokenString = localStorage.getItem("token");
if (typeof tokenString == "string") {
const token = JSON.parse(tokenString);
app.setLoggedInClass(true);
app.setLoggedInClass(false);
app.setLoggedInClass(false);
if (typeof token == "object") {
// Set (or remove) the loggedIn class from the body
const target = document.querySelector("body");
app.setLoggedInClass = function(add) {
target.classList.add("loggedIn");
target.classList.remove("loggedIn");
localStorage.setItem("token", tokenString);
const tokenString = JSON.stringify(token);
app.setSessionToken = function(token) {
if (typeof token == "object") {
app.setLoggedInClass(true);
app.setLoggedInClass(false);
if (currentToken) {
app.renewToken = function(callback) {
// Update the token with a new expiration
app.client.request(
const payload = {
// Display an error on the form if needed
function(statusCode, responsePayload) {
if (statusCode == 200) {
"api/tokens",
app.client.request(
// Get the new token details
function(statusCode, responsePayload) {
// Display an error on the form if needed
if (statusCode == 200) {
callback(false);
app.setSessionToken(responsePayload);
} else {
app.setSessionToken(false);
callback(true);
app.setSessionToken(false);
callback(true);
app.setSessionToken(false);
app.loadDataOnPage = function() {
// Load data on the page
// Get the current page from the body class
// Logic for account settings page
if (primaryClass == "accountEdit") {
app.loadAccountEditPage();
// Logic for menu page
if (primaryClass == "menu") {
app.loadCartPage();
if (primaryClass == "cartCreate") {
app.loadMenuPage();
// Load the account edit page specifically
// Fetch the user data
var queryStringObject = {
app.client.request(
app.loadAccountEditPage = function() {
function(statusCode, responsePayload) {
if (statusCode == 200) {
// Put the hidden email field into both forms
app.logUserOut();
// Load the menu page specifically
app.loadMenuPage = function() {
// Fetch the user data
app.logUserOut();
const queryStringObject = {
if (statusCode == 200) {
app.client.request(
function(statusCode, responsePayload) {
// @TODO Logic for pizza ordering
app.loadCheckoutButton();
app.logUserOut();
console.log("Menu page");
app.logUserOut();
// Fetch the user data
app.loadCartPage = function() {
const queryStringObject = {
app.client.request(
app.displayCart();
function(statusCode, responsePayload) {
if (statusCode == 200) {
console.log("Menu page");
app.logUserOut();
app.logUserOut();
app.displayCart = function() {
// Read localStorage and load it on page
const cart = JSON.parse(localStorage.getItem("cart"));
if (cart.pizzas.indexOf(1) > -1) {
document.getElementById("cap").innerHTML = `${
document.getElementById("cap").innerHTML =
cart.amounts[cart.pizzas.indexOf(1)]
} Capprissiosa`;
document.getElementById("marg").innerHTML = `${
if (cart.pizzas.indexOf(2) > -1) {
cart.amounts[cart.pizzas.indexOf(2)]
if (cart.pizzas.indexOf(3) > -1) {
cart.amounts[cart.pizzas.indexOf(3)]
document.getElementById("haw").innerHTML = `${
if (cart.pizzas.indexOf(4) > -1) {
document.getElementById("bos").innerHTML = `${
app.createCart = function() {
cart.amounts[cart.pizzas.indexOf(4)]
} Bosse's Special`;
const cart = JSON.parse(localStorage.getItem("cart"));
//Check if a cart already exists
if (cart.amounts !== responsePayload.amounts) {
function(statusCode, responsePayload) {
app.client.request(
// It does not exist so lets create it
const payload = {};
app.client.request(
"api/carts",
function(statusCode, responsePayload) {
if (statusCode == 200) {
app.logUserOut();
} else {
window.location = "/checkout";
// Cart exists so just redirect user to payment
app.logUserOut();
window.location = "/checkout";
// Loop to renew token often
app.tokenRenewalLoop = function() {
app.renewToken(function(err) {
setInterval(function() {
// Bind the add-to-cart buttons
app.addToCart = function(pizza) {
if (cart.pizzas.indexOf(pizza) > -1) {
cart.amounts[cart.pizzas.indexOf(pizza)] += 1;
cart.pizzas.push(pizza);
cart = JSON.parse(localStorage.getItem("cart"));
cart.amounts.push(1);
cart.amounts = [1];
cart.pizzas = [pizza];
const cartString = JSON.stringify(cart);
localStorage.setItem("cart", cartString);
app.loadCheckoutButton = function() {
app.init = function() {
if (localStorage.getItem("cart")) {
// Init (bootstrapping)
// Bind all form submissions
// Bind logout logout button
app.getSessionToken();
app.bindLogoutButton();
// Get the token from localstorage
app.tokenRenewalLoop();
// Load data on page
window.onload = function() {
app.loadDataOnPage();
// Call the init processes after the window loads
"routes": [
"value": "${random-word}"
"apps": [
"code": {
"content_type": "application/war",
]
"actions": [
},
]
global.beginButton = document.getElementById('begin');
global.inputField = document.getElementById('input-field')
"map_routes": [
global.paper = document.getElementById('paper');
global.rock = document.getElementById('rock');
global.gameBoard = document.getElementById('game-board')
global.scissor = document.getElementById('scissor');
global.yesButton = document.getElementById('yes');
global.game = document.getElementById('game');
global.noButton = document.getElementById('no');
global.endGame = document.getElementById('end-game');
global.resultText = document.getElementById('result-text');
global.resultMatrix = [[t,w,l],[l,t,w],[w,l,t]];
global.gameLogger = document.getElementById('game-logger');
document.addEventListener('DOMContentLoaded', () => {
global.beginButton.addEventListener('click', event => {
global.rock.addEventListener('click', clickRock);
global.paper.addEventListener('click', clickPaper);
global.scissor.addEventListener('click', clickScissor);
function clickRock() {
let opponentChoice = getOpponentChoice();
function clickPaper() {
getResult(0, opponentChoice);
stopSpam(Date.now());
stopSpam(Date.now());
let opponentChoice = getOpponentChoice();
getResult(1, opponentChoice);
stopSpam(Date.now());
function clickScissor() {
let opponentChoice = getOpponentChoice();
function getResult(playerChoice, opponentChoice) {
getResult(2, opponentChoice);
} else if (result === "lose") {
setTimeout(clearOpView, 1400);
if (result === "win") {
function clearOpView() {
if (global.roundCount === numberOfRounds) {endGame()};
global.opponentChoice.classList.add('far');
function getOpponentChoice() {
let choice = Math.floor(Math.random() * 3);
global.opponentChoice.classList.add('fa-hand-rock');
global.opponentChoice.classList.add('fa-hand-paper');
function endGame() {
} else if (choice === 1) {
let winnerText = winner();
global.yesButton.addEventListener('click', () => {
if (choice === 0) {
addToGameLogger(winnerText);
global.noButton.addEventListener('click', () => {
function winner() {
while (global.gameLogger.firstChild) {
} else if (opponentScore > playerScore) {
return `Winner: ${global.playerLabel.innerText}`
if (playerScore > opponentScore) {
return `Winner: ${global.opponentLabel.innerText}.`
var start = new Date().getTime();
end = new Date().getTime();
while(end < start + ms) {
if (Date.now() < now + 1000) {
global.rock.removeEventListener('click', clickRock);
function stopSpam(now) {
setTimeout(reAddHandlers, 1000);
global.paper.addEventListener('click', clickPaper);
function reAddHandlers() {
global.scissor.addEventListener('click', clickScissor);
global.rock.addEventListener('click', clickRock);
function addToGameLogger(message) {
let node = document.createElement("div");
global.gameLogger.appendChild(node);
node.innerText = `Game${gameNumber} - ${message}`;
const helpers = require("./helpers");
const _data = require("./data");
// Instantiate request handlers object
const menu = require("./menu");
const handlers = {};
// === HTML HANDLERS BELOW ===
handlers.index = function(data, callback) {
// Reject any request that isn't a GET
if (data.method == "get") {
// Prepare data for interpolation
// Read in a template as a string
const templateData = {
// Add the universal header and footer
if (!err && str) {
if (!err && str) {
// Return that page as HTML
callback(500, undefined, "html");
callback(500, undefined, "html");
callback(200, str, "html");
callback(405, undefined, "html");
handlers.exampleError = function(data, callback) {
const err = new Error('This is an example error.');
// Reject any request that isn't a GET
handlers.accountCreate = function(data, callback) {
if (data.method == "get") {
// Prepare data for interpolation
const templateData = {
// Read in a template as a string
if (!err && str) {
// Add the universal header and footer
// Return that page as HTML
if (!err && str) {
callback(200, str, "html");
callback(405, undefined, "html");
callback(500, undefined, "html");
callback(500, undefined, "html");
// Create New Session
handlers.sessionCreate = function(data, callback) {
if (data.method == "get") {
// Reject any request that isn't a GET
// Prepare data for interpolation
// Read in a template as a string
const templateData = {
if (!err && str) {
if (!err && str) {
// Return that page as HTML
// Add the universal header and footer
callback(200, str, "html");
callback(500, undefined, "html");
callback(405, undefined, "html");
callback(500, undefined, "html");
handlers.accountEdit = function(data, callback) {
// Reject any request that isn't a GET
if (data.method == "get") {
// Prepare data for interpolation
const templateData = {
// Read in a template as a string
if (!err && str) {
// Add the universal header and footer
if (!err && str) {
// Return that page as HTML
callback(200, str, "html");
callback(500, undefined, "html");
callback(405, undefined, "html");
callback(500, undefined, "html");
handlers.sessionDeleted = function(data, callback) {
// Reject any request that isn't a GET
// Prepare data for interpolation
if (data.method == "get") {
const templateData = {
// Read in a template as a string
// Add the universal header and footer
if (!err && str) {
if (!err && str) {
callback(200, str, "html");
// Return that page as HTML
callback(500, undefined, "html");
callback(500, undefined, "html");
callback(405, undefined, "html");
// Account has been deleted
// Reject any request that isn't a GET
handlers.accountDeleted = function(data, callback) {
if (data.method == "get") {
// Prepare data for interpolation
const templateData = {
// Read in a template as a string
if (!err && str) {
// Add the universal header and footer
if (!err && str) {
callback(200, str, "html");
// Return that page as HTML
callback(500, undefined, "html");
callback(405, undefined, "html");
callback(500, undefined, "html");
handlers.menuGet = function(data, callback) {
// Reject any request that isn't a GET
if (data.method == "get") {
const templateData = {
// Prepare data for interpolation
// Read in a template as a string
if (!err && str) {
if (!err && str) {
// Add the universal header and footer
// Return that page as HTML
callback(200, str, "html");
callback(500, undefined, "html");
callback(500, undefined, "html");
callback(405, undefined, "html");
handlers.cartCreate = function(data, callback) {
// Reject any request that isn't a GET
if (data.method == "get") {
// Prepare data for interpolation
const templateData = {
if (!err && str) {
// Add the universal header and footer
// Read in a template as a string
if (!err && str) {
// Return that page as HTML
callback(200, str, "html");
callback(500, undefined, "html");
callback(500, undefined, "html");
callback(405, undefined, "html");
// Reject any request that isn't a GET
handlers.checkout = function(data, callback) {
if (data.method == "get") {
// Prepare data for interpolation
const templateData = {
// Read in a template as a string
// Add the universal header and footer
if (!err && str) {
// Return that page as HTML
if (!err && str) {
callback(200, str, "html");
callback(500, undefined, "html");
callback(405, undefined, "html");
// Reject any request that isn't a GET
handlers.favicon = function(data, callback) {
callback(500, undefined, "html");
if (data.method == "get") {
if (!err && data) {
// Read in the favicon's data
// Callback the data
callback(200, data, "favicon");
// Reject any request that isn't a GET
callback(500);
handlers.public = function(data, callback) {
if (data.method == "get") {
// Get the filename being requested
if (trimmedAssetName.length > 0) {
// Read in the asset's data
if (!err && data) {
if (trimmedAssetName.indexOf(".css") > -1) {
if (trimmedAssetName.indexOf(".png") > -1) {
if (trimmedAssetName.indexOf(".ico") > -1) {
if (trimmedAssetName.indexOf(".jpg") > -1) {
// Callback the data
callback(404);
callback(200, data, contentType);
callback(404);
// === API HANDLERS BELOW ===
// Define the ping handler
handlers.ping = function(data, callback) {
// Define noFound handler
handlers.notFound = function(data, callback) {
callback(404, { Error: "Handler not found!" });
// Define users handler
if (acceptableMethods.indexOf(data.method) > -1) {
handlers.users = function(data, callback) {
handlers._users[data.method](data, callback);
// Container for all users CRUD actions
handlers._users = {};
// Optional data: none
handlers._users.post = function(data, callback) {
data.payload.firstName.trim().length > 0
// Check that all required fields are filled out
? data.payload.firstName.trim()
data.payload.lastName.trim().length > 0
? data.payload.lastName.trim()
data.payload.email.trim().length > 0 &&
data.payload.email.indexOf("@") > -1
? data.payload.email.trim()
data.payload.password.trim().length > 0
data.payload.streetAddress.trim().length > 0
? data.payload.password.trim()
? data.payload.streetAddress.trim()
_data.read("users", email, function(err, data) {
if (hashedPassword) {
const userObject = {
// Hash the password
const hashedPassword = helpers.hash(password);
if (!err) {
// Create the user object
} else {
callback(200);
console.log(firstName);
// User already exists
// Required data: email
callback(400, {
// Optional data: none
handlers._users.get = function(data, callback) {
// Validate email param
data.queryStringObject.email.trim().length > 0 &&
data.queryStringObject.email.trim().indexOf("@") > -1
? data.queryStringObject.email.trim()
// Get token from headers
// Validate the token
_data.read("users", email, function(err, data) {
if (tokenIsValid) {
if (!err && data) {
callback(403, {
callback(200, data);
callback(404, {
// Required fields: email
// Validate fields
// Optional fields: All the rest
handlers._users.put = function(data, callback) {
data.payload.firstName.trim().length > 0
? data.payload.firstName.trim()
data.payload.lastName.trim().length > 0
? data.payload.lastName.trim()
data.payload.email.indexOf("@") > -1
? data.payload.email.trim()
data.payload.email.trim().length > 0 &&
data.payload.password.trim().length > 0
? data.payload.password.trim()
data.payload.streetAddress.trim().length > 0
? data.payload.streetAddress.trim()
// First check that we have an email address
// Check to see if there is anything to update
// Lookup the token in the headers
// Verify the token for this user
// Look up the user
if (tokenIsValid) {
if (!err && userData) {
// Update the provided fields
if (userData.firstName) {
if (userData.lastName) {
if (userData.password) {
if (userData.streetAddress) {
// Update the new values
if (!err) {
callback(200);
} else {
} else {
callback(400, { Error: "Dude, nothing to update" });
callback(403, {
// Require field: email
handlers._users.delete = function(data, callback) {
// Validate params
data.queryStringObject.email.trim().length > 0 &&
? data.queryStringObject.email.trim()
data.queryStringObject.email.trim().indexOf("@") > -1
// Get token from headers
// Verify this token for the given user
if (tokenIsValid) {
// Look up the user
if (!err && userData) {
_data.delete("users", email, function(err) {
if (!err) {
callback(200);
} else {
handlers.tokens = function(data, callback) {
if (acceptableMethods.indexOf(data.method) > -1) {
// Instantiate tokens helper object
handlers._tokens[data.method](data, callback);
// Required data: email, password
handlers._tokens = {};
// Optional data: none
// Validate request parameters
handlers._tokens.post = function(data, callback) {
data.payload.email.trim().length > 0 &&
data.payload.email.trim().indexOf("@") > -1
? data.payload.email.trim()
data.payload.password.trim().length > 0
? data.payload.password.trim()
if (email && password) {
// Look up the user who matches the provided email
_data.read("users", email, function(err, userData) {
const expires = Date.now() + 1000 * 60 * 60;
if (!err && userData) {
// Define tokenObject to save to file
const tokenObject = {
// Attempt to save it to file
if (!err) {
callback(200, tokenObject);
} else {
callback(400, {
// Required data: id
callback(400, "Missing required fields");
// Optional data: none
data.queryStringObject.id.trim().length == 20
handlers._tokens.get = function(data, callback) {
? data.queryStringObject.id.trim()
_data.read("tokens", id, function(err, tokenData) {
// Try to look up this id
if (!err && tokenData) {
callback(200, tokenData);
handlers._tokens.put = function(data, callback) {
// Required data: id, extend
? data.payload.id.trim()
if (id && extend) {
if (tokenData.expires > Date.now()) {
if (!err && tokenData) {
tokenData.expires = Date.now() + 1000 * 60 * 60;
_data.read("tokens", id, function(err, tokenData) {
// Attempt to update the token object
} else {
if (!err) {
callback(200);
callback(500, {
// Required data: id
callback(401, {
callback(400, {
// Optional data: none
handlers._tokens.delete = function(data, callback) {
? data.payload.id.trim()
// Attempt to read the token object
_data.read("tokens", id, function(err, tokenData) {
if (!err && tokenData) {
// Attempt to delete the object
if (!err) {
_data.delete("tokens", id, function(err) {
callback(200);
callback(400, {
// Attempt to read the token
_data.read("tokens", id, function(err, tokenData) {
if (!err && tokenData) {
callback(false);
callback(true);
// Instantiate the menu handler
callback(false);
if (acceptableMethods.indexOf(data.method) > -1) {
handlers._menu[data.method](data, callback);
handlers.menu = function(data, callback) {
const acceptableMethods = ["get"];
handlers._menu.get = function(data, callback) {
// Validate email field
handlers._menu = {};
// Required data - email and token
data.payload.email.trim().length > 0 &&
? data.payload.email.trim()
data.payload.email.trim().indexOf("@") > -1
// Get token from headers
callback(200, menu);
if (tokenIsValid) {
handlers.carts = function(data, callback) {
// Verify the token for this email address
if (acceptableMethods.indexOf(data.method) > -1) {
handlers._carts[data.method](data, callback);
// Declare the carts CRUD actions helper object
handlers._carts = {};
// Optional data: pizzas, amounts
// Determine the number of pizzas on the menu
// Required data: email
const numberOfPizzaTypes = Object.values(menu).length;
// Required header: token
handlers._carts.post = function(data, callback) {
data.payload.email.trim().indexOf("@") > -1
data.payload.email.trim().length > 0 &&
// Get token from headers
// Check that nothing is wrong with the pizza input
? data.payload.email.trim()
if (pizzas && amounts) {
// Create an Id for the carts file
if (tokenIsValid) {
const cartId = helpers.generateRandomString(20);
// Verify the token
if (pizzas.length !== amounts.length) {
amounts = [];
pizzas = [];
// Make a cart object
if (!err) {
const cartData = {
if (!err && userData) {
// Attempt to Create a cart
// Store the cartId in the user object
} else {
callback(200, cartData);
if (!err) {
}
});
} else {
callback(400, {
});
callback(400, {
} else {
// Required data: email
// Required header: token
data.queryStringObject.email.trim().length > 0 &&
handlers._carts.get = function(data, callback) {
data.queryStringObject.email.trim().indexOf("@") > -1
? data.queryStringObject.email.trim()
if (tokenIsValid) {
// Get token from headers
// Verify the token for the given user
if (!err && userData) {
userData.activeCart.trim().length > 0
? userData.activeCart.trim()
if (activeCart) {
if (!err && cartData) {
// Open the active cart and get its data
callback(200, cartData);
} else {
} else {
callback(400, {
// Required fields: email, pizzas, amounts
// Required headers: token
handlers._carts.put = function(data, callback) {
data.payload.email.trim().length > 0 &&
data.payload.email.trim().indexOf("@") > -1
// Get token from headers
? data.payload.email.trim()
// Verify the token for the given user
if (tokenIsValid) {
if (!err && userData) {
// See if there is an active cart
? userData.activeCart.trim()
userData.activeCart.trim().length > 0
if (activeCart) {
// Open the cart and pull out the data
if (!err && cartData) {
// Store the updated values
if (!err) {
} else {
}
callback(200, cartData);
});
} else {
callback(500, {
});
} else {
callback(404, {
} else {
callback(500, {
callback(400, {
callback(403, {
// Required header: token
// Required data: email
data.queryStringObject.email.trim().indexOf("@") > -1
handlers._carts.delete = function(data, callback) {
data.queryStringObject.email.trim().length > 0 &&
? data.queryStringObject.email.trim()
// Open the user object
// Get token from headers
if (tokenIsValid) {
// Verify the token for the given user
if (!err && userData) {
? userData.activeCart.trim()
userData.activeCart.trim().length > 0
// Pull out the active cart
if (activeCart) {
// Update the user object
if (!err) {
// Attempt to delete the cart
}
if (!err) {
callback(200);
} else {
});
} else {
} else {
callback(400, {
if (acceptableMethods.indexOf(data.method) > -1) {
const acceptableMethods = ["post"];
callback(403, {
handlers.order = function(data, callback) {
handlers._order[data.method](data, callback);
callback(405, { Error: "Cant't do that friend" });
// Order handler helper function
handlers._order = {};
// required data: email, cardToken
// optional data: description
// Validations - only acccepting visa and mastercard
handlers._order.post = function(data, callback) {
data.payload.email.trim().length > 0 &&
? data.payload.email.trim()
data.payload.email.trim().indexOf("@") > -1
? data.payload.cardToken.trim()
? data.payload.description.trim()
// Verify the token for the given user
if (email && cardToken) {
// Get token from headers
if (tokenIsValid) {
// Get the user object
// See if there is an active cart
userData.activeCart.trim().length > 0
if (!err && userData) {
? userData.activeCart.trim()
if (activeCart) {
// Read from the cart
if (!err && cartData) {
// Place an calculate the price
if (typeof price == "number") {
// Place order
helpers.makePayment(
function(err) {
// Save the order
const orderData = {
if (!err) {
payment: price / 100,
createdAt: Date.now()
};
) {
if (!err) {
//Delete the cart
if (!err) {
) {
function(err) {
helpers.sendReceipt(
if (!err) {
});
callback(200, {
} else {
callback(200, {
});
}
}
);
} else {
}
});
} else {
callback({
});
});
}
} else {
callback(500, { Error: err });
}
}
);
} else {
// Couldn't calculate price
}
} else {
});
} else {
callback(403, {
callback(400, {
callback(400, {
"assertion-error": {
"async-limiter": {
"array-flatten": {
"integrity": "sha1-TwSAXYf4/OjlEbwhCPjl46KH1Uc=",
"balanced-match": {
"dependencies": {
"basic-auth-connect": {
"safe-buffer": {
"integrity": "sha1-g2TUJIrDT/DvGy8r9JpsYM4NgbY=",
"integrity": "sha1-/bC0OWLKe0BFanwrtI/hc9otISI=",
"dependencies": {
"ansi-styles": {
"requires": {
"supports-color": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"brace-expansion": {
"browser-stdout": {
"capture-stack-trace": {
"code-point-at": {
"char-spinner": {
"color-convert": {
"command-line-args": {
"compressible": {
"dependencies": {
"command-line-usage": {
"compare-semver": {
"requires": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"concat-stream": {
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"dependencies": {
"requires": {
"connect-query": {
"core-util-is": {
"create-error-class": {
"integrity": "sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=",
"e2e_training_wheels": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
"es6-promisify": {
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
"integrity": "sha1-qEC0uK9kAyZMjbV/Txp0Mz74H+k=",
"requires": {
"dependencies": {
"fast-url-parser": {
"integrity": "sha1-i1vL2ewyfFBBv5qwI/1nUPEXfmU=",
"finalhandler": {
"filled-array": {
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"find-replace": {
"dependencies": {
"requires": {
"flat-arguments": {
"dependencies": {
"requires": {
"as-array": {
"dependencies": {
"lodash.isarguments": {
"lodash.isobject": {
"requires": {
"lodash.isobject": {
"integrity": "sha1-PI+41bW/S/kK4G4U8qUwpO2TXh0=",
"integrity": "sha1-8jP/zAjU2n1DLapEl3aYnbHfk/A=",
"get-func-name": {
"glob-slasher": {
"integrity": "sha1-/lLvpDMjP3Si/mTHq7m8hIICq5U=",
"integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
"integrity": "sha1-KRfrRL3JByztqUJXlUOEfjAX/k4=",
"https-proxy-agent": {
"integrity": "sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ=",
"is-fullwidth-code-point": {
"is-retry-allowed": {
"integrity": "sha1-EFNaEm0ky9Zff/zfFe8uYxB2tQU=",
"latest-version": {
"integrity": "sha1-VvjWE5YghHuAF/jx9NeOIRMkFos=",
"lodash._isnative": {
"integrity": "sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE=",
"lodash._objecttypes": {
"lodash.camelcase": {
"lodash.isarguments": {
"lodash._shimkeys": {
"integrity": "sha1-bpzJZm/wgfC1psl4uD4kLmlJ0gM=",
"integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo=",
"lodash.isobject": {
"integrity": "sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=",
"integrity": "sha1-SN6kbfj/djKxDXBrissmWR4rNyc=",
"lodash.padend": {
"lodash.values": {
"lowercase-keys": {
"integrity": "sha1-q/UUQ2s8twUAFieXjLzzCxKA7qQ=",
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
"integrity": "sha1-0B+mxlhZt2/PMbPLU6OCGjEdgFE=",
"requires": {
"dependencies": {
"dependencies": {
"integrity": "sha1-W/Rejkm6QYnhfUgnid/RW9FAt7Y=",
"minimist": {
"node-status-codes": {
"number-is-nan": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c=",
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
"package-json": {
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M=",
"path-is-absolute": {
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
"path-to-regexp": {
"integrity": "sha1-elfrVQpng/kRUzH89GY9XI4AelA="
"pinkie-promise": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"prepend-http": {
"process-nextick-args": {
"integrity": "sha1-ihvjZr+Pwj2yvSPxDG/pILQ4nR8="
"proxy-from-env": {
"integrity": "sha1-E+JtKK1rD/qpExLNO/cI7TUecjM=",
"dependencies": {
"minimist": {
"read-all-stream": {
"integrity": "sha1-NcPhd/IHjveJ7kv6+kNzB06u9Po=",
"reduce-flatten": {
"registry-auth-token": {
"readable-stream": {
"registry-url": {
"integrity": "sha1-wUL2tepNazNZAiypW2WAvSF/ic8=",
"dependencies": {
"path-to-regexp": {
"array-flatten": {
"requires": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
"setprototypeof": {
"string_decoder": {
"string-width": {
"strip-json-comments": {
"string-length": {
"dependencies": {
"ansi-styles": {
"requires": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"supports-color": {
"supports-color": {
"integrity": "sha1-lYYL/MXHbCd/j4Mm/Q9bLiDrohc=",
"unzip-response": {
"table-layout": {
"integrity": "sha1-uYTwh3/AqJwsdzzB73tbIytbBv4=",
"update-notifier": {
"dependencies": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"supports-color": {
"integrity": "sha1-HbSK1CLTQCRpqH99l73r/k+x48g=",
"url-parse-lax": {
"util-deprecate": {
"integrity": "sha1-Z+LoY3lyFVMN/zGOW/nc6/1Hsho=",
"write-file-atomic": {
"integrity": "sha1-7byQPMOF/ARSPZZqM1UEtVBNG9I=",
"array-flatten": {
"integrity": "sha1-TwSAXYf4/OjlEbwhCPjl46KH1Uc=",
"assertion-error": {
"async-limiter": {
"balanced-match": {
"dependencies": {
"safe-buffer": {
"basic-auth-connect": {
"integrity": "sha1-/bC0OWLKe0BFanwrtI/hc9otISI=",
"integrity": "sha1-g2TUJIrDT/DvGy8r9JpsYM4NgbY=",
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"ansi-styles": {
"requires": {
"supports-color": {
"browser-stdout": {
"capture-stack-trace": {
"brace-expansion": {
"command-line-args": {
"code-point-at": {
"color-convert": {
"char-spinner": {
"command-line-usage": {
"compressible": {
"dependencies": {
"requires": {
"compare-semver": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
"concat-stream": {
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"dependencies": {
"requires": {
"connect-query": {
"core-util-is": {
"create-error-class": {
"integrity": "sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=",
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
"e2e_training_wheels": {
"es6-promisify": {
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
"integrity": "sha1-qEC0uK9kAyZMjbV/Txp0Mz74H+k=",
"dependencies": {
"requires": {
"fast-url-parser": {
"integrity": "sha1-i1vL2ewyfFBBv5qwI/1nUPEXfmU=",
"filled-array": {
"finalhandler": {
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"dependencies": {
"requires": {
"find-replace": {
"dependencies": {
"flat-arguments": {
"as-array": {
"requires": {
"dependencies": {
"lodash.isarguments": {
"lodash.isobject": {
"requires": {
"lodash.isobject": {
"integrity": "sha1-PI+41bW/S/kK4G4U8qUwpO2TXh0=",
"integrity": "sha1-8jP/zAjU2n1DLapEl3aYnbHfk/A=",
"get-func-name": {
"integrity": "sha1-/lLvpDMjP3Si/mTHq7m8hIICq5U=",
"glob-slasher": {
"integrity": "sha1-KRfrRL3JByztqUJXlUOEfjAX/k4=",
"integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
"https-proxy-agent": {
"is-fullwidth-code-point": {
"integrity": "sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ=",
"is-retry-allowed": {
"integrity": "sha1-EFNaEm0ky9Zff/zfFe8uYxB2tQU=",
"latest-version": {
"integrity": "sha1-VvjWE5YghHuAF/jx9NeOIRMkFos=",
"lodash._isnative": {
"lodash._objecttypes": {
"integrity": "sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE=",
"lodash._shimkeys": {
"integrity": "sha1-bpzJZm/wgfC1psl4uD4kLmlJ0gM=",
"lodash.isarguments": {
"integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo=",
"lodash.camelcase": {
"integrity": "sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=",
"integrity": "sha1-SN6kbfj/djKxDXBrissmWR4rNyc=",
"lodash.padend": {
"lodash.isobject": {
"lodash.values": {
"lowercase-keys": {
"integrity": "sha1-q/UUQ2s8twUAFieXjLzzCxKA7qQ=",
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
"supports-color": {
"dependencies": {
"requires": {
"integrity": "sha1-0B+mxlhZt2/PMbPLU6OCGjEdgFE=",
"requires": {
"dependencies": {
"dependencies": {
"integrity": "sha1-W/Rejkm6QYnhfUgnid/RW9FAt7Y=",
"minimist": {
"number-is-nan": {
"node-status-codes": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c=",
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
"package-json": {
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M=",
"path-is-absolute": {
"path-to-regexp": {
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
"pinkie-promise": {
"integrity": "sha1-elfrVQpng/kRUzH89GY9XI4AelA=",
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"prepend-http": {
"process-nextick-args": {
"integrity": "sha1-ihvjZr+Pwj2yvSPxDG/pILQ4nR8=",
"proxy-from-env": {
"integrity": "sha1-E+JtKK1rD/qpExLNO/cI7TUecjM=",
"dependencies": {
"minimist": {
"read-all-stream": {
"integrity": "sha1-NcPhd/IHjveJ7kv6+kNzB06u9Po=",
"readable-stream": {
"reduce-flatten": {
"registry-url": {
"registry-auth-token": {
"dependencies": {
"integrity": "sha1-wUL2tepNazNZAiypW2WAvSF/ic8=",
"array-flatten": {
"requires": {
"setprototypeof": {
"path-to-regexp": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
"string-length": {
"string-width": {
"string_decoder": {
"dependencies": {
"strip-json-comments": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"supports-color": {
"requires": {
"supports-color": {
"unzip-response": {
"integrity": "sha1-uYTwh3/AqJwsdzzB73tbIytbBv4=",
"table-layout": {
"integrity": "sha1-lYYL/MXHbCd/j4Mm/Q9bLiDrohc=",
"update-notifier": {
"dependencies": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"supports-color": {
"integrity": "sha1-HbSK1CLTQCRpqH99l73r/k+x48g=",
"util-deprecate": {
"url-parse-lax": {
"integrity": "sha1-Z+LoY3lyFVMN/zGOW/nc6/1Hsho=",
"write-file-atomic": {
"integrity": "sha1-7byQPMOF/ARSPZZqM1UEtVBNG9I=",
"@webassemblyjs/wast-parser": "1.7.8"
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/helper-module-context": "1.7.8",
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/ast": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/wast-printer": "1.7.8"
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/wasm-gen": "1.7.8"
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/ieee754": {
"@webassemblyjs/leb128": {
"@xtuc/long": "4.2.1"
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/utf8": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8",
"@webassemblyjs/helper-wasm-section": "1.7.8",
"@webassemblyjs/wasm-gen": "1.7.8",
"@webassemblyjs/wasm-opt": "1.7.8",
"@webassemblyjs/wast-printer": "1.7.8"
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/ieee754": "1.7.8",
"@webassemblyjs/utf8": "1.7.8"
"@webassemblyjs/leb128": "1.7.8",
"@webassemblyjs/wasm-gen": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8"
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/ieee754": "1.7.8",
"@webassemblyjs/helper-api-error": "1.7.8",
"@webassemblyjs/wast-parser": {
"@webassemblyjs/leb128": "1.7.8",
"@webassemblyjs/helper-api-error": "1.7.8",
"@webassemblyjs/utf8": "1.7.8"
"@webassemblyjs/helper-fsm": "1.7.8",
"@webassemblyjs/helper-code-frame": "1.7.8",
"@xtuc/long": "4.2.1"
"@webassemblyjs/wast-printer": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/wast-parser": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"acorn-dynamic-import": {
"ajv-keywords": {
"@xtuc/ieee754": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
"array-flatten": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
"array-unique": {
"integrity": "sha1-TwSAXYf4/OjlEbwhCPjl46KH1Uc=",
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"inherits": {
"dependencies": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"requires": {
"assertion-error-formatter": {
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"assertion-error": {
"babel-code-frame": {
"babel-generator": {
"dependencies": {
"async-limiter": {
"babel-helper-define-map": {
"babel-helper-call-delegate": {
"integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
"babel-helper-function-name": {
"babel-helper-hoist-variables": {
"babel-helper-optimise-call-expression": {
"integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
"babel-helper-replace-supers": {
"babel-helper-get-function-arity": {
"integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
"babel-helper-regex": {
"integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
"babel-loader": {
"babel-helpers": {
"babel-messages": {
"babel-plugin-check-es2015-constants": {
"babel-plugin-transform-es2015-arrow-functions": {
"babel-plugin-transform-es2015-block-scoping": {
"babel-plugin-transform-es2015-computed-properties": {
"babel-plugin-transform-es2015-classes": {
"integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
"integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
"babel-plugin-transform-es2015-duplicate-keys": {
"babel-plugin-transform-es2015-destructuring": {
"integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
"babel-plugin-transform-es2015-function-name": {
"integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
"babel-plugin-transform-es2015-literals": {
"babel-plugin-transform-es2015-modules-amd": {
"babel-plugin-transform-es2015-for-of": {
"babel-plugin-transform-es2015-modules-commonjs": {
"integrity": "sha1-/4mhQrkRmpBhlfXxBuzzBdlAfSM=",
"babel-plugin-transform-es2015-modules-systemjs": {
"babel-plugin-transform-es2015-object-super": {
"integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
"babel-plugin-transform-es2015-modules-umd": {
"babel-plugin-transform-es2015-spread": {
"babel-plugin-transform-es2015-parameters": {
"babel-plugin-transform-es2015-template-literals": {
"babel-plugin-transform-es2015-sticky-regex": {
"babel-plugin-transform-es2015-typeof-symbol": {
"babel-plugin-transform-es2015-shorthand-properties": {
"integrity": "sha1-3sCfHN3/lLUqxz1QXITfWdzOs3I=",
"babel-plugin-transform-regenerator": {
"babel-plugin-transform-es2015-unicode-regex": {
"integrity": "sha1-4HA2lvveJ/Cj78rPi03KL3s6jy8=",
"babel-plugin-transform-strict-mode": {
"babel-polyfill": {
"babel-preset-es2015": {
"babel-register": {
"babel-core": {
"dependencies": {
"babel-runtime": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"dependencies": {
"babel-template": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"requires": {
"regenerator-runtime": {
"babel-traverse": {
"balanced-match": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"integrity": "sha1-/bC0OWLKe0BFanwrtI/hc9otISI=",
"is-descriptor": {
"basic-auth-connect": {
"integrity": "sha1-Qpzuu/pffpNueNc/vcfacWKyDiA=",
"binary-extensions": {
"becke-ch--regex--s0-0-v1--base--pl--lib": {
"integrity": "sha1-g2TUJIrDT/DvGy8r9JpsYM4NgbY=",
"brace-expansion": {
"requires": {
"extend-shallow": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=",
"dependencies": {
"browserify-cipher": {
"browserify-aes": {
"browserify-sign": {
"requires": {
"browserify-des": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-zlib": {
"builtin-status-codes": {
"browserify-rsa": {
"capture-stack-trace": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"dependencies": {
"supports-color": {
"dependencies": {
"chrome-trace-event": {
"define-property": {
"char-spinner": {
"dependencies": {
"is-fullwidth-code-point": {
"ansi-regex": {
"string-width": {
"requires": {
"requires": {
"dependencies": {
"strip-ansi": {
"ansi-regex": {
"string-width": {
"requires": {
"is-fullwidth-code-point": {
"strip-ansi": {
"requires": {
"requires": {
"code-point-at": {
"collection-visit": {
"component-emitter": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
"compressible": {
"color-convert": {
"concat-stream": {
"compare-semver": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"console-browserify": {
"constants-browserify": {
"connect-query": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
"convert-source-map": {
"copy-descriptor": {
"copy-concurrently": {
"core-util-is": {
"create-error-class": {
"integrity": "sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=",
"cucumber-expressions": {
"integrity": "sha1-R8nFc3gcL/ch161bLNHJf0OZq44=",
"crypto-browserify": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs=",
"decode-uri-component": {
"cucumber-tag-expressions": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"detect-indent": {
"requires": {
"define-property": {
"domain-browser": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
"diffie-hellman": {
"end-of-stream": {
"error-stack-parser": {
"enhanced-resolve": {
"integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
"es6-promisify": {
"escape-string-regexp": {
"es6-iterator": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
"eslint-scope": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
"evp_bytestokey": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"define-property": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"extend-shallow": {
"dependencies": {
"is-extendable": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"integrity": "sha1-qEC0uK9kAyZMjbV/Txp0Mz74H+k=",
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk=",
"requires": {
"fast-deep-equal": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
"fast-url-parser": {
"integrity": "sha1-i1vL2ewyfFBBv5qwI/1nUPEXfmU=",
"extend-shallow": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"fast-json-stable-stringify": {
"filled-array": {
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"dependencies": {
"flat-arguments": {
"finalhandler": {
"dependencies": {
"requires": {
"find-cache-dir": {
"as-array": {
"dependencies": {
"lodash.isobject": {
"lodash.isarguments": {
"integrity": "sha1-PI+41bW/S/kK4G4U8qUwpO2TXh0=",
"requires": {
"requires": {
"lodash.isobject": {
"fragment-cache": {
"flush-write-stream": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"fs-write-stream-atomic": {
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"dependencies": {
"integrity": "sha1-8jP/zAjU2n1DLapEl3aYnbHfk/A=",
"requires": {
"ansi-regex": {
"are-we-there-yet": {
"code-point-at": {
"balanced-match": {
"brace-expansion": {
"console-control-strings": {
"core-util-is": {
"requires": {
"deep-extend": {
"detect-libc": {
"requires": {
"concat-map": {
"delegates": {
"requires": {
"fs-minipass": {
"fs.realpath": {
"requires": {
"has-unicode": {
"requires": {
"requires": {
"iconv-lite": {
"ignore-walk": {
"requires": {
"requires": {
"inherits": {
"inflight": {
"is-fullwidth-code-point": {
"minimatch": {
"requires": {
"minipass": {
"requires": {
"minimist": {
"requires": {
"requires": {
"requires": {
"minizlib": {
"node-pre-gyp": {
"requires": {
"npm-bundled": {
"requires": {
"npm-packlist": {
"requires": {
"requires": {
"number-is-nan": {
"requires": {
"object-assign": {
"requires": {
"os-homedir": {
"os-tmpdir": {
"requires": {
"path-is-absolute": {
"process-nextick-args": {
"requires": {
"dependencies": {
"readable-stream": {
"requires": {
"minimist": {
"safe-buffer": {
"safer-buffer": {
"requires": {
"set-blocking": {
"signal-exit": {
"string_decoder": {
"requires": {
"string-width": {
"strip-ansi": {
"requires": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"requires": {
"requires": {
"wide-align": {
"get-func-name": {
"dependencies": {
"requires": {
"glob-slasher": {
"get-caller-file": {
"integrity": "sha1-/lLvpDMjP3Si/mTHq7m8hIICq5U=",
"global-modules-path": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"integrity": "sha1-KRfrRL3JByztqUJXlUOEfjAX/k4=",
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"https-browserify": {
"dependencies": {
"https-proxy-agent": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=",
"requires": {
"dependencies": {
"import-local": {
"integrity": "sha1-Sl/W0nzDMvN+VBmlBNu4NxBckok=",
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE=",
"indent-string": {
"dependencies": {
"integrity": "sha1-ftGxQQxqDg94z5XTuEQMY/eLhhQ=",
"requires": {
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"requires": {
"dependencies": {
"is-binary-path": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-data-descriptor": {
"requires": {
"dependencies": {
"is-descriptor": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
"is-extendable": {
"is-fullwidth-code-point": {
"is-generator": {
"requires": {
"dependencies": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"is-plain-object": {
"integrity": "sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ=",
"is-retry-allowed": {
"dependencies": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
"integrity": "sha1-EFNaEm0ky9Zff/zfFe8uYxB2tQU=",
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
"json-schema-traverse": {
"json-parse-better-errors": {
"knuth-shuffle-seeded": {
"integrity": "sha1-VvjWE5YghHuAF/jx9NeOIRMkFos=",
"loader-utils": {
"latest-version": {
"loader-runner": {
"lodash._isnative": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"lodash._objecttypes": {
"integrity": "sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE=",
"lodash._shimkeys": {
"integrity": "sha1-bpzJZm/wgfC1psl4uD4kLmlJ0gM=",
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168=",
"lodash.debounce": {
"lodash.isarguments": {
"integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo=",
"lodash.isobject": {
"integrity": "sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=",
"lodash.values": {
"integrity": "sha1-SN6kbfj/djKxDXBrissmWR4rNyc=",
"loose-envify": {
"lowercase-keys": {
"integrity": "sha1-q/UUQ2s8twUAFieXjLzzCxKA7qQ=",
"map-age-cleaner": {
"integrity": "sha1-6b296UogpawYsENA/Fdk1bCdkB0=",
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
"minimalistic-crypto-utils": {
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"dependencies": {
"miller-rabin": {
"minimalistic-assert": {
"requires": {
"is-extendable": {
"minimist": {
"dependencies": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
"move-concurrently": {
"integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw=",
"node-status-codes": {
"normalize-path": {
"node-libs-browser": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"number-is-nan": {
"npm-run-path": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
"dependencies": {
"define-property": {
"requires": {
"requires": {
"object-visit": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"os-browserify": {
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c=",
"p-is-promise": {
"parallel-transform": {
"package-json": {
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
"path-is-absolute": {
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M=",
"path-dirname": {
"path-browserify": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
"path-to-regexp": {
"integrity": "sha1-elfrVQpng/kRUzH89GY9XI4AelA=",
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"pinkie-promise": {
"dependencies": {
"requires": {
"requires": {
"locate-path": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
"requires": {
"p-locate": {
"posix-character-classes": {
"requires": {
"prepend-http": {
"process-nextick-args": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY=",
"integrity": "sha1-ihvjZr+Pwj2yvSPxDG/pILQ4nR8=",
"promise-inflight": {
"proxy-from-env": {
"public-encrypt": {
"dependencies": {
"requires": {
"integrity": "sha1-E+JtKK1rD/qpExLNO/cI7TUecjM=",
"querystring-es3": {
"integrity": "sha1-NcPhd/IHjveJ7kv6+kNzB06u9Po=",
"read-all-stream": {
"regenerator-runtime": {
"integrity": "sha1-M2w+/BIgrc7dosn6tntaeVWjNlg=",
"readable-stream": {
"registry-auth-token": {
"regenerator-transform": {
"regexpu-core": {
"registry-url": {
"dependencies": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"remove-trailing-separator": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
"require-directory": {
"repeat-string": {
"repeat-element": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
"require-main-filename": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=",
"resolve-from": {
"integrity": "sha1-wUL2tepNazNZAiypW2WAvSF/ic8=",
"dependencies": {
"path-to-regexp": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
"schema-utils": {
"array-flatten": {
"serialize-error": {
"serialize-javascript": {
"set-blocking": {
"extend-shallow": {
"dependencies": {
"setprototypeof": {
"shebang-command": {
"setimmediate": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"shebang-regex": {
"requires": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"snapdragon-node": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"snapdragon-util": {
"dependencies": {
"is-descriptor": {
"source-list-map": {
"source-map-resolve": {
"source-map-support": {
"source-map-url": {
"split-string": {
"requires": {
"stack-generator": {
"source-map": {
"stacktrace-gps": {
"stacktrace-js": {
"static-extend": {
"integrity": "sha1-d2ymRqlbxsayuQd2U2p/xyxt21g=",
"dependencies": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"dependencies": {
"requires": {
"define-property": {
"stream-browserify": {
"stream-shift": {
"string-length": {
"string_decoder": {
"string-width": {
"integrity": "sha1-GhkY1ALY/D+Y+/I02wvMjMEOlyY=",
"supports-color": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
"strip-json-comments": {
"integrity": "sha1-lYYL/MXHbCd/j4Mm/Q9bLiDrohc=",
"to-arraybuffer": {
"timers-browserify": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
"to-fast-properties": {
"dependencies": {
"to-object-path": {
"to-regex-range": {
"tty-browserify": {
"requires": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=",
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=",
"commander": {
"dependencies": {
"uglifyjs-webpack-plugin": {
"source-map": {
"dependencies": {
"extend-shallow": {
"source-map": {
"dependencies": {
"set-value": {
"requires": {
"requires": {
"dependencies": {
"unique-filename": {
"requires": {
"isobject": {
"has-value": {
"dependencies": {
"requires": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
"integrity": "sha1-uYTwh3/AqJwsdzzB73tbIytbBv4=",
"has-values": {
"unzip-response": {
"update-notifier": {
"dependencies": {
"punycode": {
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
"punycode": {
"dependencies": {
"integrity": "sha1-HbSK1CLTQCRpqH99l73r/k+x48g=",
"integrity": "sha1-WdAa8f2z/t4KxOYysKtfbOl8kzA=",
"url-parse-lax": {
"v8-compile-cache": {
"util-deprecate": {
"integrity": "sha1-Z+LoY3lyFVMN/zGOW/nc6/1Hsho=",
"@webassemblyjs/ast": "1.7.8",
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"@webassemblyjs/helper-module-context": "1.7.8",
"@webassemblyjs/wasm-edit": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8",
"vm-browserify": {
"ansi-styles": {
"dependencies": {
"webpack-sources": {
"requires": {
"source-map": {
"dependencies": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
"which-module": {
"requires": {
"write-file-atomic": {
"ansi-regex": {
"dependencies": {
"integrity": "sha1-7byQPMOF/ARSPZZqM1UEtVBNG9I=",
"requires": {
"is-fullwidth-code-point": {
"strip-ansi": {
"string-width": {
"requires": {
"yargs-parser": {
"dependencies": {
"camelcase": {
"@babel/code-frame": {
"@babel/highlight": "^7.0.0"
"@babel/code-frame": "^7.0.0",
"@babel/generator": "^7.2.2",
"@babel/helpers": "^7.2.0",
"@babel/template": "^7.2.2",
"@babel/parser": "^7.2.2",
"@babel/traverse": "^7.2.2",
"@babel/types": "^7.2.2",
"dependencies": {
"@babel/generator": {
"@babel/types": "^7.3.0",
"@babel/helper-annotate-as-pure": {
"requires": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/types": "^7.3.0",
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-builder-react-jsx": {
"@babel/helper-call-delegate": {
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-create-class-features-plugin": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-replace-supers": "^7.2.3"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-define-map": {
"@babel/helper-explode-assignable-expression": {
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-function-name": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/helper-hoist-variables": {
"@babel/types": "^7.0.0"
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/types": "^7.0.0"
"@babel/helper-module-transforms": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/template": "^7.2.2",
"@babel/types": "^7.2.2",
"@babel/helper-plugin-utils": {
"@babel/helper-optimise-call-expression": {
"@babel/types": "^7.0.0"
"@babel/helper-regex": {
"@babel/helper-remap-async-to-generator": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-wrap-function": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-replace-supers": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.2.3",
"@babel/template": "^7.1.0",
"@babel/helper-simple-access": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": {
"@babel/helper-wrap-function": {
"@babel/helper-function-name": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.2.0"
"@babel/helpers": {
"@babel/highlight": {
"@babel/template": "^7.1.2",
"@babel/types": "^7.3.0"
"@babel/traverse": "^7.1.5",
"@babel/parser": {
"@babel/plugin-external-helpers": {
"@babel/plugin-proposal-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-proposal-decorators": {
"@babel/plugin-proposal-export-default-from": {
"@babel/plugin-syntax-decorators": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-nullish-coalescing-operator": {
"@babel/plugin-proposal-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-object-rest-spread": "^7.2.0"
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-optional-chaining": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-optional-chaining": "^7.2.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-export-default-from": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-nullish-coalescing-operator": {
"@babel/plugin-syntax-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-chaining": {
"@babel/plugin-transform-arrow-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/plugin-transform-block-scoping": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/plugin-transform-classes": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-transform-computed-properties": {
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/plugin-transform-flow-strip-types": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-flow": "^7.2.0"
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-function-name": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-literals": {
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-object-assign": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-simple-access": "^7.1.0"
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/plugin-transform-parameters": {
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-jsx": {
"@babel/helper-builder-react-jsx": "^7.3.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-display-name": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-react-jsx-source": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-runtime": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-regenerator": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-regex": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-typescript": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/helper-regex": "^7.0.0",
"@babel/register": {
"home-or-tmp": {
"dependencies": {
"source-map": {
"source-map-support": {
"requires": {
"@babel/template": {
"@babel/runtime": {
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.2.2",
"@babel/types": "^7.2.2"
"@babel/code-frame": "^7.0.0",
"@babel/generator": "^7.2.2",
"@babel/traverse": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/parser": "^7.2.3",
"@babel/types": "^7.2.2",
"@babel/types": {
"@expo/vector-icons": {
"from": "github:expo/vector-icons#expo-font-fix",
"@expo/websql": {
"@types/fbemitter": {
"integrity": "sha1-//DPnBuqH3D54dZYt8OaQg2bEKk=",
"@types/invariant": {
"@types/lodash.zipobject": {
"@types/lodash": {
"@types/lodash": "*"
"absolute-path": {
"@types/uuid-js": {
"@types/websql": {
"ajv-keywords": {
"integrity": "sha1-p4di+9rftSl76ZsV01p4Wy8JW/c="
"ansi-escapes": {
"integrity": "sha1-qCJQ3bABXponyoLoLqYDu/pF768="
"dependencies": {
"arr-diff": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"kind-of": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"is-extendable": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"define-property": {
"fill-range": {
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"requires": {
"kind-of": {
"dependencies": {
"isobject": {
"micromatch": {
"requires": {
"integrity": "sha1-bnIHtOzbObCviDA/pa4ivajfYcs="
"are-we-there-yet": {
"requires": {
"array-reduce": {
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-unique": {
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"babel-code-frame": {
"dependencies": {
"async-limiter": {
"ansi-styles": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"js-tokens": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"dependencies": {
"requires": {
"supports-color": {
"babel-generator": {
"babel-helper-builder-react-jsx": {
"integrity": "sha1-Of+DE7dci2Xc7/HzHTg+D/KkCKA=",
"dependencies": {
"babel-helper-call-delegate": {
"babel-helper-define-map": {
"integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
"babel-helper-function-name": {
"babel-helper-get-function-arity": {
"babel-helper-optimise-call-expression": {
"babel-helper-hoist-variables": {
"integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
"integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
"babel-helper-replace-supers": {
"integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
"babel-messages": {
"babel-helpers": {
"babel-plugin-check-es2015-constants": {
"babel-plugin-module-resolver": {
"integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
"babel-plugin-syntax-class-properties": {
"babel-plugin-syntax-flow": {
"babel-plugin-syntax-jsx": {
"babel-plugin-syntax-object-rest-spread": {
"integrity": "sha1-CvMqmm4Tyno/1QaeYtew9Y0NiUY="
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-class-properties": {
"integrity": "sha1-ugNgk3+NBuQBgKQ/4NVhb/9TLPM="
"babel-plugin-syntax-trailing-function-commas": {
"babel-plugin-transform-es2015-arrow-functions": {
"babel-plugin-transform-es2015-block-scoping": {
"babel-plugin-transform-es2015-classes": {
"babel-plugin-transform-es2015-computed-properties": {
"integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
"babel-plugin-transform-es2015-destructuring": {
"integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
"babel-plugin-transform-es2015-function-name": {
"babel-plugin-transform-es2015-for-of": {
"integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
"babel-plugin-transform-es2015-modules-commonjs": {
"babel-plugin-transform-es2015-object-super": {
"babel-plugin-transform-es2015-literals": {
"babel-plugin-transform-es2015-shorthand-properties": {
"integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
"babel-plugin-transform-es2015-parameters": {
"babel-plugin-transform-es2015-template-literals": {
"babel-plugin-transform-es2015-spread": {
"babel-plugin-transform-es3-property-literals": {
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-transform-flow-strip-types": {
"babel-plugin-transform-react-display-name": {
"babel-plugin-transform-react-jsx": {
"integrity": "sha1-Z+K/Hx6ck6sI25Z5LgU5K/LMKNE=",
"babel-plugin-transform-strict-mode": {
"integrity": "sha1-hAoCjn30YN/DotKfDA2R9jduZqM=",
"babel-polyfill": {
"dependencies": {
"regenerator-runtime": {
"integrity": "sha1-M2w+/BIgrc7dosn6tntaeVWjNlg="
"@babel/plugin-proposal-decorators": "^7.1.0",
"babel-preset-expo": {
"babel-preset-fbjs": {
"babel-register": {
"dependencies": {
"dependencies": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-runtime": {
"regenerator-runtime": {
"babel-template": {
"babel-traverse": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"dependencies": {
"requires": {
"to-fast-properties": {
"dependencies": {
"balanced-match": {
"define-property": {
"dependencies": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"isobject": {
"brace-expansion": {
"bplist-creator": {
"bplist-parser": {
"buffer-alloc": {
"buffer-alloc-unsafe": {
"builtin-modules": {
"dependencies": {
"isobject": {
"caller-callsite": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"capture-exit": {
"integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I="
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"dependencies": {
"requires": {
"arr-union": {
"define-property": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"isobject": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"string-width": {
"dependencies": {
"requires": {
"collection-visit": {
"code-point-at": {
"color-convert": {
"color-support": {
"color-string": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"compressible": {
"component-emitter": {
"dependencies": {
"requires": {
"concat-stream": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"dependencies": {
"convert-source-map": {
"copy-descriptor": {
"requires": {
"core-util-is": {
"integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="
"parse-json": {
"create-react-context": {
"dependencies": {
"create-react-class": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"requires": {
"decode-uri-component": {
"define-property": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"isobject": {
"detect-indent": {
"detect-newline": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"errorhandler": {
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"event-target-shim": {
"eventemitter3": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"dependencies": {
"cross-spawn": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"expand-brackets": {
"requires": {
"expand-range": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"@babel/runtime": "^7.1.2",
"@expo/websql": "^1.0.1",
"@types/fbemitter": "^2.0.32",
"@types/invariant": "^2.2.29",
"@types/lodash.zipobject": "^4.1.4",
"@types/qs": "^6.5.1",
"@types/uuid-js": "^0.7.1",
"@types/websql": "^0.0.27",
"expo-analytics-segment": {
"expo-ads-admob": {
"expo-app-auth": {
"expo-app-loader-provider": {
"expo-background-fetch": {
"expo-barcode-scanner": {
"expo-camera-interface": {
"expo-barcode-scanner-interface": {
"expo-constants-interface": {
"expo-constants": {
"expo-contacts": {
"expo-face-detector-interface": {
"expo-face-detector": {
"expo-file-system": {
"expo-file-system-interface": {
"expo-font-interface": {
"expo-google-sign-in": {
"expo-image-loader-interface": {
"expo-location": {
"expo-localization": {
"expo-local-authentication": {
"expo-media-library": {
"expo-permissions": {
"expo-payments-stripe": {
"expo-permissions-interface": {
"expo-react-native-adapter": {
"expo-sensors": {
"expo-sensors-interface": {
"expo-task-manager": {
"integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",
"expo-task-manager-interface": {
"extend-shallow": {
"external-editor": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"fast-deep-equal": {
"fast-json-stable-stringify": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"fbjs-scripts": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"integrity": "sha1-Uj4U/a9SSIBbsC9i78M75wP1GGU=",
"dependencies": {
"cross-spawn": {
"requires": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"filename-regex": {
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"dependencies": {
"finalhandler": {
"requires": {
"find-cache-dir": {
"find-babel-config": {
"follow-redirects": {
"requires": {
"dependencies": {
"fragment-cache": {
"integrity": "sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=",
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"dependencies": {
"are-we-there-yet": {
"ansi-regex": {
"requires": {
"brace-expansion": {
"balanced-match": {
"requires": {
"concat-map": {
"code-point-at": {
"console-control-strings": {
"deep-extend": {
"requires": {
"delegates": {
"core-util-is": {
"detect-libc": {
"fs-minipass": {
"requires": {
"fs.realpath": {
"requires": {
"requires": {
"has-unicode": {
"iconv-lite": {
"ignore-walk": {
"requires": {
"requires": {
"inflight": {
"requires": {
"inherits": {
"requires": {
"is-fullwidth-code-point": {
"minimatch": {
"minimist": {
"requires": {
"minipass": {
"requires": {
"minizlib": {
"requires": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"requires": {
"npm-packlist": {
"npm-bundled": {
"requires": {
"requires": {
"number-is-nan": {
"object-assign": {
"os-homedir": {
"requires": {
"os-tmpdir": {
"requires": {
"path-is-absolute": {
"requires": {
"process-nextick-args": {
"dependencies": {
"minimist": {
"requires": {
"readable-stream": {
"requires": {
"safe-buffer": {
"safer-buffer": {
"set-blocking": {
"signal-exit": {
"string-width": {
"requires": {
"string_decoder": {
"requires": {
"strip-ansi": {
"requires": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"requires": {
"wide-align": {
"get-caller-file": {
"isobject": {
"dependencies": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"dependencies": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"hoist-non-react-statics": {
"requires": {
"hosted-git-info": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"statuses": {
"dependencies": {
"import-fresh": {
"ansi-regex": {
"dependencies": {
"strip-ansi": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"dependencies": {
"requires": {
"is-builtin-module": {
"is-data-descriptor": {
"dependencies": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"requires": {
"is-descriptor": {
"dependencies": {
"is-directory": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-equal-shallow": {
"is-extendable": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-fullwidth-code-point": {
"dependencies": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"requires": {
"dependencies": {
"isobject": {
"is-plain-object": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-posix-bracket": {
"is-primitive": {
"isomorphic-fetch": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"jest-docblock": {
"jest-haste-map": {
"jest-serializer": {
"json-parse-better-errors": {
"json-schema-traverse": {
"json-stable-stringify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"load-json-file": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"dependencies": {
"loader-utils": {
"requires": {
"lodash.filter": {
"lodash.isequal": {
"lodash.mapvalues": {
"lodash.padend": {
"integrity": "sha1-0uPuv/DZ05rVD1y9G1KnvOa7YRs="
"lodash.padstart": {
"integrity": "sha1-UvBWEP/53tQiYRRB7R/BI6AwAbM="
"lodash.throttle": {
"integrity": "sha1-wj6RtxAkKscMN/HhzaknTMOb8vQ="
"lodash.zipobject": {
"integrity": "sha1-s5n1q6j/YqdG9peb8gshT5ZNvvg="
"lottie-react-native": {
"loose-envify": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"@babel/core": "^7.0.0",
"merge-stream": {
"@babel/generator": "^7.0.0",
"@babel/plugin-external-helpers": "^7.0.0",
"@babel/template": "^7.0.0",
"@babel/parser": "^7.0.0",
"@babel/traverse": "^7.0.0",
"@babel/types": "^7.0.0",
"ansi-styles": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"requires": {
"metro-babel7-plugin-react-transform": {
"requires": {
"@babel/helper-module-imports": "^7.0.0"
"metro-react-native-babel-preset": {
"@babel/plugin-transform-classes": "^7.0.0",
"requires": {
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/plugin-transform-typescript": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/template": "^7.0.0",
"requires": {
"mime-types": {
"node-fetch": {
"@babel/core": "^7.0.0",
"supports-color": {
"requires": {
"metro-babel-register": {
"@babel/register": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0"
"dependencies": {
"metro-babel7-plugin-react-transform": {
"metro-memory-fs": {
"metro-config": {
"metro-minify-uglify": {
"metro-react-native-babel-preset": {
"@babel/plugin-syntax-dynamic-import": "^7.0.0",
"@babel/plugin-transform-destructuring": "^7.0.0",
"@babel/plugin-transform-classes": "^7.0.0",
"@babel/plugin-transform-block-scoping": "^7.0.0",
"@babel/plugin-transform-function-name": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-object-assign": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-runtime": "^7.0.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.0.0",
"@babel/plugin-transform-sticky-regex": "^7.0.0",
"@babel/template": "^7.0.0",
"metro-resolver": {
"@babel/plugin-transform-typescript": "^7.0.0",
"metro-source-map": {
"requires": {
"arr-diff": {
"dependencies": {
"min-document": {
"requires": {
"integrity": "sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=",
"is-extendable": {
"dependencies": {
"requires": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"dependencies": {
"minimist": {
"moment-timezone": {
"dependencies": {
"requires": {
"arr-diff": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"requires": {
"is-extendable": {
"requires": {
"node-notifier": {
"node-modules-regexp": {
"integrity": "sha1-XzPUfxPSFQ35PgywNmmemC94/78="
"normalize-path": {
"normalize-package-data": {
"npm-run-path": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"object-assign": {
"number-is-nan": {
"dependencies": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"define-property": {
"requires": {
"object-visit": {
"dependencies": {
"requires": {
"isobject": {
"dependencies": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"isobject": {
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"opencollective": {
"ansi-escapes": {
"dependencies": {
"ansi-styles": {
"requires": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"node-fetch": {
"inquirer": {
"requires": {
"requires": {
"supports-color": {
"integrity": "sha1-ttmec5n3jWXDuq/+8fsojpuFJDo=",
"dependencies": {
"minimist": {
"wordwrap": {
"integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"parse-node-version": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"path-is-absolute": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-to-regexp": {
"integrity": "sha1-z4uvrm7d/0tafvsYUmnqr0YQ3b0="
"pinkie-promise": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"posix-character-classes": {
"plugin-error": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"pouchdb-collections": {
"pretty-format": {
"integrity": "sha1-/mOhfal3YRq+98uAJssalVP9g1k="
"dependencies": {
"ansi-regex": {
"integrity": "sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8="
"process-nextick-args": {
"query-string": {
"dependencies": {
"is-number": {
"range-parser": {
"react-clone-referenced-element": {
"react-devtools-core": {
"react-deep-force-update": {
"dependencies": {
"react-lifecycles-compat": {
"requires": {
"react-native": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"ansi-styles": {
"requires": {
"requires": {
"supports-color": {
"node-fetch": {
"regenerator-runtime": {
"requires": {
"pretty-format": {
"react-native-dismiss-keyboard": {
"react-native-branch": {
"react-native-drawer-layout": {
"react-native-drawer-layout-polyfill": {
"react-native-gesture-handler": {
"react-native-maps": {
"from": "github:expo/react-native-maps#v0.22.1-exp.0"
"react-native-reanimated": {
"react-native-router-flux": {
"react-native-safe-area-view": {
"react-native-screens": {
"react-native-safe-module": {
"react-native-svg": {
"react-native-tab-view": {
"react-native-view-shot": {
"react-native-vector-icons": {
"react-navigation": {
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"path-to-regexp": {
"requires": {
"react-navigation-deprecated-tab-navigator": {
"react-navigation-stack": {
"react-navigation-drawer": {
"dependencies": {
"react-navigation-tabs": {
"requires": {
"react-native-tab-view": {
"integrity": "sha1-nb/Z2SdSjDqp9ETkVYw3gwq4wmo=",
"@babel/runtime": "^7.2.0",
"hoist-non-react-statics": {
"dependencies": {
"requires": {
"react-timer-mixin": {
"integrity": "sha1-4aQL0Krvxy6N/Xp82gmvhQZjl7s=",
"react-transform-hmr": {
"readable-stream": {
"regenerate-unicode-properties": {
"regenerator-runtime": {
"dependencies": {
"regenerator-transform": {
"extend-shallow": {
"requires": {
"is-extendable": {
"regexpu-core": {
"requires": {
"dependencies": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"remove-trailing-separator": {
"repeat-element": {
"repeat-string": {
"require-directory": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-main-filename": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"resolve-from": {
"restore-cursor": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"integrity": "sha1-pfE/957zt0D+MKqAP7CfmIBdR4I="
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"rx-lite-aggregates": {
"safer-buffer": {
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"define-property": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"is-descriptor": {
"requires": {
"kind-of": {
"extend-shallow": {
"requires": {
"is-extendable": {
"dependencies": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"isobject": {
"micromatch": {
"requires": {
"integrity": "sha1-XWFr6KXmB9VOEUr65Vt+ry/MMkA="
"schema-utils": {
"dependencies": {
"requires": {
"serialize-error": {
"statuses": {
"set-blocking": {
"serve-static": {
"extend-shallow": {
"requires": {
"dependencies": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"setimmediate": {
"setprototypeof": {
"shebang-regex": {
"shebang-command": {
"simple-plist": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"dependencies": {
"base64-js": {
"xmlbuilder": {
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"requires": {
"simple-swizzle": {
"dependencies": {
"is-arrayish": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"define-property": {
"snapdragon-node": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"define-property": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"isobject": {
"snapdragon-util": {
"dependencies": {
"requires": {
"source-map-resolve": {
"source-map-support": {
"source-map-url": {
"spdx-correct": {
"spdx-exceptions": {
"spdx-expression-parse": {
"spdx-license-ids": {
"split-string": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-extendable": {
"requires": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"stacktrace-parser": {
"define-property": {
"dependencies": {
"requires": {
"string-width": {
"stream-buffers": {
"ansi-regex": {
"dependencies": {
"strict-uri-encode": {
"is-fullwidth-code-point": {
"strip-ansi": {
"requires": {
"string_decoder": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"supports-color": {
"symbol-observable": {
"dependencies": {
"integrity": "sha1-5Dm+Kq7jJzIZUnMPmaiSnk/FBYI="
"integrity": "sha1-JaZ/LG4lOyypQZd7XvdELvl6YEY="
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"to-fast-properties": {
"to-object-path": {
"dependencies": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-extendable": {
"requires": {
"to-regex-range": {
"dependencies": {
"is-number": {
"requires": {
"requires": {
"ua-parser-js": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"dependencies": {
"source-map": {
"unicode-canonical-property-names-ecmascript": {
"commander": {
"unicode-match-property-ecmascript": {
"unicode-match-property-value-ecmascript": {
"unicode-property-aliases-ecmascript": {
"arr-union": {
"dependencies": {
"extend-shallow": {
"requires": {
"set-value": {
"requires": {
"dependencies": {
"has-value": {
"requires": {
"dependencies": {
"isobject": {
"requires": {
"has-values": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"isobject": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"util-deprecate": {
"whatwg-fetch": {
"validate-npm-package-license": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"which-module": {
"dependencies": {
"string-width": {
"requires": {
"write-file-atomic": {
"integrity": "sha1-0lciS+g5PqrL+DfvIn/Y7CWzaIg=",
"dependencies": {
"integrity": "sha1-ZUS7ot/ajBzxfmKaOjBeK7H+5sE="
"integrity": "sha1-jdi/Rfw/f1Xw4FS4ePQ6YmFNr98="
"yargs-parser": {
"integrity": "sha1-YpmpBVsc78lp/355wdkY3Osiw2A=",
"@angular-devkit/architect": {
"@angular-devkit/build-angular": {
"@angular-devkit/core": "0.8.4",
"@angular-devkit/architect": "0.8.4",
"@ngtools/webpack": "6.2.4",
"@angular-devkit/core": "0.8.4",
"@angular-devkit/build-optimizer": "0.8.4",
"@angular-devkit/architect": "0.8.4",
"@angular-devkit/build-webpack": "0.8.4",
"@angular-devkit/build-webpack": {
"@angular-devkit/build-optimizer": {
"@angular-devkit/core": {
"@angular-devkit/core": "0.8.4",
"@angular/animations": {
"@angular-devkit/schematics": {
"@angular-devkit/core": "0.8.4",
"@angular-devkit/core": "0.8.4",
"@angular-devkit/schematics": "0.8.4",
"@angular-devkit/architect": "0.8.4",
"@angular/cli": {
"@schematics/update": "0.8.4",
"@schematics/angular": "0.8.4",
"camelcase": {
"dependencies": {
"yargs-parser": {
"json-schema-traverse": {
"@angular/common": {
"@angular/compiler": {
"requires": {
"dependencies": {
"@angular/compiler-cli": {
"arr-diff": {
"anymatch": {
"array-unique": {
"requires": {
"requires": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"requires": {
"chokidar": {
"glob-parent": {
"is-extglob": {
"requires": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"requires": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
"requires": {
"micromatch": {
"requires": {
"minimist": {
"@angular/core": {
"@angular/http": {
"@angular/forms": {
"requires": {
"@angular/platform-browser": {
"@angular/router": {
"@angular/language-service": {
"@angular/platform-browser-dynamic": {
"@babel/highlight": "^7.0.0"
"@babel/generator": {
"@babel/code-frame": {
"dependencies": {
"@babel/types": "^7.1.2",
"@babel/helper-function-name": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/highlight": {
"@babel/types": "^7.0.0"
"js-tokens": {
"dependencies": {
"@babel/parser": {
"@babel/template": {
"@babel/parser": "^7.1.2",
"@babel/code-frame": "^7.0.0",
"@babel/types": "^7.1.2"
"@babel/code-frame": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/traverse": {
"@babel/generator": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/parser": "^7.1.0",
"@babel/types": "^7.0.0",
"requires": {
"dependencies": {
"dependencies": {
"to-fast-properties": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
"@babel/types": {
"@ngtools/webpack": {
"@angular-devkit/core": "0.8.4",
"@schematics/angular": {
"@angular-devkit/core": "0.8.4",
"@angular-devkit/schematics": "0.8.4",
"@angular-devkit/core": "0.8.4",
"@schematics/update": {
"@angular-devkit/schematics": "0.8.4",
"@types/jasmine": {
"@types/jasminewd2": {
"integrity": "sha1-vShOV8hPEyXacCur/IKlMoGQwMU=",
"@types/jasmine": "*"
"@types/selenium-webdriver": {
"@webassemblyjs/helper-module-context": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/ast": {
"@webassemblyjs/wast-parser": "1.7.8"
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/wast-printer": "1.7.8"
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/ieee754": {
"@webassemblyjs/wasm-gen": "1.7.8"
"@xtuc/long": "4.2.1"
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/leb128": {
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/utf8": {
"@webassemblyjs/wasm-gen": "1.7.8",
"@webassemblyjs/helper-wasm-section": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8",
"@webassemblyjs/wast-printer": "1.7.8"
"@webassemblyjs/wasm-opt": "1.7.8",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/ieee754": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/leb128": "1.7.8",
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/utf8": "1.7.8"
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/wasm-gen": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8"
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/ieee754": "1.7.8",
"@webassemblyjs/helper-api-error": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/leb128": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/utf8": "1.7.8"
"@webassemblyjs/wast-parser": {
"@webassemblyjs/helper-code-frame": "1.7.8",
"@webassemblyjs/helper-fsm": "1.7.8",
"@webassemblyjs/helper-api-error": "1.7.8",
"@xtuc/long": "4.2.1"
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/wast-printer": {
"@webassemblyjs/wast-parser": "1.7.8",
"@xtuc/long": "4.2.1"
"acorn-dynamic-import": {
"integrity": "sha1-/ts5T58OAqqXaOcCvaI7UF+ufh8=",
"@xtuc/ieee754": {
"integrity": "sha1-06/3jpJ3VJdx2vAWTP9ISCt1T8Y=",
"ajv-keywords": {
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk=",
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4=",
"append-transform": {
"are-we-there-yet": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
"app-root-path": {
"array-find-index": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
"array-flatten": {
"array-unique": {
"arraybuffer.slice": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
"dependencies": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"inherits": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
"async-foreach": {
"requires": {
"async-limiter": {
"babel-code-frame": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"autoprefixer": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"ansi-styles": {
"supports-color": {
"babel-generator": {
"babel-messages": {
"babel-runtime": {
"babel-template": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-traverse": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"balanced-match": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"base64-arraybuffer": {
"bcrypt-pbkdf": {
"better-assert": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"integrity": "sha1-QIZrnhueC1W0gYlDEeaPr/rrxSI=",
"binary-extensions": {
"blocking-proxy": {
"dependencies": {
"block-stream": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24=",
"minimist": {
"dependencies": {
"brace-expansion": {
"requires": {
"dependencies": {
"extend-shallow": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=",
"browserify-cipher": {
"browserify-aes": {
"browserify-sign": {
"browserify-des": {
"browserify-zlib": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserslist": {
"browserify-rsa": {
"browserstack": {
"buffer-alloc": {
"buffer-alloc-unsafe": {
"builtin-modules": {
"builtin-status-codes": {
"buffer-indexof": {
"camelcase-keys": {
"integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
"caniuse-lite": {
"chrome-trace-event": {
"circular-dependency-plugin": {
"circular-json": {
"define-property": {
"requires": {
"dependencies": {
"code-point-at": {
"source-map": {
"dependencies": {
"collection-visit": {
"combine-lists": {
"integrity": "sha1-RYwH4J4NkA/Ci3Cj/sLazR0st/Y=",
"color-convert": {
"combined-stream": {
"compare-versions": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
"component-inherit": {
"component-emitter": {
"component-bind": {
"integrity": "sha1-ZF/ErfWLcrZJ1crmUTVhnbJv8UM=",
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"compressible": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
"concat-stream": {
"finalhandler": {
"dependencies": {
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"connect-history-api-fallback": {
"console-browserify": {
"statuses": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
"console-control-strings": {
"requires": {
"integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4=",
"content-disposition": {
"constants-browserify": {
"content-type": {
"convert-source-map": {
"copy-concurrently": {
"copy-webpack-plugin": {
"copy-descriptor": {
"cookie-signature": {
"core-util-is": {
"dependencies": {
"parse-json": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"requires": {
"crypto-browserify": {
"css-selector-tokenizer": {
"integrity": "sha1-5piEdK6MlTR3v15+/s/OzNnPTIY=",
"integrity": "sha1-lGfQMsOM+u+58teVASUwYvh/ob0=",
"currently-unhandled": {
"integrity": "sha1-pmAt/34EqDBtwNuaVR6S6LVmKtg=",
"decode-uri-component": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs=",
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU=",
"default-gateway": {
"default-require-extensions": {
"custom-event": {
"define-properties": {
"dependencies": {
"define-property": {
"strip-bom": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"delayed-stream": {
"diffie-hellman": {
"pify": {
"detect-indent": {
"dom-serialize": {
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0=",
"dom-converter": {
"dom-serializer": {
"domelementtype": {
"domain-browser": {
"dependencies": {
"domelementtype": {
"electron-to-chromium": {
"integrity": "sha1-sXrtguirWeUt2cGbF1bg/BhyBMI=",
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
"dependencies": {
"end-of-stream": {
"requires": {
"dependencies": {
"engine.io-client": {
"requires": {
"engine.io-parser": {
"es6-promisify": {
"enhanced-resolve": {
"escape-string-regexp": {
"integrity": "sha1-2rc/vPwrqBm03gO9b26qSBZLP50=",
"source-map": {
"es-to-primitive": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
"eslint-scope": {
"requires": {
"dependencies": {
"dependencies": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
"dependencies": {
"estraverse": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
"eventemitter3": {
"estraverse": {
"evp_bytestokey": {
"requires": {
"dependencies": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=",
"cross-spawn": {
"integrity": "sha1-SIsdHSRRyz06axks/AMPRMWFX+o=",
"expand-braces": {
"integrity": "sha1-wIVxEIUpHYt1/ddOqw+FlygHEeY=",
"dependencies": {
"array-unique": {
"requires": {
"expand-range": {
"integrity": "sha1-TLjtoJk8pW+k9B/ELzy7TMrf8EQ=",
"is-number": {
"requires": {
"repeat-string": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"expand-range": {
"dependencies": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"requires": {
"is-number": {
"fill-range": {
"isobject": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"array-flatten": {
"extend-shallow": {
"dependencies": {
"safe-buffer": {
"is-extendable": {
"dependencies": {
"requires": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"fast-deep-equal": {
"fast-json-stable-stringify": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
"integrity": "sha1-0eJkOzipTXWDtHkGDmxK/8lAcfg=",
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"fast-levenshtein": {
"faye-websocket": {
"dependencies": {
"filename-regex": {
"requires": {
"extend-shallow": {
"find-cache-dir": {
"flush-write-stream": {
"finalhandler": {
"follow-redirects": {
"dependencies": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"requires": {
"forever-agent": {
"combined-stream": {
"requires": {
"dependencies": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ=",
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"fragment-cache": {
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"ansi-regex": {
"integrity": "sha1-1qh/JiJxzv6+wwxVNAf7mV2od3o=",
"fs-write-stream-atomic": {
"dependencies": {
"are-we-there-yet": {
"requires": {
"brace-expansion": {
"requires": {
"balanced-match": {
"console-control-strings": {
"code-point-at": {
"core-util-is": {
"requires": {
"concat-map": {
"deep-extend": {
"delegates": {
"detect-libc": {
"requires": {
"fs-minipass": {
"requires": {
"fs.realpath": {
"iconv-lite": {
"has-unicode": {
"requires": {
"ignore-walk": {
"requires": {
"requires": {
"inflight": {
"requires": {
"is-fullwidth-code-point": {
"requires": {
"minimatch": {
"inherits": {
"requires": {
"requires": {
"minimist": {
"minipass": {
"requires": {
"requires": {
"minizlib": {
"node-pre-gyp": {
"requires": {
"requires": {
"npm-bundled": {
"requires": {
"requires": {
"npm-packlist": {
"requires": {
"number-is-nan": {
"requires": {
"os-homedir": {
"object-assign": {
"path-is-absolute": {
"requires": {
"process-nextick-args": {
"requires": {
"os-tmpdir": {
"dependencies": {
"readable-stream": {
"requires": {
"safe-buffer": {
"minimist": {
"safer-buffer": {
"set-blocking": {
"requires": {
"signal-exit": {
"string_decoder": {
"string-width": {
"requires": {
"requires": {
"strip-ansi": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"requires": {
"wide-align": {
"function-bind": {
"integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
"requires": {
"get-caller-file": {
"integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4=",
"dependencies": {
"requires": {
"glob-parent": {
"is-extglob": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"requires": {
"dependencies": {
"handle-thing": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ=",
"requires": {
"requires": {
"dependencies": {
"har-validator": {
"source-map": {
"dependencies": {
"integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
"integrity": "sha1-XkdHk/fqmEPRu5nCPu9J/xJv/zk=",
"dependencies": {
"requires": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"dependencies": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q=",
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
"hosted-git-info": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"dependencies": {
"html-entities": {
"html-webpack-plugin": {
"loader-utils": {
"html-minifier": {
"integrity": "sha1-+G5jdNQyBabmxg6RlvF8Apm/s0g=",
"dependencies": {
"requires": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
"readable-stream": {
"requires": {
"domutils": {
"string_decoder": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-deceiver": {
"http-parser-js": {
"integrity": "sha1-O9bW/ebjFyyTNMOzO2wZPYD+ETc=",
"http-signature": {
"http-proxy-middleware": {
"https-browserify": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=",
"dependencies": {
"https-proxy-agent": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE=",
"integrity": "sha1-Cd/Uq50g4p6xw+gLiZA3jfnjy5w=",
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"requires": {
"import-local": {
"requires": {
"dependencies": {
"locate-path": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
"integrity": "sha1-4g/146KvwmkDILbcVSaCqcf631E=",
"requires": {
"indent-string": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk=",
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4=",
"dependencies": {
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"is-binary-path": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"requires": {
"is-builtin-module": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-data-descriptor": {
"requires": {
"is-date-object": {
"dependencies": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY=",
"is-descriptor": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE=",
"dependencies": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE=",
"is-equal-shallow": {
"is-directory": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
"is-extendable": {
"is-fullwidth-code-point": {
"dependencies": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-path-in-cwd": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-plain-object": {
"is-posix-bracket": {
"is-path-inside": {
"isbinaryfile": {
"is-typedarray": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
"is-primitive": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
"integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"istanbul-api": {
"istanbul-lib-coverage": {
"has-flag": {
"dependencies": {
"istanbul-lib-instrument": {
"requires": {
"@babel/generator": "^7.0.0",
"requires": {
"@babel/template": "^7.0.0",
"@babel/parser": "^7.0.0",
"@babel/traverse": "^7.0.0",
"@babel/types": "^7.0.0",
"dependencies": {
"istanbul-instrumenter-loader": {
"requires": {
"schema-utils": {
"istanbul-lib-coverage": {
"requires": {
"istanbul-lib-hook": {
"istanbul-lib-instrument": {
"istanbul-lib-report": {
"istanbul-lib-coverage": {
"dependencies": {
"istanbul-lib-source-maps": {
"requires": {
"istanbul-lib-coverage": {
"source-map": {
"dependencies": {
"istanbul-reports": {
"dependencies": {
"jasmine-core": {
"jasmine-core": {
"integrity": "sha1-5kAN8ea1bhMLYcS80JPap/boyhU=",
"jasmine-diff": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
"jasmine-spec-reporter": {
"json-parse-better-errors": {
"dependencies": {
"json-stringify-safe": {
"json-schema-traverse": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
"es6-promise": {
"dependencies": {
"process-nextick-args": {
"integrity": "sha1-+rg/uwstjchfpjbEudNMdUIMbWU=",
"integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=",
"readable-stream": {
"requires": {
"dependencies": {
"string_decoder": {
"source-map": {
"karma-jasmine": {
"karma-chrome-launcher": {
"karma-coverage-istanbul-reporter": {
"karma-jasmine-html-reporter": {
"karma-source-map-support": {
"license-webpack-plugin": {
"dependencies": {
"dependencies": {
"load-json-file": {
"source-map": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"loader-utils": {
"loader-runner": {
"lodash.clonedeep": {
"integrity": "sha1-4j8/nE+Pvd6HJSnBBxhXoIblzO8=",
"lodash.assign": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168=",
"lodash.debounce": {
"lodash.mergewith": {
"requires": {
"dependencies": {
"loose-envify": {
"map-age-cleaner": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=",
"dependencies": {
"loud-rejection": {
"integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
"minimist": {
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=",
"miller-rabin": {
"merge-descriptors": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
"mini-css-extract-plugin": {
"dependencies": {
"schema-utils": {
"minimalistic-assert": {
"requires": {
"minimalistic-crypto-utils": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
"is-extendable": {
"requires": {
"dependencies": {
"dependencies": {
"move-concurrently": {
"multicast-dns-service-types": {
"mixin-object": {
"multicast-dns": {
"node-libs-browser": {
"dependencies": {
"dependencies": {
"dependencies": {
"punycode": {
"requires": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"har-validator": {
"ansi-styles": {
"requires": {
"integrity": "sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=",
"requires": {
"oauth-sign": {
"requires": {
"punycode": {
"integrity": "sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=",
"supports-color": {
"tough-cookie": {
"integrity": "sha1-xkZdvwirzU2zWTF/eaxopkayj/k=",
"requires": {
"normalize-package-data": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=",
"normalize-range": {
"normalize-path": {
"npm-package-arg": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"integrity": "sha1-l33/1xdgErnsMNKjnbXPcqBDnt0=",
"npm-run-path": {
"npm-registry-client": {
"number-is-nan": {
"num2fraction": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
"object-component": {
"dependencies": {
"define-property": {
"requires": {
"object-visit": {
"requires": {
"dependencies": {
"requires": {
"object.getownpropertydescriptors": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c=",
"dependencies": {
"os-browserify": {
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
"wordwrap": {
"p-is-promise": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
"parallel-transform": {
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
"is-extglob": {
"dependencies": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"integrity": "sha1-gCBKUNTbt3m/3G6+J3jZDkvOMgo=",
"requires": {
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M=",
"path-browserify": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
"path-dirname": {
"path-is-absolute": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
"path-to-regexp": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
"pinkie-promise": {
"performance-now": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"path-is-inside": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
"posix-character-classes": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
"source-map": {
"dependencies": {
"postcss-import": {
"postcss-loader": {
"postcss-load-config": {
"postcss-value-parser": {
"integrity": "sha1-h/OPnxj3dKSrTIojL1xc6IcqnRU=",
"pretty-error": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
"process-nextick-args": {
"promise-inflight": {
"@types/node": "^6.0.46",
"dependencies": {
"@types/q": "^0.0.32",
"@types/selenium-webdriver": "^3.0.0",
"ansi-styles": {
"@types/node": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
"requires": {
"minimist": {
"requires": {
"source-map-support": {
"requires": {
"supports-color": {
"webdriver-manager": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY=",
"public-encrypt": {
"querystringify": {
"querystring-es3": {
"dependencies": {
"is-number": {
"requires": {
"range-parser": {
"integrity": "sha1-vNYMd9Prk83gBQKVw/N5OJvIj4k=",
"http-errors": {
"dependencies": {
"setprototypeof": {
"dependencies": {
"requires": {
"path-type": {
"requires": {
"dependencies": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"dependencies": {
"requires": {
"path-exists": {
"readable-stream": {
"reflect-metadata": {
"requires": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"regexpu-core": {
"regenerator-runtime": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
"dependencies": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk=",
"repeat-element": {
"remove-trailing-separator": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
"require-directory": {
"require-from-string": {
"require-main-filename": {
"repeat-string": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=",
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
"requires-port": {
"safer-buffer": {
"integrity": "sha1-52OI0heZLCUnUCQdPTlW/tmNj/Q=",
"resolve-from": {
"scss-tokenizer": {
"integrity": "sha1-E/vWPNHK8JCLn9k0dq1DpR0eC0k=",
"schema-utils": {
"source-map": {
"dependencies": {
"selenium-webdriver": {
"dependencies": {
"requires": {
"integrity": "sha1-ckGdSovn1s51FI/YsyTlk6cRwu0=",
"dependencies": {
"semver-intersect": {
"requires": {
"serialize-javascript": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"serve-static": {
"set-blocking": {
"extend-shallow": {
"requires": {
"dependencies": {
"setprototypeof": {
"shallow-clone": {
"setimmediate": {
"shebang-command": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"shebang-regex": {
"dependencies": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"snapdragon-node": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"snapdragon-util": {
"requires": {
"is-descriptor": {
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"socket.io-adapter": {
"requires": {
"requires": {
"socket.io-client": {
"dependencies": {
"socket.io-parser": {
"integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
"dependencies": {
"requires": {
"sockjs-client": {
"faye-websocket": {
"requires": {
"dependencies": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"source-map-loader": {
"dependencies": {
"source-list-map": {
"source-map-resolve": {
"source-map-support": {
"dependencies": {
"requires": {
"source-map": {
"spdx-correct": {
"source-map-url": {
"spdx-exceptions": {
"spdx-expression-parse": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"spdx-license-ids": {
"spdy-transport": {
"split-string": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"define-property": {
"requires": {
"dependencies": {
"stdout-stream": {
"stream-browserify": {
"stats-webpack-plugin": {
"stream-shift": {
"streamroller": {
"requires": {
"dependencies": {
"string_decoder": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
"string-width": {
"style-loader": {
"strip-indent": {
"dependencies": {
"requires": {
"source-map": {
"stylus-loader": {
"requires": {
"supports-color": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
"symbol-observable": {
"integrity": "sha1-F+bBH3PdTz10zaek/zI46a2b+JA=",
"timers-browserify": {
"to-arraybuffer": {
"to-fast-properties": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
"to-regex-range": {
"dependencies": {
"to-object-path": {
"requires": {
"tough-cookie": {
"dependencies": {
"trim-newlines": {
"punycode": {
"true-case-path": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=",
"dependencies": {
"dependencies": {
"minimist": {
"source-map": {
"dependencies": {
"tty-browserify": {
"minimist": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=",
"requires": {
"tunnel-agent": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
"dependencies": {
"uglifyjs-webpack-plugin": {
"source-map": {
"dependencies": {
"uglify-es": {
"source-map": {
"commander": {
"dependencies": {
"extend-shallow": {
"requires": {
"set-value": {
"requires": {
"unique-filename": {
"requires": {
"dependencies": {
"has-value": {
"requires": {
"dependencies": {
"isobject": {
"requires": {
"has-values": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
"integrity": "sha1-+QuFhQf4HepNz7s8TD2/orVX+qo=",
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"dependencies": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
"punycode": {
"dependencies": {
"requires": {
"schema-utils": {
"integrity": "sha1-z1k+9PLRdYdei7ZY6pLhik/QbY4=",
"dependencies": {
"lru-cache": {
"validate-npm-package-license": {
"util.promisify": {
"util-deprecate": {
"validate-npm-package-name": {
"integrity": "sha1-X6kS2B630MdK/BQN5zF/DKffQ34=",
"vm-browserify": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"void-elements": {
"webdriver-js-extender": {
"@types/selenium-webdriver": "^3.0.0",
"@webassemblyjs/helper-module-context": "1.7.8",
"@webassemblyjs/wasm-edit": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"integrity": "sha1-/FcViMhVjad76e+23r3Fo7FyvcI=",
"webpack-core": {
"source-list-map": {
"source-map": {
"dependencies": {
"webpack-dev-middleware": {
"requires": {
"dependencies": {
"webpack-dev-server": {
"ansi-regex": {
"dependencies": {
"requires": {
"camelcase": {
"strip-ansi": {
"dependencies": {
"requires": {
"requires": {
"decamelize": {
"requires": {
"invert-kv": {
"requires": {
"is-fullwidth-code-point": {
"requires": {
"locate-path": {
"os-locale": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"schema-utils": {
"string-width": {
"requires": {
"requires": {
"strip-ansi": {
"dependencies": {
"which-module": {
"requires": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
"yargs-parser": {
"requires": {
"webpack-merge": {
"webpack-sources": {
"dependencies": {
"requires": {
"webpack-subresource-integrity": {
"websocket-driver": {
"source-map": {
"websocket-extensions": {
"integrity": "sha1-RztRfsFZ4rhQBUl6E5g/CVQS404=",
"dependencies": {
"integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8=",
"which-module": {
"xmlhttprequest-ssl": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
"dependencies": {
"camelcase": {
"yargs-parser": {
"integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",
"dependencies": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
"camelcase": {
"@angular-devkit/architect": {
"@angular-devkit/core": "0.8.4",
"@angular-devkit/build-angular": {
"@angular-devkit/architect": "0.8.4",
"@angular-devkit/build-optimizer": "0.8.4",
"@angular-devkit/build-webpack": "0.8.4",
"@angular-devkit/core": "0.8.4",
"@angular-devkit/build-optimizer": {
"@ngtools/webpack": "6.2.4",
"@angular-devkit/build-webpack": {
"@angular-devkit/architect": "0.8.4",
"@angular-devkit/core": "0.8.4",
"@angular-devkit/core": {
"@angular-devkit/schematics": {
"@angular-devkit/core": "0.8.4",
"@angular/animations": {
"@angular-devkit/core": "0.8.4",
"@angular-devkit/architect": "0.8.4",
"@angular/cli": {
"@angular-devkit/schematics": "0.8.4",
"@schematics/angular": "0.8.4",
"@schematics/update": "0.8.4",
"camelcase": {
"dependencies": {
"json-schema-traverse": {
"yargs-parser": {
"requires": {
"@angular/common": {
"@angular/compiler": {
"@angular/compiler-cli": {
"anymatch": {
"dependencies": {
"requires": {
"arr-diff": {
"requires": {
"array-unique": {
"requires": {
"chokidar": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"requires": {
"requires": {
"glob-parent": {
"is-extglob": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"requires": {
"requires": {
"micromatch": {
"requires": {
"minimist": {
"@angular/core": {
"@angular/forms": {
"@angular/http": {
"@angular/language-service": {
"@angular/platform-browser": {
"@angular/platform-browser-dynamic": {
"@angular/router": {
"@babel/code-frame": {
"@babel/highlight": "^7.0.0"
"@babel/generator": {
"@babel/types": "^7.1.2",
"dependencies": {
"@babel/helper-function-name": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-get-function-arity": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": {
"@babel/highlight": {
"@babel/types": "^7.0.0"
"dependencies": {
"js-tokens": {
"@babel/parser": {
"@babel/code-frame": "^7.0.0",
"@babel/template": {
"@babel/parser": "^7.1.2",
"@babel/types": "^7.1.2"
"@babel/traverse": {
"@babel/code-frame": "^7.0.0",
"@babel/generator": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/parser": "^7.1.0",
"@babel/types": "^7.0.0",
"dependencies": {
"requires": {
"@babel/types": {
"to-fast-properties": {
"dependencies": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
"@schematics/angular": {
"@angular-devkit/core": "0.8.4",
"@angular-devkit/core": "0.8.4",
"@ngtools/webpack": {
"@schematics/update": {
"@angular-devkit/schematics": "0.8.4",
"@angular-devkit/core": "0.8.4",
"@angular-devkit/schematics": "0.8.4",
"@types/jasmine": {
"@types/jasminewd2": {
"@types/jasmine": "*"
"integrity": "sha1-vShOV8hPEyXacCur/IKlMoGQwMU=",
"@types/selenium-webdriver": {
"@webassemblyjs/ast": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/helper-module-context": "1.7.8",
"@webassemblyjs/wast-parser": "1.7.8"
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/wast-printer": "1.7.8"
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/wasm-gen": "1.7.8"
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/ieee754": {
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/leb128": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/utf8": {
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/helper-wasm-section": "1.7.8",
"@webassemblyjs/wasm-gen": "1.7.8",
"@webassemblyjs/wasm-opt": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8",
"@webassemblyjs/wast-printer": "1.7.8"
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/ieee754": "1.7.8",
"@webassemblyjs/leb128": "1.7.8",
"@webassemblyjs/utf8": "1.7.8"
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-buffer": "1.7.8",
"@webassemblyjs/wasm-parser": "1.7.8"
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/wasm-gen": "1.7.8",
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-api-error": "1.7.8",
"@webassemblyjs/helper-wasm-bytecode": "1.7.8",
"@webassemblyjs/ieee754": "1.7.8",
"@webassemblyjs/leb128": "1.7.8",
"@webassemblyjs/utf8": "1.7.8"
"@webassemblyjs/wast-parser": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/helper-code-frame": "1.7.8",
"@webassemblyjs/helper-fsm": "1.7.8",
"@webassemblyjs/helper-api-error": "1.7.8",
"@xtuc/long": "4.2.1"
"@webassemblyjs/wast-printer": {
"@webassemblyjs/ast": "1.7.8",
"@webassemblyjs/wast-parser": "1.7.8",
"@xtuc/long": "4.2.1"
"@xtuc/ieee754": {
"acorn-dynamic-import": {
"integrity": "sha1-06/3jpJ3VJdx2vAWTP9ISCt1T8Y=",
"integrity": "sha1-/ts5T58OAqqXaOcCvaI7UF+ufh8=",
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk=",
"ajv-keywords": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4=",
"app-root-path": {
"are-we-there-yet": {
"append-transform": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
"array-find-index": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
"array-flatten": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
"arraybuffer.slice": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"inherits": {
"requires": {
"assign-symbols": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
"async-foreach": {
"async-limiter": {
"autoprefixer": {
"babel-code-frame": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"ansi-styles": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"supports-color": {
"babel-messages": {
"babel-generator": {
"babel-runtime": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-traverse": {
"babel-template": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"balanced-match": {
"dependencies": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"define-property": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"bcrypt-pbkdf": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"base64-arraybuffer": {
"better-assert": {
"binary-extensions": {
"integrity": "sha1-QIZrnhueC1W0gYlDEeaPr/rrxSI=",
"block-stream": {
"blocking-proxy": {
"dependencies": {
"minimist": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24=",
"dependencies": {
"dependencies": {
"brace-expansion": {
"extend-shallow": {
"requires": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=",
"browserify-aes": {
"browserify-cipher": {
"browserify-des": {
"browserify-rsa": {
"browserify-sign": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserslist": {
"browserify-zlib": {
"browserstack": {
"buffer-alloc": {
"buffer-alloc-unsafe": {
"builtin-modules": {
"buffer-indexof": {
"builtin-status-codes": {
"camelcase-keys": {
"integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
"chrome-trace-event": {
"caniuse-lite": {
"circular-dependency-plugin": {
"circular-json": {
"dependencies": {
"requires": {
"define-property": {
"dependencies": {
"source-map": {
"code-point-at": {
"color-convert": {
"collection-visit": {
"combine-lists": {
"integrity": "sha1-RYwH4J4NkA/Ci3Cj/sLazR0st/Y=",
"combined-stream": {
"compare-versions": {
"component-bind": {
"component-emitter": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
"component-inherit": {
"integrity": "sha1-ZF/ErfWLcrZJ1crmUTVhnbJv8UM=",
"compressible": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
"concat-stream": {
"dependencies": {
"finalhandler": {
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"requires": {
"statuses": {
"connect-history-api-fallback": {
"console-browserify": {
"console-control-strings": {
"integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4=",
"constants-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
"content-type": {
"convert-source-map": {
"content-disposition": {
"cookie-signature": {
"copy-concurrently": {
"copy-webpack-plugin": {
"copy-descriptor": {
"core-util-is": {
"dependencies": {
"parse-json": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"requires": {
"crypto-browserify": {
"css-selector-tokenizer": {
"integrity": "sha1-5piEdK6MlTR3v15+/s/OzNnPTIY=",
"integrity": "sha1-pmAt/34EqDBtwNuaVR6S6LVmKtg=",
"integrity": "sha1-lGfQMsOM+u+58teVASUwYvh/ob0=",
"currently-unhandled": {
"custom-event": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs=",
"decode-uri-component": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU=",
"default-gateway": {
"default-require-extensions": {
"dependencies": {
"strip-bom": {
"define-properties": {
"define-property": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"requires": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"dependencies": {
"requires": {
"dependencies": {
"pify": {
"delayed-stream": {
"detect-indent": {
"diffie-hellman": {
"dom-converter": {
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0=",
"dom-serialize": {
"dom-serializer": {
"dependencies": {
"domelementtype": {
"domain-browser": {
"domelementtype": {
"integrity": "sha1-sXrtguirWeUt2cGbF1bg/BhyBMI=",
"electron-to-chromium": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
"end-of-stream": {
"requires": {
"dependencies": {
"engine.io-client": {
"dependencies": {
"enhanced-resolve": {
"engine.io-parser": {
"requires": {
"es-to-primitive": {
"es6-promisify": {
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
"dependencies": {
"source-map": {
"integrity": "sha1-2rc/vPwrqBm03gO9b26qSBZLP50=",
"requires": {
"eslint-scope": {
"dependencies": {
"estraverse": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
"dependencies": {
"estraverse": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
"eventemitter3": {
"evp_bytestokey": {
"dependencies": {
"cross-spawn": {
"requires": {
"expand-braces": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=",
"integrity": "sha1-SIsdHSRRyz06axks/AMPRMWFX+o=",
"array-unique": {
"dependencies": {
"integrity": "sha1-wIVxEIUpHYt1/ddOqw+FlygHEeY=",
"expand-range": {
"requires": {
"integrity": "sha1-TLjtoJk8pW+k9B/ELzy7TMrf8EQ=",
"requires": {
"repeat-string": {
"is-number": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"expand-range": {
"dependencies": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"fill-range": {
"requires": {
"is-number": {
"requires": {
"isobject": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"array-flatten": {
"safe-buffer": {
"dependencies": {
"is-extendable": {
"dependencies": {
"requires": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"fast-deep-equal": {
"fast-json-stable-stringify": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
"fast-levenshtein": {
"integrity": "sha1-0eJkOzipTXWDtHkGDmxK/8lAcfg=",
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"faye-websocket": {
"filename-regex": {
"dependencies": {
"extend-shallow": {
"finalhandler": {
"requires": {
"find-cache-dir": {
"follow-redirects": {
"flush-write-stream": {
"dependencies": {
"requires": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"forever-agent": {
"dependencies": {
"combined-stream": {
"requires": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ=",
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"fragment-cache": {
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"integrity": "sha1-1qh/JiJxzv6+wwxVNAf7mV2od3o=",
"dependencies": {
"fs-write-stream-atomic": {
"ansi-regex": {
"are-we-there-yet": {
"balanced-match": {
"requires": {
"requires": {
"brace-expansion": {
"code-point-at": {
"core-util-is": {
"console-control-strings": {
"concat-map": {
"requires": {
"detect-libc": {
"deep-extend": {
"delegates": {
"fs-minipass": {
"fs.realpath": {
"requires": {
"requires": {
"requires": {
"has-unicode": {
"iconv-lite": {
"requires": {
"ignore-walk": {
"requires": {
"inflight": {
"requires": {
"inherits": {
"requires": {
"minimatch": {
"is-fullwidth-code-point": {
"requires": {
"minimist": {
"minipass": {
"requires": {
"minizlib": {
"requires": {
"requires": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"npm-packlist": {
"requires": {
"npm-bundled": {
"requires": {
"object-assign": {
"number-is-nan": {
"requires": {
"os-homedir": {
"requires": {
"os-tmpdir": {
"path-is-absolute": {
"process-nextick-args": {
"requires": {
"readable-stream": {
"dependencies": {
"minimist": {
"requires": {
"requires": {
"safe-buffer": {
"safer-buffer": {
"set-blocking": {
"signal-exit": {
"string-width": {
"string_decoder": {
"requires": {
"requires": {
"strip-ansi": {
"requires": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"function-bind": {
"requires": {
"wide-align": {
"integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
"dependencies": {
"integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4=",
"get-caller-file": {
"glob-parent": {
"requires": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
"is-extglob": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"dependencies": {
"requires": {
"requires": {
"handle-thing": {
"requires": {
"source-map": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ=",
"dependencies": {
"har-validator": {
"requires": {
"dependencies": {
"dependencies": {
"integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
"integrity": "sha1-XkdHk/fqmEPRu5nCPu9J/xJv/zk=",
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q=",
"dependencies": {
"requires": {
"integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"hosted-git-info": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"html-entities": {
"html-minifier": {
"html-webpack-plugin": {
"dependencies": {
"loader-utils": {
"integrity": "sha1-+G5jdNQyBabmxg6RlvF8Apm/s0g=",
"dependencies": {
"requires": {
"domutils": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
"readable-stream": {
"requires": {
"string_decoder": {
"http-deceiver": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-parser-js": {
"integrity": "sha1-O9bW/ebjFyyTNMOzO2wZPYD+ETc=",
"http-proxy-middleware": {
"https-browserify": {
"http-signature": {
"https-proxy-agent": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=",
"requires": {
"dependencies": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE=",
"integrity": "sha1-Cd/Uq50g4p6xw+gLiZA3jfnjy5w=",
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"import-local": {
"dependencies": {
"requires": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"integrity": "sha1-4g/146KvwmkDILbcVSaCqcf631E=",
"indent-string": {
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4=",
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk=",
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"requires": {
"dependencies": {
"is-binary-path": {
"is-builtin-module": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-data-descriptor": {
"dependencies": {
"requires": {
"is-date-object": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY=",
"is-descriptor": {
"dependencies": {
"is-directory": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE=",
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE=",
"is-extendable": {
"is-equal-shallow": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
"is-fullwidth-code-point": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"dependencies": {
"requires": {
"is-path-in-cwd": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-plain-object": {
"is-path-inside": {
"is-posix-bracket": {
"is-primitive": {
"is-typedarray": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
"isbinaryfile": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
"dependencies": {
"integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",
"requires": {
"has-flag": {
"supports-color": {
"requires": {
"dependencies": {
"istanbul-api": {
"requires": {
"istanbul-lib-coverage": {
"istanbul-lib-instrument": {
"requires": {
"@babel/generator": "^7.0.0",
"@babel/parser": "^7.0.0",
"@babel/template": "^7.0.0",
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.0.0",
"dependencies": {
"istanbul-instrumenter-loader": {
"requires": {
"requires": {
"istanbul-lib-coverage": {
"schema-utils": {
"istanbul-lib-hook": {
"istanbul-lib-instrument": {
"istanbul-lib-report": {
"dependencies": {
"istanbul-lib-coverage": {
"dependencies": {
"istanbul-lib-source-maps": {
"requires": {
"istanbul-lib-coverage": {
"source-map": {
"istanbul-reports": {
"jasmine-core": {
"dependencies": {
"jasmine-core": {
"integrity": "sha1-5kAN8ea1bhMLYcS80JPap/boyhU=",
"jasmine-diff": {
"jasmine-spec-reporter": {
"dependencies": {
"json-parse-better-errors": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
"json-schema-traverse": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
"json-stringify-safe": {
"dependencies": {
"integrity": "sha1-+rg/uwstjchfpjbEudNMdUIMbWU=",
"es6-promise": {
"integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=",
"process-nextick-args": {
"readable-stream": {
"requires": {
"dependencies": {
"string_decoder": {
"source-map": {
"karma-chrome-launcher": {
"karma-jasmine": {
"karma-coverage-istanbul-reporter": {
"karma-jasmine-html-reporter": {
"karma-source-map-support": {
"dependencies": {
"source-map": {
"license-webpack-plugin": {
"load-json-file": {
"loader-runner": {
"dependencies": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"loader-utils": {
"lodash.clonedeep": {
"lodash.assign": {
"integrity": "sha1-4j8/nE+Pvd6HJSnBBxhXoIblzO8=",
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168=",
"lodash.debounce": {
"lodash.mergewith": {
"dependencies": {
"loose-envify": {
"requires": {
"map-age-cleaner": {
"loud-rejection": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=",
"dependencies": {
"integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=",
"minimist": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
"merge-descriptors": {
"miller-rabin": {
"schema-utils": {
"dependencies": {
"mini-css-extract-plugin": {
"requires": {
"minimalistic-crypto-utils": {
"minimalistic-assert": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
"dependencies": {
"is-extendable": {
"requires": {
"dependencies": {
"mixin-object": {
"move-concurrently": {
"multicast-dns": {
"multicast-dns-service-types": {
"dependencies": {
"node-libs-browser": {
"punycode": {
"dependencies": {
"dependencies": {
"requires": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"har-validator": {
"integrity": "sha1-ukAsJmGU8VlW7xXg/PJCmT9qff0=",
"requires": {
"oauth-sign": {
"integrity": "sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=",
"punycode": {
"requires": {
"supports-color": {
"requires": {
"tough-cookie": {
"integrity": "sha1-xkZdvwirzU2zWTF/eaxopkayj/k=",
"normalize-package-data": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-path": {
"normalize-range": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=",
"npm-package-arg": {
"npm-registry-client": {
"npm-run-path": {
"integrity": "sha1-l33/1xdgErnsMNKjnbXPcqBDnt0=",
"num2fraction": {
"number-is-nan": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
"dependencies": {
"object-component": {
"define-property": {
"requires": {
"requires": {
"object-visit": {
"object.getownpropertydescriptors": {
"dependencies": {
"requires": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c=",
"dependencies": {
"wordwrap": {
"os-browserify": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
"p-is-promise": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
"parallel-transform": {
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"dependencies": {
"is-extglob": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
"requires": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
"integrity": "sha1-gCBKUNTbt3m/3G6+J3jZDkvOMgo=",
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M=",
"path-browserify": {
"path-dirname": {
"path-is-inside": {
"path-is-absolute": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
"path-to-regexp": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
"performance-now": {
"pinkie-promise": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"posix-character-classes": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
"dependencies": {
"source-map": {
"postcss-import": {
"postcss-loader": {
"postcss-load-config": {
"postcss-value-parser": {
"integrity": "sha1-h/OPnxj3dKSrTIojL1xc6IcqnRU=",
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
"pretty-error": {
"promise-inflight": {
"process-nextick-args": {
"@types/node": "^6.0.46",
"@types/selenium-webdriver": "^3.0.0",
"dependencies": {
"@types/q": "^0.0.32",
"@types/node": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
"requires": {
"requires": {
"requires": {
"minimist": {
"source-map-support": {
"requires": {
"supports-color": {
"webdriver-manager": {
"requires": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY=",
"public-encrypt": {
"querystring-es3": {
"querystringify": {
"dependencies": {
"is-number": {
"range-parser": {
"integrity": "sha1-vNYMd9Prk83gBQKVw/N5OJvIj4k=",
"dependencies": {
"http-errors": {
"requires": {
"setprototypeof": {
"dependencies": {
"dependencies": {
"path-type": {
"requires": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"requires": {
"dependencies": {
"path-exists": {
"reflect-metadata": {
"readable-stream": {
"requires": {
"regenerator-runtime": {
"regexpu-core": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"dependencies": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk=",
"repeat-element": {
"remove-trailing-separator": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
"repeat-string": {
"require-directory": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
"require-from-string": {
"requires-port": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=",
"require-main-filename": {
"resolve-from": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
"integrity": "sha1-52OI0heZLCUnUCQdPTlW/tmNj/Q=",
"safer-buffer": {
"integrity": "sha1-E/vWPNHK8JCLn9k0dq1DpR0eC0k=",
"scss-tokenizer": {
"schema-utils": {
"source-map": {
"dependencies": {
"selenium-webdriver": {
"requires": {
"dependencies": {
"integrity": "sha1-ckGdSovn1s51FI/YsyTlk6cRwu0=",
"requires": {
"dependencies": {
"semver-intersect": {
"serialize-javascript": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"set-blocking": {
"serve-static": {
"dependencies": {
"extend-shallow": {
"requires": {
"setimmediate": {
"setprototypeof": {
"shallow-clone": {
"dependencies": {
"shebang-command": {
"shebang-regex": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"snapdragon-node": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"dependencies": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"snapdragon-util": {
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"socket.io-adapter": {
"socket.io-client": {
"dependencies": {
"requires": {
"socket.io-parser": {
"dependencies": {
"requires": {
"integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
"sockjs-client": {
"dependencies": {
"faye-websocket": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"source-list-map": {
"requires": {
"source-map-loader": {
"dependencies": {
"requires": {
"source-map-resolve": {
"source-map-support": {
"dependencies": {
"source-map": {
"source-map-url": {
"spdx-correct": {
"spdx-expression-parse": {
"spdx-exceptions": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"spdx-license-ids": {
"spdy-transport": {
"split-string": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"define-property": {
"dependencies": {
"requires": {
"stdout-stream": {
"stats-webpack-plugin": {
"stream-browserify": {
"stream-shift": {
"requires": {
"dependencies": {
"string-width": {
"streamroller": {
"string_decoder": {
"style-loader": {
"strip-indent": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
"dependencies": {
"source-map": {
"requires": {
"requires": {
"stylus-loader": {
"supports-color": {
"symbol-observable": {
"timers-browserify": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
"integrity": "sha1-F+bBH3PdTz10zaek/zI46a2b+JA=",
"to-arraybuffer": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
"to-object-path": {
"to-fast-properties": {
"dependencies": {
"requires": {
"to-regex-range": {
"dependencies": {
"tough-cookie": {
"punycode": {
"trim-newlines": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=",
"dependencies": {
"true-case-path": {
"minimist": {
"minimist": {
"source-map": {
"dependencies": {
"dependencies": {
"requires": {
"tunnel-agent": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=",
"tty-browserify": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
"source-map": {
"dependencies": {
"uglifyjs-webpack-plugin": {
"dependencies": {
"commander": {
"source-map": {
"requires": {
"uglify-es": {
"dependencies": {
"extend-shallow": {
"requires": {
"set-value": {
"requires": {
"unique-filename": {
"dependencies": {
"has-value": {
"requires": {
"dependencies": {
"isobject": {
"has-values": {
"requires": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
"integrity": "sha1-+QuFhQf4HepNz7s8TD2/orVX+qo=",
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
"dependencies": {
"punycode": {
"schema-utils": {
"integrity": "sha1-z1k+9PLRdYdei7ZY6pLhik/QbY4=",
"dependencies": {
"requires": {
"dependencies": {
"lru-cache": {
"util-deprecate": {
"util.promisify": {
"validate-npm-package-license": {
"integrity": "sha1-X6kS2B630MdK/BQN5zF/DKffQ34=",
"validate-npm-package-name": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"vm-browserify": {
"void-elements": {
"webdriver-js-extender": {
"@webassemblyjs/ast": "1.7.8",
"@types/selenium-webdriver": "^3.0.0",
"@webassemblyjs/wasm-parser": "1.7.8",
"@webassemblyjs/wasm-edit": "1.7.8",
"@webassemblyjs/helper-module-context": "1.7.8",
"webpack-core": {
"integrity": "sha1-/FcViMhVjad76e+23r3Fo7FyvcI=",
"dependencies": {
"source-list-map": {
"source-map": {
"requires": {
"webpack-dev-middleware": {
"webpack-dev-server": {
"dependencies": {
"ansi-regex": {
"dependencies": {
"requires": {
"camelcase": {
"dependencies": {
"strip-ansi": {
"requires": {
"requires": {
"decamelize": {
"requires": {
"requires": {
"invert-kv": {
"is-fullwidth-code-point": {
"requires": {
"locate-path": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"p-locate": {
"schema-utils": {
"requires": {
"string-width": {
"requires": {
"requires": {
"dependencies": {
"strip-ansi": {
"requires": {
"which-module": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
"requires": {
"yargs-parser": {
"requires": {
"webpack-merge": {
"dependencies": {
"webpack-sources": {
"source-map": {
"webpack-subresource-integrity": {
"websocket-driver": {
"integrity": "sha1-RztRfsFZ4rhQBUl6E5g/CVQS404=",
"websocket-extensions": {
"which-module": {
"integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8=",
"dependencies": {
"dependencies": {
"xmlhttprequest-ssl": {
"camelcase": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
"yargs-parser": {
"dependencies": {
"integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",
"camelcase": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
"@babel/code-frame": "^7.0.0",
"@babel/highlight": "^7.0.0"
"@babel/generator": "^7.2.2",
"@babel/parser": "^7.2.2",
"@babel/helpers": "^7.2.0",
"@babel/code-frame": {
"@babel/traverse": "^7.2.2",
"@babel/template": "^7.2.2",
"dependencies": {
"@babel/types": "^7.2.2",
"requires": {
"@babel/generator": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.3.0",
"@babel/helper-annotate-as-pure": {
"@babel/helper-builder-react-jsx": {
"@babel/types": "^7.3.0",
"@babel/helper-call-delegate": {
"@babel/types": "^7.0.0"
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-create-class-features-plugin": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-define-map": {
"@babel/helper-replace-supers": "^7.2.3"
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-function-name": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/helper-hoist-variables": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/helper-module-transforms": {
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.2.2",
"@babel/helper-optimise-call-expression": {
"@babel/helper-plugin-utils": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.2.2",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-regex": {
"@babel/helper-remap-async-to-generator": {
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/traverse": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.2.3",
"@babel/helper-simple-access": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/helper-function-name": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/helpers": {
"@babel/types": "^7.2.0"
"@babel/template": "^7.1.0",
"@babel/highlight": {
"@babel/traverse": "^7.1.5",
"@babel/parser": {
"@babel/types": "^7.3.0"
"@babel/template": "^7.1.2",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-proposal-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-external-helpers": {
"@babel/plugin-proposal-decorators": {
"@babel/plugin-syntax-decorators": "^7.2.0"
"@babel/plugin-proposal-export-default-from": {
"@babel/plugin-proposal-nullish-coalescing-operator": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-object-rest-spread": "^7.2.0"
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-optional-chaining": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-optional-chaining": "^7.2.0"
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-dynamic-import": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-export-default-from": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-nullish-coalescing-operator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-chaining": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-jsx": {
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoping": {
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/plugin-transform-classes": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-computed-properties": {
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-for-of": {
"@babel/plugin-transform-flow-strip-types": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": "^7.2.0"
"@babel/plugin-transform-function-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-transform-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-simple-access": "^7.1.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-object-assign": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-parameters": {
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/plugin-transform-react-display-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-builder-react-jsx": "^7.3.0",
"@babel/plugin-transform-react-jsx": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-source": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-regenerator": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-runtime": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/plugin-syntax-typescript": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0"
"@babel/register": {
"@babel/helper-regex": "^7.0.0",
"dependencies": {
"source-map-support": {
"home-or-tmp": {
"@babel/runtime": {
"source-map": {
"requires": {
"@babel/types": "^7.2.2"
"@babel/code-frame": "^7.0.0",
"@babel/traverse": {
"@babel/parser": "^7.2.2",
"@babel/template": {
"@babel/generator": "^7.2.2",
"@babel/code-frame": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/parser": "^7.2.3",
"@babel/helper-function-name": "^7.1.0",
"@babel/types": "^7.2.2",
"@expo/samples": {
"@babel/types": {
"@expo/vector-icons": {
"from": "github:expo/vector-icons#expo-font-fix",
"integrity": "sha1-//DPnBuqH3D54dZYt8OaQg2bEKk=",
"@expo/websql": {
"@react-navigation/core": {
"hoist-non-react-statics": {
"requires": {
"dependencies": {
"@react-navigation/native": {
"requires": {
"hoist-non-react-statics": {
"dependencies": {
"@types/fbemitter": {
"@types/invariant": {
"@types/uuid-js": {
"@types/lodash": {
"@types/websql": {
"@types/lodash": "*"
"@types/lodash.zipobject": {
"acorn-globals": {
"absolute-path": {
"integrity": "sha1-p4di+9rftSl76ZsV01p4Wy8JW/c="
"ansi-escapes": {
"dependencies": {
"integrity": "sha1-qCJQ3bABXponyoLoLqYDu/pF768="
"ajv-keywords": {
"arr-diff": {
"dependencies": {
"requires": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"kind-of": {
"extend-shallow": {
"is-extendable": {
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"define-property": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"fill-range": {
"extend-shallow": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"isobject": {
"requires": {
"requires": {
"append-transform": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"are-we-there-yet": {
"integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",
"micromatch": {
"integrity": "sha1-bnIHtOzbObCviDA/pa4ivajfYcs="
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-reduce": {
"assign-symbols": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-unique": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"astral-regex": {
"babel-code-frame": {
"async-limiter": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"ansi-styles": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"js-tokens": {
"dependencies": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"supports-color": {
"babel-generator": {
"dependencies": {
"babel-helper-builder-react-jsx": {
"integrity": "sha1-Of+DE7dci2Xc7/HzHTg+D/KkCKA=",
"babel-helper-call-delegate": {
"integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
"babel-helper-function-name": {
"babel-helper-get-function-arity": {
"babel-helper-define-map": {
"integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
"requires": {
"babel-helper-hoist-variables": {
"integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
"babel-helper-replace-supers": {
"babel-helper-optimise-call-expression": {
"integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
"babel-helpers": {
"babel-messages": {
"integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
"babel-plugin-istanbul": {
"babel-plugin-jest-hoist": {
"babel-plugin-check-es2015-constants": {
"babel-plugin-syntax-class-properties": {
"babel-plugin-module-resolver": {
"babel-plugin-syntax-jsx": {
"integrity": "sha1-CvMqmm4Tyno/1QaeYtew9Y0NiUY="
"babel-plugin-syntax-flow": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-syntax-trailing-function-commas": {
"integrity": "sha1-ugNgk3+NBuQBgKQ/4NVhb/9TLPM="
"babel-plugin-transform-class-properties": {
"babel-plugin-transform-es2015-arrow-functions": {
"babel-plugin-syntax-object-rest-spread": {
"babel-plugin-transform-es2015-block-scoping": {
"babel-plugin-transform-es2015-destructuring": {
"babel-plugin-transform-es2015-classes": {
"integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
"babel-plugin-transform-es2015-computed-properties": {
"integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
"babel-plugin-transform-es2015-for-of": {
"babel-plugin-transform-es2015-function-name": {
"integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
"babel-plugin-transform-es2015-modules-commonjs": {
"babel-plugin-transform-es2015-literals": {
"babel-plugin-transform-es2015-object-super": {
"integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
"babel-plugin-transform-es2015-parameters": {
"babel-plugin-transform-es2015-shorthand-properties": {
"babel-plugin-transform-es2015-spread": {
"babel-plugin-transform-es2015-template-literals": {
"babel-plugin-transform-flow-strip-types": {
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-transform-es3-property-literals": {
"babel-plugin-transform-react-jsx": {
"babel-plugin-transform-react-display-name": {
"integrity": "sha1-Z+K/Hx6ck6sI25Z5LgU5K/LMKNE=",
"integrity": "sha1-hAoCjn30YN/DotKfDA2R9jduZqM=",
"babel-preset-fbjs": {
"@babel/plugin-proposal-decorators": "^7.1.0",
"babel-preset-jest": {
"babel-plugin-transform-strict-mode": {
"babel-preset-expo": {
"babel-register": {
"babel-runtime": {
"dependencies": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"dependencies": {
"babel-template": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"regenerator-runtime": {
"dependencies": {
"babel-traverse": {
"dependencies": {
"to-fast-properties": {
"requires": {
"balanced-match": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"dependencies": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"isobject": {
"requires": {
"bcrypt-pbkdf": {
"bplist-parser": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"brace-expansion": {
"bplist-creator": {
"browser-process-hrtime": {
"buffer-alloc": {
"browser-resolve": {
"builtin-modules": {
"buffer-alloc-unsafe": {
"dependencies": {
"dependencies": {
"isobject": {
"caller-callsite": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I="
"capture-exit": {
"arr-union": {
"define-property": {
"isobject": {
"requires": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"dependencies": {
"string-width": {
"requires": {
"dependencies": {
"code-point-at": {
"collection-visit": {
"color-convert": {
"color-support": {
"combined-stream": {
"component-emitter": {
"color-string": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"compressible": {
"dependencies": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"concat-stream": {
"requires": {
"dependencies": {
"copy-descriptor": {
"requires": {
"convert-source-map": {
"integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="
"dependencies": {
"core-util-is": {
"parse-json": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"requires": {
"create-react-context": {
"create-react-class": {
"whatwg-url": {
"dependencies": {
"requires": {
"default-require-extensions": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"decode-uri-component": {
"requires": {
"dependencies": {
"define-properties": {
"strip-bom": {
"define-property": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"requires": {
"is-descriptor": {
"delayed-stream": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"isobject": {
"detect-newline": {
"requires": {
"detect-indent": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"errorhandler": {
"es-to-primitive": {
"domexception": {
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM=",
"source-map": {
"dependencies": {
"event-target-shim": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"eventemitter3": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"cross-spawn": {
"dependencies": {
"requires": {
"expand-brackets": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=",
"expand-range": {
"@expo/websql": "^1.0.1",
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"@babel/runtime": "^7.1.2",
"@types/fbemitter": "^2.0.32",
"@types/lodash.zipobject": "^4.1.4",
"@types/qs": "^6.5.1",
"@types/invariant": "^2.2.29",
"@types/websql": "^0.0.27",
"expo-ads-admob": {
"expo-analytics-segment": {
"expo-app-auth": {
"expo-background-fetch": {
"@types/uuid-js": "^0.7.1",
"expo-barcode-scanner-interface": {
"expo-app-loader-provider": {
"expo-barcode-scanner": {
"expo-camera-interface": {
"expo-constants-interface": {
"expo-contacts": {
"expo-face-detector": {
"expo-face-detector-interface": {
"expo-font-interface": {
"expo-google-sign-in": {
"expo-constants": {
"expo-file-system": {
"expo-file-system-interface": {
"expo-image-loader-interface": {
"expo-location": {
"expo-local-authentication": {
"expo-localization": {
"expo-payments-stripe": {
"expo-react-native-adapter": {
"expo-permissions": {
"expo-media-library": {
"expo-permissions-interface": {
"expo-sensors-interface": {
"expo-sensors": {
"expo-task-manager": {
"expo-task-manager-interface": {
"external-editor": {
"integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",
"fast-deep-equal": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"extend-shallow": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"fast-levenshtein": {
"fast-json-stable-stringify": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"fbjs-scripts": {
"integrity": "sha1-Uj4U/a9SSIBbsC9i78M75wP1GGU=",
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"dependencies": {
"requires": {
"cross-spawn": {
"filename-regex": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"finalhandler": {
"requires": {
"dependencies": {
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"find-babel-config": {
"fragment-cache": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"forever-agent": {
"find-cache-dir": {
"integrity": "sha1-zTzl9+fLYUWIP8rjGR6Yd/hYeVA=",
"are-we-there-yet": {
"requires": {
"dependencies": {
"balanced-match": {
"code-point-at": {
"brace-expansion": {
"ansi-regex": {
"requires": {
"concat-map": {
"console-control-strings": {
"requires": {
"core-util-is": {
"delegates": {
"deep-extend": {
"requires": {
"detect-libc": {
"fs.realpath": {
"fs-minipass": {
"has-unicode": {
"requires": {
"iconv-lite": {
"requires": {
"requires": {
"ignore-walk": {
"inflight": {
"requires": {
"requires": {
"inherits": {
"is-fullwidth-code-point": {
"requires": {
"minimatch": {
"requires": {
"minimist": {
"minipass": {
"requires": {
"requires": {
"minizlib": {
"node-pre-gyp": {
"requires": {
"requires": {
"requires": {
"npm-bundled": {
"requires": {
"npm-packlist": {
"requires": {
"number-is-nan": {
"object-assign": {
"requires": {
"os-homedir": {
"os-tmpdir": {
"path-is-absolute": {
"requires": {
"requires": {
"process-nextick-args": {
"dependencies": {
"requires": {
"readable-stream": {
"minimist": {
"requires": {
"safe-buffer": {
"requires": {
"safer-buffer": {
"set-blocking": {
"string_decoder": {
"signal-exit": {
"string-width": {
"requires": {
"util-deprecate": {
"strip-ansi": {
"requires": {
"strip-json-comments": {
"requires": {
"requires": {
"wide-align": {
"get-caller-file": {
"requires": {
"source-map": {
"dependencies": {
"function-bind": {
"uglify-js": {
"commander": {
"requires": {
"har-validator": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q=",
"dependencies": {
"dependencies": {
"isobject": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"hoist-non-react-statics": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"requires": {
"hosted-git-info": {
"html-encoding-sniffer": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"dependencies": {
"http-signature": {
"import-fresh": {
"import-local": {
"statuses": {
"ansi-regex": {
"strip-ansi": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"requires": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"dependencies": {
"is-accessor-descriptor": {
"is-builtin-module": {
"is-data-descriptor": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY=",
"is-descriptor": {
"is-date-object": {
"is-directory": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-equal-shallow": {
"dependencies": {
"is-extendable": {
"is-fullwidth-code-point": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-generator-fn": {
"requires": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"dependencies": {
"dependencies": {
"is-plain-object": {
"isobject": {
"is-posix-bracket": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-primitive": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"is-typedarray": {
"isomorphic-fetch": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
"istanbul-api": {
"istanbul-lib-coverage": {
"istanbul-lib-report": {
"istanbul-lib-hook": {
"dependencies": {
"supports-color": {
"istanbul-lib-instrument": {
"istanbul-lib-source-maps": {
"requires": {
"dependencies": {
"requires": {
"istanbul-reports": {
"jest-changed-files": {
"jest-docblock": {
"has-flag": {
"jest-environment-node": {
"jest-environment-jsdom": {
"dependencies": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"@babel/core": "^7.1.0",
"ansi-regex": {
"babel-core": {
"requires": {
"dependencies": {
"requires": {
"jest-cli": {
"jest-haste-map": {
"requires": {
"requires": {
"strip-ansi": {
"requires": {
"requires": {
"requires": {
"yargs-parser": {
"jest-get-type": {
"jest-leak-detector": {
"jest-haste-map": {
"jest-jasmine2": {
"jest-regex-util": {
"jest-matcher-utils": {
"requires": {
"jest-message-util": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-resolve": {
"jest-resolve-dependencies": {
"requires": {
"dependencies": {
"jest-haste-map": {
"requires": {
"source-map": {
"jest-runtime": {
"source-map-support": {
"ansi-regex": {
"dependencies": {
"requires": {
"jest-haste-map": {
"strip-ansi": {
"requires": {
"requires": {
"yargs-parser": {
"write-file-atomic": {
"requires": {
"requires": {
"jest-serializer": {
"requires": {
"jest-snapshot": {
"dependencies": {
"jest-watcher": {
"jest-validate": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"requires": {
"source-map": {
"json-parse-better-errors": {
"json-stable-stringify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-schema-traverse": {
"dependencies": {
"load-json-file": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=",
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"requires": {
"json-stringify-safe": {
"lodash.filter": {
"dependencies": {
"lodash.mapvalues": {
"integrity": "sha1-0uPuv/DZ05rVD1y9G1KnvOa7YRs="
"lodash.padend": {
"lodash.padstart": {
"integrity": "sha1-UvBWEP/53tQiYRRB7R/BI6AwAbM="
"lodash.throttle": {
"lodash.sortby": {
"loader-utils": {
"integrity": "sha1-wj6RtxAkKscMN/HhzaknTMOb8vQ="
"integrity": "sha1-s5n1q6j/YqdG9peb8gshT5ZNvvg="
"lodash.zipobject": {
"lottie-react-native": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"loose-envify": {
"@babel/core": "^7.0.0",
"@babel/generator": "^7.0.0",
"merge-stream": {
"@babel/plugin-external-helpers": "^7.0.0",
"@babel/parser": "^7.0.0",
"@babel/template": "^7.0.0",
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.0.0",
"ansi-styles": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"requires": {
"@babel/helper-module-imports": "^7.0.0"
"metro-react-native-babel-preset": {
"metro-babel7-plugin-react-transform": {
"@babel/plugin-transform-for-of": "^7.0.0",
"requires": {
"requires": {
"@babel/plugin-transform-classes": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"mime-types": {
"@babel/plugin-transform-typescript": "^7.0.0",
"requires": {
"@babel/template": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"node-fetch": {
"supports-color": {
"@babel/core": "^7.0.0",
"metro-babel-register": {
"requires": {
"@babel/register": "^7.0.0",
"dependencies": {
"@babel/helper-module-imports": "^7.0.0"
"metro-babel7-plugin-react-transform": {
"metro-config": {
"metro-react-native-babel-preset": {
"metro-memory-fs": {
"@babel/plugin-syntax-dynamic-import": "^7.0.0",
"@babel/plugin-transform-block-scoping": "^7.0.0",
"@babel/plugin-transform-classes": "^7.0.0",
"@babel/plugin-transform-destructuring": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"metro-minify-uglify": {
"@babel/plugin-transform-function-name": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-object-assign": "^7.0.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-runtime": "^7.0.0",
"@babel/plugin-transform-sticky-regex": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.0.0",
"@babel/plugin-transform-typescript": "^7.0.0",
"metro-resolver": {
"@babel/template": "^7.0.0",
"metro-source-map": {
"dependencies": {
"requires": {
"arr-diff": {
"requires": {
"integrity": "sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=",
"min-document": {
"is-extendable": {
"dependencies": {
"requires": {
"dependencies": {
"minimist": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"moment-timezone": {
"dependencies": {
"arr-diff": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"requires": {
"is-extendable": {
"natural-compare": {
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
"integrity": "sha1-XzPUfxPSFQ35PgywNmmemC94/78="
"normalize-package-data": {
"normalize-path": {
"node-modules-regexp": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"node-notifier": {
"number-is-nan": {
"npm-run-path": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"dependencies": {
"define-property": {
"requires": {
"object-visit": {
"dependencies": {
"requires": {
"object.getownpropertydescriptors": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"isobject": {
"dependencies": {
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"isobject": {
"integrity": "sha1-ttmec5n3jWXDuq/+8fsojpuFJDo=",
"minimist": {
"dependencies": {
"integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"wordwrap": {
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"parse-node-version": {
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-is-absolute": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"path-to-regexp": {
"integrity": "sha1-z4uvrm7d/0tafvsYUmnqr0YQ3b0="
"dependencies": {
"performance-now": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"pinkie-promise": {
"pouchdb-collections": {
"posix-character-classes": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
"pretty-format": {
"integrity": "sha1-/mOhfal3YRq+98uAJssalVP9g1k="
"ansi-regex": {
"plugin-error": {
"integrity": "sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8="
"dependencies": {
"process-nextick-args": {
"range-parser": {
"is-number": {
"query-string": {
"react-clone-referenced-element": {
"dependencies": {
"react-devtools-core": {
"react-deep-force-update": {
"dependencies": {
"react-lifecycles-compat": {
"react-native": {
"dependencies": {
"requires": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"requires": {
"node-fetch": {
"pretty-format": {
"regenerator-runtime": {
"react-native-branch": {
"requires": {
"supports-color": {
"react-native-gesture-handler": {
"react-native-maps": {
"from": "github:expo/react-native-maps#v0.22.1-exp.0"
"react-native-platform-touchable": {
"react-native-reanimated": {
"integrity": "sha1-/eSsxl7qWF0osWTQw3FqQhKaaOQ="
"react-native-safe-area-view": {
"react-native-screens": {
"react-native-tab-view": {
"react-native-svg": {
"react-native-safe-module": {
"react-native-vector-icons": {
"react-native-view-shot": {
"@react-navigation/core": "3.0.2",
"react-navigation": {
"react-navigation-drawer": {
"react-navigation-stack": {
"react-navigation-tabs": {
"react-test-renderer": {
"integrity": "sha1-nb/Z2SdSjDqp9ETkVYw3gwq4wmo=",
"react-timer-mixin": {
"@react-navigation/native": "3.0.3",
"integrity": "sha1-4aQL0Krvxy6N/Xp82gmvhQZjl7s=",
"react-transform-hmr": {
"realpath-native": {
"readable-stream": {
"regenerator-runtime": {
"regenerate-unicode-properties": {
"dependencies": {
"regenerator-transform": {
"extend-shallow": {
"requires": {
"is-extendable": {
"requires": {
"regexpu-core": {
"remove-trailing-separator": {
"dependencies": {
"repeat-element": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"repeat-string": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"punycode": {
"dependencies": {
"request-promise-core": {
"tough-cookie": {
"request-promise-native": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"requires": {
"require-main-filename": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"resolve-from": {
"require-directory": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"restore-cursor": {
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"safer-buffer": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"dependencies": {
"rx-lite-aggregates": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"arr-diff": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"expand-brackets": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"is-descriptor": {
"requires": {
"extend-shallow": {
"requires": {
"kind-of": {
"is-extendable": {
"requires": {
"dependencies": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"micromatch": {
"integrity": "sha1-XWFr6KXmB9VOEUr65Vt+ry/MMkA="
"schema-utils": {
"isobject": {
"dependencies": {
"requires": {
"requires": {
"serve-static": {
"statuses": {
"set-blocking": {
"serialize-error": {
"extend-shallow": {
"requires": {
"dependencies": {
"setprototypeof": {
"shebang-command": {
"setimmediate": {
"shebang-regex": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"dependencies": {
"base64-js": {
"simple-plist": {
"requires": {
"simple-swizzle": {
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"dependencies": {
"is-arrayish": {
"xmlbuilder": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"snapdragon-node": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-data-descriptor": {
"is-accessor-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"isobject": {
"snapdragon-util": {
"requires": {
"dependencies": {
"source-map-support": {
"requires": {
"source-map-resolve": {
"spdx-correct": {
"source-map-url": {
"spdx-expression-parse": {
"spdx-license-ids": {
"split-string": {
"spdx-exceptions": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"is-extendable": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"stacktrace-parser": {
"dependencies": {
"static-extend": {
"define-property": {
"stealthy-require": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks=",
"stream-buffers": {
"requires": {
"strict-uri-encode": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"dependencies": {
"string-length": {
"strip-ansi": {
"requires": {
"ansi-regex": {
"string-width": {
"ansi-regex": {
"is-fullwidth-code-point": {
"requires": {
"dependencies": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"strip-ansi": {
"supports-color": {
"string_decoder": {
"integrity": "sha1-5Dm+Kq7jJzIZUnMPmaiSnk/FBYI="
"dependencies": {
"test-exclude": {
"dependencies": {
"requires": {
"load-json-file": {
"requires": {
"path-exists": {
"requires": {
"path-type": {
"read-pkg": {
"requires": {
"requires": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"read-pkg-up": {
"requires": {
"strip-bom": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"requires": {
"integrity": "sha1-JaZ/LG4lOyypQZd7XvdELvl6YEY="
"dependencies": {
"to-fast-properties": {
"to-object-path": {
"requires": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"extend-shallow": {
"dependencies": {
"is-extendable": {
"requires": {
"dependencies": {
"is-number": {
"to-regex-range": {
"requires": {
"requires": {
"tough-cookie": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"requires": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
"ua-parser-js": {
"tunnel-agent": {
"dependencies": {
"unicode-canonical-property-names-ecmascript": {
"source-map": {
"commander": {
"unicode-match-property-ecmascript": {
"unicode-match-property-value-ecmascript": {
"unicode-property-aliases-ecmascript": {
"dependencies": {
"extend-shallow": {
"requires": {
"set-value": {
"arr-union": {
"dependencies": {
"requires": {
"has-value": {
"dependencies": {
"requires": {
"has-values": {
"requires": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"util-deprecate": {
"isobject": {
"util.promisify": {
"validate-npm-package-license": {
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"webidl-conversions": {
"isobject": {
"whatwg-fetch": {
"whatwg-encoding": {
"dependencies": {
"which-module": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"whatwg-mimetype": {
"requires": {
"string-width": {
"write-file-atomic": {
"integrity": "sha1-ZUS7ot/ajBzxfmKaOjBeK7H+5sE="
"xml-name-validator": {
"integrity": "sha1-0lciS+g5PqrL+DfvIn/Y7CWzaIg=",
"dependencies": {
"yargs-parser": {
"integrity": "sha1-YpmpBVsc78lp/355wdkY3Osiw2A=",
"integrity": "sha1-jdi/Rfw/f1Xw4FS4ePQ6YmFNr98="
"@angular/common": {
"@angular/animations": {
"@angular-devkit/build-optimizer": {
"@angular/compiler": {
"@angular/compiler-cli": {
"@angular/core": {
"@angular/http": {
"@angular/forms": {
"@angular/platform-browser": {
"@babel/highlight": "^7.0.0"
"@angular/platform-browser-dynamic": {
"@babel/code-frame": {
"@babel/generator": {
"@babel/types": "^7.1.3",
"@babel/helper-function-name": {
"dependencies": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": {
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/highlight": {
"@babel/parser": {
"dependencies": {
"js-tokens": {
"@babel/template": {
"@babel/code-frame": "^7.0.0",
"@babel/traverse": {
"@babel/parser": "^7.1.2",
"@babel/types": "^7.1.2"
"@babel/code-frame": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/generator": "^7.1.3",
"@babel/helper-function-name": "^7.1.0",
"@babel/parser": "^7.1.3",
"requires": {
"@babel/types": "^7.1.3",
"dependencies": {
"@babel/types": {
"dependencies": {
"to-fast-properties": {
"@ionic-native/core": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
"@ionic-native/splash-screen": {
"@ionic-native/status-bar": {
"@angular-devkit/build-optimizer": "0.0.35",
"@ionic/app-scripts": {
"source-map": {
"dependencies": {
"@types/jasmine": {
"@ionic/storage": {
"integrity": "sha1-vShOV8hPEyXacCur/IKlMoGQwMU=",
"acorn-dynamic-import": {
"dependencies": {
"@types/selenium-webdriver": {
"angular2-template-loader": {
"ajv-keywords": {
"integrity": "sha1-/ts5T58OAqqXaOcCvaI7UF+ufh8=",
"integrity": "sha1-YXmX/F9gV2iUxDX5QNgZ4TW4B2I=",
"dependencies": {
"integrity": "sha1-wNROkP/w+sleiyPwQ6zaf9HFHXw=",
"loader-utils": {
"integrity": "sha1-+G5jdNQyBabmxg6RlvF8Apm/s0g=",
"append-transform": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"dependencies": {
"string_decoder": {
"are-we-there-yet": {
"requires": {
"readable-stream": {
"array-unique": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
"array-flatten": {
"array-find-index": {
"arraybuffer.slice": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"inherits": {
"dependencies": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"requires": {
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"async-foreach": {
"async-limiter": {
"babel-code-frame": {
"autoprefixer": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"ansi-styles": {
"requires": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"dependencies": {
"babel-messages": {
"supports-color": {
"babel-runtime": {
"babel-generator": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-traverse": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"babel-template": {
"dependencies": {
"define-property": {
"balanced-match": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"isobject": {
"base64-arraybuffer": {
"bcrypt-pbkdf": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"better-assert": {
"integrity": "sha1-QIZrnhueC1W0gYlDEeaPr/rrxSI=",
"integrity": "sha1-n2BVO8XOjDOG87VTz/R0Yq3sqnk=",
"block-stream": {
"dependencies": {
"blocking-proxy": {
"binary-extensions": {
"raw-body": {
"integrity": "sha1-HQJ8K/oRasxmI7yo8AAWVyqH1CU=",
"requires": {
"string_decoder": {
"integrity": "sha1-OciRjO/1eZ+D+UkqhI9iWt0Mdm8=",
"brace-expansion": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=",
"browser-resolve": {
"dependencies": {
"browserify-aes": {
"browserify-cipher": {
"browserify-des": {
"browserify-istanbul": {
"browserify-rsa": {
"browserify-sign": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-zlib": {
"browserslist": {
"browserstack": {
"buffer-alloc": {
"buffer-alloc-unsafe": {
"builtin-modules": {
"builtin-status-codes": {
"dependencies": {
"isobject": {
"camelcase-keys": {
"caniuse-lite": {
"integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
"center-align": {
"circular-json": {
"dependencies": {
"requires": {
"isobject": {
"define-property": {
"dependencies": {
"code-point-at": {
"integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8="
"source-map": {
"collection-visit": {
"color-convert": {
"combine-lists": {
"integrity": "sha1-RYwH4J4NkA/Ci3Cj/sLazR0st/Y=",
"combined-stream": {
"compare-versions": {
"component-bind": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"component-emitter": {
"component-inherit": {
"integrity": "sha1-ZF/ErfWLcrZJ1crmUTVhnbJv8UM=",
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
"dependencies": {
"finalhandler": {
"integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
"statuses": {
"requires": {
"connect-livereload": {
"console-browserify": {
"console-control-strings": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
"constants-browserify": {
"integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4="
"content-disposition": {
"content-type": {
"continuable-cache": {
"integrity": "sha1-vXJ6f67XfnH/OYWskzUakSczrQ8=",
"convert-source-map": {
"cookie-signature": {
"dependencies": {
"copy-descriptor": {
"balanced-match": {
"base64-js": {
"requires": {
"bplist-creator": {
"bplist-parser": {
"big-integer": {
"requires": {
"requires": {
"brace-expansion": {
"concat-map": {
"cordova-registry-mapper": {
"requires": {
"cordova-common": {
"elementtree": {
"requires": {
"requires": {
"inflight": {
"requires": {
"inherits": {
"dependencies": {
"requires": {
"bplist-parser": {
"nopt": {
"requires": {
"minimatch": {
"requires": {
"requires": {
"requires": {
"requires": {
"path-is-absolute": {
"requires": {
"dependencies": {
"shelljs": {
"simple-plist": {
"requires": {
"requires": {
"plist": {
"base64-js": {
"dependencies": {
"requires": {
"stream-buffers": {
"xml-escape": {
"underscore": {
"integrity": "sha1-/Ajzci5n7ve2xnv8mag99q3Quro="
"cordova-plugin-ionic-keyboard": {
"cordova-plugin-device": {
"xmlbuilder": {
"cordova-plugin-splashscreen": {
"cordova-plugin-statusbar": {
"cordova-plugin-ionic-webview": {
"integrity": "sha1-dH509W4gHNWFvGLRS8oZ9oZ/8e0="
"integrity": "sha1-tehezbv+Wu3tQKG/TuI3LmfZb7Q="
"cordova-plugin-whitelist": {
"core-util-is": {
"integrity": "sha1-/B+9wNjXAzp+jh8ff/FnrJvU+vY="
"currently-unhandled": {
"integrity": "sha1-O9/s3GCBR8HGcgL6KR59ylnqo7g=",
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"crypto-browserify": {
"custom-event": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"decode-uri-component": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs=",
"default-require-extensions": {
"strip-bom": {
"dependencies": {
"define-properties": {
"define-property": {
"is-data-descriptor": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"is-descriptor": {
"isobject": {
"integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
"detect-indent": {
"delayed-stream": {
"dependencies": {
"diffie-hellman": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
"domain-browser": {
"dom-serialize": {
"dotenv-webpack": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"electron-to-chromium": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=",
"integrity": "sha1-xEOVqyHR/SjXmpCUKnsUsd69FF8=",
"dependencies": {
"engine.io-client": {
"requires": {
"dependencies": {
"requires": {
"engine.io-parser": {
"enhanced-resolve": {
"integrity": "sha1-pfdf/02ZJhJt2sDqXcOOaJFTywI=",
"es6-iterator": {
"integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
"integrity": "sha1-kTbgUD3MBqMBaQ8LsU/042TpSfA=",
"es6-templates": {
"es6-promisify": {
"es6-weak-map": {
"integrity": "sha1-XjqzIlH/0VOKH45f+hNXdy+S2W8=",
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
"estree-walker": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=",
"event-stream": {
"evp_bytestokey": {
"eventemitter3": {
"event-emitter": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=",
"integrity": "sha1-SIsdHSRRyz06axks/AMPRMWFX+o=",
"expand-braces": {
"dependencies": {
"integrity": "sha1-wIVxEIUpHYt1/ddOqw+FlygHEeY=",
"requires": {
"integrity": "sha1-TLjtoJk8pW+k9B/ELzy7TMrf8EQ=",
"expand-range": {
"requires": {
"is-number": {
"repeat-string": {
"expand-brackets": {
"expand-range": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"dependencies": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=",
"path-to-regexp": {
"safe-buffer": {
"extend-shallow": {
"dependencies": {
"is-extendable": {
"requires": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"fast-deep-equal": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I=",
"fast-json-stable-stringify": {
"faye-websocket": {
"integrity": "sha1-0eJkOzipTXWDtHkGDmxK/8lAcfg=",
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"dependencies": {
"integrity": "sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=",
"requires": {
"dependencies": {
"requires": {
"iconv-lite": {
"minimatch": {
"integrity": "sha1-HOYKOleGSiktEyH/RgnKS7llrcg="
"isbinaryfile": {
"integrity": "sha1-Bjfqqjaooc/IZcOt+5Qhib+wmY0="
"minimatch": {
"lru-cache": {
"requires": {
"integrity": "sha1-5Dm+Kq7jJzIZUnMPmaiSnk/FBYI="
"filename-regex": {
"finalhandler": {
"dependencies": {
"integrity": "sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=",
"requires": {
"minimatch": {
"lru-cache": {
"requires": {
"first-chunk-stream": {
"follow-redirects": {
"requires": {
"dependencies": {
"forever-agent": {
"dependencies": {
"combined-stream": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ=",
"requires": {
"fragment-cache": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"integrity": "sha1-g8YK/Fi5xWmXAH7Rp2izqzA6RP4="
"dependencies": {
"integrity": "sha1-1qh/JiJxzv6+wwxVNAf7mV2od3o=",
"ansi-regex": {
"requires": {
"are-we-there-yet": {
"balanced-match": {
"brace-expansion": {
"requires": {
"code-point-at": {
"concat-map": {
"console-control-strings": {
"requires": {
"core-util-is": {
"deep-extend": {
"detect-libc": {
"fs-minipass": {
"delegates": {
"requires": {
"fs.realpath": {
"requires": {
"has-unicode": {
"requires": {
"requires": {
"iconv-lite": {
"requires": {
"ignore-walk": {
"requires": {
"inflight": {
"inherits": {
"is-fullwidth-code-point": {
"requires": {
"minimatch": {
"requires": {
"minimist": {
"minipass": {
"minizlib": {
"requires": {
"requires": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"requires": {
"npm-packlist": {
"npm-bundled": {
"requires": {
"requires": {
"number-is-nan": {
"object-assign": {
"requires": {
"os-homedir": {
"os-tmpdir": {
"requires": {
"path-is-absolute": {
"process-nextick-args": {
"requires": {
"dependencies": {
"minimist": {
"requires": {
"readable-stream": {
"requires": {
"safe-buffer": {
"safer-buffer": {
"set-blocking": {
"signal-exit": {
"string-width": {
"requires": {
"requires": {
"strip-ansi": {
"string_decoder": {
"requires": {
"strip-json-comments": {
"util-deprecate": {
"requires": {
"wide-align": {
"requires": {
"function-bind": {
"integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
"generate-function": {
"generate-object-property": {
"integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4=",
"integrity": "sha1-kXCl8St5Awb9/lmPMT+PeVT9FDs=",
"get-caller-file": {
"dependencies": {
"requires": {
"minimatch": {
"requires": {
"integrity": "sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=",
"glob-watcher": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"graceful-fs": {
"inherits": {
"integrity": "sha1-FaSAaldUfLLS2/J/QuiajDRRs2Q="
"lru-cache": {
"minimatch": {
"dependencies": {
"requires": {
"commander": {
"source-map": {
"uglify-js": {
"har-validator": {
"requires": {
"dependencies": {
"integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
"integrity": "sha1-XkdHk/fqmEPRu5nCPu9J/xJv/zk=",
"dependencies": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q=",
"isobject": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"integrity": "sha1-ILt0A9POo5jpHcRxCo/xuCdKJe0=",
"hosted-git-info": {
"html-minifier": {
"commander": {
"dependencies": {
"source-map": {
"uglify-js": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-parser-js": {
"requires": {
"integrity": "sha1-O9bW/ebjFyyTNMOzO2wZPYD+ETc=",
"https-browserify": {
"http-signature": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=",
"dependencies": {
"integrity": "sha1-2WyScyB28HJxG2sQ/X1PZa2O4j0="
"https-proxy-agent": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
"indent-string": {
"integrity": "sha1-ftGxQQxqDg94z5XTuEQMY/eLhhQ=",
"integrity": "sha1-4g/146KvwmkDILbcVSaCqcf631E=",
"assert-plus": {
"integrity": "sha1-rqdNXmHB+JlhO/ZL2mbUx48v0X0="
"integrity": "sha1-emNune1O/O+xnO9JR6PGffrukRs=",
"dependencies": {
"integrity": "sha1-ATfmV7qlp1QcV6w3rF/AfXO03B8=",
"requires": {
"combined-stream": {
"requires": {
"requires": {
"integrity": "sha1-pz4kScPvwt/RZhhll3oJGE0SAZY=",
"finalhandler": {
"dependencies": {
"requires": {
"cross-spawn": {
"cryptiles": {
"requires": {
"integrity": "sha1-7ZH/HxetE9N0gohZT4pIoNJvMlw=",
"requires": {
"requires": {
"integrity": "sha1-W5wla9VLbsAigxdvqKDt5tFUy/g=",
"delayed-stream": {
"integrity": "sha1-tDO0ck5x/YVR2YhRdIUcX8N34sk="
"ee-first": {
"integrity": "sha1-jJshKJjYzZ8alDZlDOe+ICyen/A="
"integrity": "sha1-GBoobq05ejmpKFfPsdQwUuNWv/A="
"escape-html": {
"finalhandler": {
"requires": {
"requires": {
"dependencies": {
"debug": {
"requires": {
"forever-agent": {
"integrity": "sha1-bQ4JxJIflKJ/Y9O0nF/v8epMUTA="
"form-data": {
"integrity": "sha1-uQuxaYByhUEdp//LjdJZhQLTtS0=",
"integrity": "sha1-kavXiKupcCsaq/qLwBAxoqyeOxI=",
"requires": {
"requires": {
"http-signature": {
"lru-cache": {
"requires": {
"minimist": {
"integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="
"integrity": "sha1-2JwhJMb9wTU9Zai3e/GqxLGTcIw="
"integrity": "sha1-sEDrCSOWivq/jTL7HxfxFn/auQc="
"node-uuid": {
"oauth-sign": {
"on-finished": {
"integrity": "sha1-DFOfCSkej/rd4MiiWFD7LO3HAi0=",
"requires": {
"optimist": {
"range-parser": {
"requires": {
"requires": {
"integrity": "sha1-aHKCNTXGkuLCoBA4Jq/YLC4P8XU="
"integrity": "sha1-VjsZx8HeiS4Jv8Ty/DDjwn8JUrk="
"requires": {
"dependencies": {
"debug": {
"requires": {
"requires": {
"serve-static": {
"requires": {
"tunnel-agent": {
"integrity": "sha1-rWgbaPUyGtKCfEz7G31d8s/pQu4="
"utils-merge": {
"requires": {
"ionic-angular": {
"integrity": "sha1-OYuuJeAfI6sxttN5dU7p08S/sGY=",
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4=",
"is-binary-path": {
"is-builtin-module": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-data-descriptor": {
"is-descriptor": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"dependencies": {
"is-equal-shallow": {
"is-extendable": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-fullwidth-code-point": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"integrity": "sha1-Mlj7afeMFNW4FdZkM2tM/7ZEFZE=",
"is-my-ip-valid": {
"is-path-in-cwd": {
"is-path-inside": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-my-json-valid": {
"is-plain-object": {
"dependencies": {
"isobject": {
"is-posix-bracket": {
"is-primitive": {
"integrity": "sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=",
"isbinaryfile": {
"is-typedarray": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo=",
"dependencies": {
"istanbul-api": {
"istanbul-lib-coverage": {
"istanbul-lib-instrument": {
"requires": {
"@babel/parser": "^7.0.0",
"@babel/generator": "^7.0.0",
"@babel/template": "^7.0.0",
"@babel/traverse": "^7.0.0",
"@babel/types": "^7.0.0",
"istanbul-instrumenter-loader": {
"istanbul-lib-coverage": {
"istanbul-lib-hook": {
"istanbul-lib-instrument": {
"istanbul-lib-report": {
"istanbul-lib-coverage": {
"istanbul-lib-source-maps": {
"dependencies": {
"dependencies": {
"istanbul-lib-coverage": {
"requires": {
"source-map": {
"jasmine-core": {
"jasmine-spec-reporter": {
"istanbul-reports": {
"integrity": "sha1-5kAN8ea1bhMLYcS80JPap/boyhU=",
"json-schema-traverse": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"json-stringify-safe": {
"integrity": "sha1-+rg/uwstjchfpjbEudNMdUIMbWU=",
"es6-promise": {
"process-nextick-args": {
"dependencies": {
"readable-stream": {
"integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=",
"string_decoder": {
"requires": {
"anymatch": {
"dependencies": {
"requires": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
"requires": {
"dependencies": {
"extend-shallow": {
"chokidar": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"extend-shallow": {
"requires": {
"dependencies": {
"glob-parent": {
"requires": {
"dependencies": {
"is-glob": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"isobject": {
"micromatch": {
"requires": {
"karma-chrome-launcher": {
"source-map": {
"karma-coverage-istanbul-reporter": {
"karma-jasmine": {
"karma-jasmine-html-reporter": {
"karma-sourcemap-loader": {
"integrity": "sha1-kTIsd/jxPUb+0GKwQuEAnUxFBdg=",
"karma-webpack": {
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"requires": {
"livereload-js": {
"string_decoder": {
"load-json-file": {
"loader-runner": {
"loader-utils": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"localforage-cordovasqlitedriver": {
"dependencies": {
"lodash._isnative": {
"path-exists": {
"lodash._objecttypes": {
"integrity": "sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE="
"lodash._shimkeys": {
"integrity": "sha1-bpzJZm/wgfC1psl4uD4kLmlJ0gM=",
"lodash.assign": {
"lodash.clonedeep": {
"lodash.debounce": {
"integrity": "sha1-4j8/nE+Pvd6HJSnBBxhXoIblzO8=",
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168=",
"lodash.defaults": {
"integrity": "sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=",
"lodash.isobject": {
"integrity": "sha1-SN6kbfj/djKxDXBrissmWR4rNyc=",
"lodash.mergewith": {
"dependencies": {
"requires": {
"loglevelnext": {
"loose-envify": {
"magic-string": {
"macos-release": {
"loud-rejection": {
"dependencies": {
"match-stream": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"requires": {
"string_decoder": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=",
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
"merge-descriptors": {
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=",
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=",
"minimalistic-assert": {
"miller-rabin": {
"minimalistic-crypto-utils": {
"dependencies": {
"is-extendable": {
"requires": {
"dependencies": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"minimist": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-q8xsvT7C7Spyn/bnwfqPAXhKhXQ="
"integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw=",
"requires": {
"dependencies": {
"node-libs-browser": {
"ansi-styles": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"cross-spawn": {
"supports-color": {
"requires": {
"integrity": "sha1-xkZdvwirzU2zWTF/eaxopkayj/k=",
"integrity": "sha1-WPZUpz2XU98MUdlobckhBKZ/S7s=",
"dependencies": {
"requires": {
"normalize-package-data": {
"normalize-path": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-range": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=",
"integrity": "sha1-E49VN2MMcPR5f2BFyXogh/qI3AE=",
"dependencies": {
"ansicolors": {
"ansistyles": {
"block-stream": {
"requires": {
"char-spinner": {
"child-process-close": {
"cmd-shim": {
"requires": {
"columnify": {
"requires": {
"dependencies": {
"strip-ansi": {
"requires": {
"wcwidth": {
"dependencies": {
"ansi-regex": {
"requires": {
"dependencies": {
"defaults": {
"requires": {
"dependencies": {
"clone": {
"requires": {
"fstream-npm": {
}
"requires": {
"fstream-ignore": {
"dependencies": {
"requires": {
"github-url-from-git": {
"github-url-from-username-repo": {
"inflight": {
"requires": {
"graceful-fs": {
"requires": {
"inherits": {
"requires": {
"init-package-json": {
"dependencies": {
"promzard": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=",
"requires": {
"lockfile": {
"lru-cache": {
"minimatch": {
"requires": {
"dependencies": {
"sigmund": {
"requires": {
"minimist": {
"dependencies": {
"node-gyp": {
"requires": {
"requires": {
"npm-install-checks": {
"npm-cache-filename": {
"requires": {
"npm-registry-client": {
"requires": {
"npmlog": {
"dependencies": {
"requires": {
"npm-user-validate": {
"requires": {
"dependencies": {
"config-chain": {
"requires": {
"dependencies": {
"proto-list": {
"requires": {
"path-is-inside": {
"requires": {
"mute-stream": {
"dependencies": {
"read-installed": {
"requires": {
"dependencies": {
"read-package-json": {
"util-extend": {
"requires": {
"dependencies": {
"normalize-package-data": {
"readable-stream": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"aws-sign2": {
"requires": {
"dependencies": {
"readable-stream": {
"requires": {
"dependencies": {
"core-util-is": {
},
"isarray": {
},
"string_decoder": {
}
"caseless": {
"forever-agent": {
"form-data": {
"requires": {
"dependencies": {
"combined-stream": {
"async": {
"requires": {
"dependencies": {
}
"delayed-stream": {
"mime": {
"hawk": {
"requires": {
"dependencies": {
"boom": {
"requires": {
"cryptiles": {
"requires": {
"hoek": {
"sntp": {
"requires": {
"http-signature": {
"requires": {
"asn1": {
"dependencies": {
"assert-plus": {
"ctype": {
"json-stringify-safe": {
"mime-types": {
"node-uuid": {
"oauth-sign": {
"stringstream": {
"tough-cookie": {
"requires": {
"dependencies": {
"punycode": {
"tunnel-agent": {
"sorted-object": {
"requires": {
"string_decoder": {
"text-table": {
"npm-run-path": {
"uid-number": {
"requires": {
"integrity": "sha1-l33/1xdgErnsMNKjnbXPcqBDnt0=",
"num2fraction": {
"integrity": "sha1-F76av80/8OFRL2/Er8sfUDk3j64=",
"number-is-nan": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"object-component": {
"dependencies": {
"define-property": {
"requires": {
"object-visit": {
"dependencies": {
"isobject": {
"object.assign": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"dependencies": {
"isobject": {
"integrity": "sha1-QsPhjslUZra/DcQvOilFw/DK2Pw="
"dependencies": {
"minimist": {
"integrity": "sha1-/VZamvjrRHO6abbtijQ1LLVS8SY="
"integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8=",
"ordered-read-streams": {
"os-browserify": {
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
"integrity": "sha1-8phS5w/X4l82DgE6jsRMgq7bVwg="
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=",
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"integrity": "sha1-gCBKUNTbt3m/3G6+J3jZDkvOMgo=",
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-browserify": {
"path-dirname": {
"path-is-absolute": {
"path-is-inside": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
"path-to-regexp": {
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"pause-stream": {
"integrity": "sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=",
"integrity": "sha1-z4uvrm7d/0tafvsYUmnqr0YQ3b0="
"performance-now": {
"pinkie-promise": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"posix-character-classes": {
"dependencies": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"source-map": {
"postcss-value-parser": {
"integrity": "sha1-h/OPnxj3dKSrTIojL1xc6IcqnRU=",
"process-nextick-args": {
"integrity": "sha1-DHOVl74czraOmmbUpw/ZJwWql1s="
"integrity": "sha1-PtLRPxkhxpEmwER64UyD/UgeYRk=",
"@types/node": "^6.0.46",
"@types/q": "^0.0.32",
"@types/selenium-webdriver": "^3.0.0",
"dependencies": {
"@types/node": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"requires": {
"jasmine-core": {
"requires": {
"source-map-support": {
"requires": {
"supports-color": {
"webdriver-manager": {
"requires": {
"proxy-middleware": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY=",
"integrity": "sha1-o/3xvvtzD5UZZYcqwvYHTGFHelY=",
"integrity": "sha1-1vs79a7Wl+gxFQ6xACwlo/iuExQ=",
"public-encrypt": {
"requires": {
"readable-stream": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"dependencies": {
"string_decoder": {
"querystring-es3": {
"dependencies": {
"is-number": {
"range-parser": {
"integrity": "sha1-vNYMd9Prk83gBQKVw/N5OJvIj4k=",
"http-errors": {
"dependencies": {
"requires": {
"setprototypeof": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"readable-stream": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"integrity": "sha1-RR/TAEqx5N+bTktmN2sqIZEkYtM=",
"isobject": {
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM=",
"regenerator-runtime": {
"dependencies": {
"reflect-metadata": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk=",
"repeat-element": {
"repeat-string": {
"remove-trailing-separator": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"integrity": "sha1-Tf5b9r6LjNw3/Pk+BLZVd3InEN4=",
"dependencies": {
"ansi-styles": {
"assert-plus": {
"aws-sign2": {
"integrity": "sha1-104bh+ev/A24qttwIfP+SBAasjQ=",
"caseless": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"form-data": {
"requires": {
"har-validator": {
"requires": {
"http-signature": {
"requires": {
"oauth-sign": {
"integrity": "sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=",
"supports-color": {
"require-directory": {
"tough-cookie": {
"requires": {
"tunnel-agent": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
"requires-port": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=",
"require-main-filename": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"integrity": "sha1-/s5hv6DBtSoga9axgZgYS91SOjs="
"rollup-plugin-commonjs": {
"integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",
"rollup-plugin-node-resolve": {
"rollup-pluginutils": {
"integrity": "sha1-PnZyPjjf3aE8mx0poeB//uSzC1c=",
"safe-json-parse": {
"safer-buffer": {
"integrity": "sha1-E/vWPNHK8JCLn9k0dq1DpR0eC0k=",
"schema-utils": {
"scss-tokenizer": {
"dependencies": {
"source-map": {
"requires": {
"dependencies": {
"selenium-webdriver": {
"integrity": "sha1-ckGdSovn1s51FI/YsyTlk6cRwu0=",
"requires": {
"serve-static": {
"set-blocking": {
"serviceworker-cache-polyfill": {
"dependencies": {
"extend-shallow": {
"requires": {
"setprototypeof": {
"shebang-command": {
"setimmediate": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"shebang-regex": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
"integrity": "sha1-kEktcv/MgVmXa6umL7D2iE8MM3g="
"integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA="
"slice-stream": {
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"requires": {
"string_decoder": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"snapdragon-node": {
"dependencies": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"isobject": {
"requires": {
"snapdragon-util": {
"dependencies": {
"requires": {
"socket.io-client": {
"socket.io-adapter": {
"dependencies": {
"socket.io-parser": {
"requires": {
"dependencies": {
"requires": {
"source-map-resolve": {
"source-list-map": {
"integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
"source-map-support": {
"dependencies": {
"source-map": {
"source-map-url": {
"spdx-correct": {
"spdx-exceptions": {
"spdx-license-ids": {
"spdx-expression-parse": {
"split-string": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"dependencies": {
"define-property": {
"requires": {
"stdout-stream": {
"stream-browserify": {
"stream-combiner": {
"integrity": "sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=",
"streamroller": {
"dependencies": {
"string-template": {
"requires": {
"string-width": {
"string_decoder": {
"stringstream": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
"supports-color": {
"strip-indent": {
"symbol-observable": {
"integrity": "sha1-g0D8RwLDEi310iKI+IKD9RPT/dQ="
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"requires": {
"string_decoder": {
"timers-browserify": {
"dependencies": {
"tiny-lr-fork": {
"requires": {
"dependencies": {
"faye-websocket": {
"to-arraybuffer": {
"integrity": "sha1-wUxbO/FNdBf/v9mQwKdJXNnzN7w="
"integrity": "sha1-F+bBH3PdTz10zaek/zI46a2b+JA=",
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
"to-fast-properties": {
"to-regex-range": {
"to-object-path": {
"dependencies": {
"is-number": {
"requires": {
"tough-cookie": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=",
"trim-newlines": {
"true-case-path": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
"array-unique": {
"requires": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
"extend-shallow": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"define-property": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"extend-shallow": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"isobject": {
"requires": {
"dependencies": {
"source-map": {
"tslint-eslint-rules": {
"integrity": "sha1-fDDniC8mvCdr/5HSOEl1xp2viLo=",
"tty-browserify": {
"dependencies": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=",
"tunnel-agent": {
"integrity": "sha1-PFtv1/beCRQmkCfwPAlGdY92c6Q=",
"dependencies": {
"commander": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
"source-map": {
"integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",
"uglifyjs-webpack-plugin": {
"uglify-to-browserify": {
"dependencies": {
"requires": {
"camelcase": {
"uglify-js": {
"requires": {
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"set-value": {
"requires": {
"unique-stream": {
"universalify": {
"dependencies": {
"requires": {
"has-value": {
"dependencies": {
"isobject": {
"requires": {
"has-values": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"isobject": {
"dependencies": {
"requires": {
"integrity": "sha1-dhPHeKGv6mLyXGMKCG1/Osu92Bg=",
"graceful-fs": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"requires": {
"string_decoder": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"dependencies": {
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"punycode": {
"integrity": "sha1-z1k+9PLRdYdei7ZY6pLhik/QbY4=",
"dependencies": {
"lru-cache": {
"util-deprecate": {
"dependencies": {
"validate-npm-package-license": {
"integrity": "sha1-LiXP5t9cgIGPl/9Be/XCGkHkpJs=",
"dependencies": {
"graceful-fs": {
"strip-bom": {
"integrity": "sha1-dhPHeKGv6mLyXGMKCG1/Osu92Bg=",
"requires": {
"requires": {
"vm-browserify": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"void-elements": {
"dependencies": {
"anymatch": {
"requires": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"requires": {
"chokidar": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"dependencies": {
"glob-parent": {
"extend-shallow": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-glob": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"isobject": {
"requires": {
"webdriver-js-extender": {
"@types/selenium-webdriver": "^3.0.0",
"dependencies": {
"ansi-regex": {
"camelcase": {
"has-flag": {
"requires": {
"is-fullwidth-code-point": {
"requires": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"load-json-file": {
"os-locale": {
"requires": {
"path-type": {
"requires": {
"read-pkg": {
"requires": {
"requires": {
"read-pkg-up": {
"string-width": {
"requires": {
"strip-ansi": {
"requires": {
"strip-bom": {
"supports-color": {
"requires": {
"which-module": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
"integrity": "sha1-YpmpBVsc78lp/355wdkY3Osiw2A=",
"requires": {
"yargs-parser": {
"requires": {
"webpack-dev-middleware": {
"webpack-sources": {
"dependencies": {
"source-map": {
"websocket-driver": {
"dependencies": {
"websocket-extensions": {
"integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8=",
"which-module": {
"integrity": "sha1-QUT+JYbNwZphK/jANVkBMskGS9I=",
"integrity": "sha1-X6VeAr58qTTt/BJmVjLoSbcuUgk=",
"dependencies": {
"integrity": "sha1-cjnEKl72wwuPMoQ52bn/cQQkkPg="
"integrity": "sha1-bBcRpUB/uUoRQhlWPkQUW8v0cjo="
"xmlhttprequest-ssl": {
"dependencies": {
"camelcase": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
"yargs-parser": {
"integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",
"dependencies": {
"camelcase": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
"integrity": "sha1-/ltWW8NmuNc9XUwWBuB8iUfeFlQ=",
"dependencies": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"requires": {
"readable-stream": {
"string_decoder": {
"acorn-dynamic-import": {
"integrity": "sha1-X6rZwsB/YN12dw9xzwJbYqY8/U4="
"integrity": "sha1-/YJw9x+7SZawBPqIDuXUZXOnMb8=",
"acorn-globals": {
"dependencies": {
"dependencies": {
"dependencies": {
"integrity": "sha1-ReN/s56No/JbruP/U2niu18iAXo="
"ansi-escapes": {
"alphanum-sort": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"append-transform": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-Jsu1r/ZBRLCoJb4YRuCxbPoAsR4=",
"array-find-index": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-filter": {
"array-flatten": {
"array-includes": {
"ajv-keywords": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"array-reduce": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"inherits": {
"dependencies": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"requires": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"assign-symbols": {
"babel-code-frame": {
"autoprefixer": {
"axobject-query": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"babel-eslint": {
"babel-generator": {
"babel-helper-builder-react-jsx": {
"integrity": "sha1-Of+DE7dci2Xc7/HzHTg+D/KkCKA=",
"babel-helper-define-map": {
"babel-helper-call-delegate": {
"babel-helper-explode-assignable-expression": {
"integrity": "sha1-7Oaqzdx25Bw0YfiL/Fdb0Nqi340=",
"integrity": "sha1-HssnaJydJVE+rbyZFKc/VAi+enY=",
"babel-helper-hoist-variables": {
"babel-helper-get-function-arity": {
"integrity": "sha1-96E0J7qfc/j0+pk8VKl4gtEkQlc=",
"babel-helper-function-name": {
"ast-types-flow": {
"babel-helper-optimise-call-expression": {
"integrity": "sha1-XsWBgnrXI/7N04HxySg5BnbkVRs=",
"babel-helper-remap-async-to-generator": {
"integrity": "sha1-v22/5Dk40XNpohPKiov3S2qQqxo=",
"babel-helper-regex": {
"babel-helper-replace-supers": {
"integrity": "sha1-5KA7E9wQOJ4UD8ZF0J/8TO0wFnE=",
"babel-messages": {
"babel-loader": {
"babel-plugin-check-es2015-constants": {
"integrity": "sha1-NRV7EBQm/S/9PaP3XH0ekYNbv4o=",
"babel-plugin-dynamic-import-node": {
"babel-plugin-istanbul": {
"babel-plugin-jest-hoist": {
"babel-plugin-syntax-async-functions": {
"babel-helpers": {
"integrity": "sha1-r+3IU70/jcNUjqZx++adA8wsF2c="
"babel-plugin-syntax-dynamic-import": {
"babel-plugin-syntax-class-properties": {
"babel-plugin-syntax-jsx": {
"babel-plugin-syntax-exponentiation-operator": {
"babel-plugin-syntax-trailing-function-commas": {
"babel-plugin-syntax-object-rest-spread": {
"integrity": "sha1-CvMqmm4Tyno/1QaeYtew9Y0NiUY="
"babel-plugin-transform-async-to-generator": {
"integrity": "sha1-ugNgk3+NBuQBgKQ/4NVhb/9TLPM="
"integrity": "sha1-ZTbjeK/2yx1VF6wOQOs+n8jQh2E=",
"babel-plugin-transform-class-properties": {
"babel-plugin-transform-es2015-arrow-functions": {
"babel-plugin-transform-es2015-block-scoping": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-es2015-computed-properties": {
"babel-plugin-transform-es2015-classes": {
"integrity": "sha1-mXux8auWf2gtKwh2/jWNYOdlxW0=",
"babel-plugin-transform-es2015-duplicate-keys": {
"babel-plugin-transform-es2015-for-of": {
"babel-plugin-transform-es2015-destructuring": {
"integrity": "sha1-9HyVsrYT3x0+zC/bdXNiPHUkhpE=",
"integrity": "sha1-g0yJhTvDaxrw86TF26qU/Y6sqos=",
"babel-plugin-transform-es2015-literals": {
"babel-plugin-transform-es2015-modules-amd": {
"babel-plugin-transform-es2015-function-name": {
"babel-plugin-transform-es2015-modules-commonjs": {
"integrity": "sha1-/4mhQrkRmpBhlfXxBuzzBdlAfSM=",
"babel-plugin-transform-es2015-object-super": {
"babel-plugin-transform-es2015-modules-systemjs": {
"integrity": "sha1-JM72muIcuDp/hgPa0CH1cusnj40=",
"babel-plugin-transform-es2015-parameters": {
"babel-plugin-transform-es2015-modules-umd": {
"babel-plugin-transform-es2015-shorthand-properties": {
"babel-plugin-transform-es2015-spread": {
"integrity": "sha1-3sCfHN3/lLUqxz1QXITfWdzOs3I=",
"babel-plugin-transform-es2015-template-literals": {
"babel-plugin-transform-es2015-unicode-regex": {
"babel-plugin-transform-exponentiation-operator": {
"babel-plugin-transform-es2015-sticky-regex": {
"integrity": "sha1-KrDJx/MJj6SJB3cruBP+QejeOg4=",
"dependencies": {
"babel-plugin-transform-flow-strip-types": {
"babel-plugin-transform-react-constant-elements": {
"babel-plugin-syntax-flow": {
"babel-plugin-transform-es2015-typeof-symbol": {
"integrity": "sha1-Z+K/Hx6ck6sI25Z5LgU5K/LMKNE=",
"babel-plugin-transform-react-jsx": {
"integrity": "sha1-hAoCjn30YN/DotKfDA2R9jduZqM=",
"babel-plugin-transform-react-jsx-source": {
"babel-plugin-transform-react-display-name": {
"babel-plugin-transform-react-jsx-self": {
"babel-plugin-transform-object-rest-spread": {
"integrity": "sha1-4HA2lvveJ/Cj78rPi03KL3s6jy8=",
"babel-plugin-transform-regenerator": {
"babel-plugin-transform-runtime": {
"babel-plugin-transform-strict-mode": {
"babel-preset-flow": {
"integrity": "sha1-5xIYiHCFrpoktb5Baa/7WZgWxJ0=",
"babel-preset-jest": {
"babel-register": {
"babel-preset-react": {
"babel-preset-react-app": {
"babel-preset-env": {
"babel-template": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-traverse": {
"balanced-match": {
"babel-runtime": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"dependencies": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"bcrypt-pbkdf": {
"binary-extensions": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"ansi-styles": {
"dependencies": {
"requires": {
"camelcase": {
"requires": {
"supports-color": {
"iconv-lite": {
"dependencies": {
"brace-expansion": {
"dependencies": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"balanced-match": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browserify-aes": {
"dependencies": {
"browserify-cipher": {
"browser-resolve": {
"browserify-des": {
"browserify-sign": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-zlib": {
"browserslist": {
"browserify-rsa": {
"builtin-modules": {
"builtin-status-codes": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"buffer-indexof": {
"dependencies": {
"camelcase": {
"camelcase-keys": {
"integrity": "sha1-MIvur/3ygRkFHvodkyITyRuPkuc=",
"requires": {
"dependencies": {
"capture-stack-trace": {
"caniuse-lite": {
"case-sensitive-paths-webpack-plugin": {
"browserslist": {
"integrity": "sha1-PSnO2MHxJL9vU4Rvs/WJRzH9yQk="
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I="
"dependencies": {
"center-align": {
"expand-brackets": {
"anymatch": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"glob-parent": {
"dependencies": {
"is-accessor-descriptor": {
"is-glob": {
"requires": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"micromatch": {
"circular-json": {
"dependencies": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"dependencies": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"source-map": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"dependencies": {
"dependencies": {
"code-point-at": {
"collection-visit": {
"wordwrap": {
"color-convert": {
"combined-stream": {
"integrity": "sha1-J9RvtnAlxcL6JZk7+/V55HhBuZE=",
"color-string": {
"component-emitter": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"compare-versions": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"compressible": {
"console-browserify": {
"connect-history-api-fallback": {
"concat-stream": {
"constants-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"content-disposition": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"content-type": {
"content-type-parser": {
"integrity": "sha1-uCeAl7m8IpNl3lxiz1/K7YtVmeU="
"contains-path": {
"convert-source-map": {
"cookie-signature": {
"copy-descriptor": {
"minimist": {
"core-util-is": {
"dependencies": {
"create-error-class": {
"integrity": "sha1-Br56vvlHo/FKMP1hBnHUAbyot7Y=",
"crypto-browserify": {
"crypto-random-string": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"css-color-names": {
"has-flag": {
"dependencies": {
"supports-color": {
"css-selector-tokenizer": {
"integrity": "sha1-5piEdK6MlTR3v15+/s/OzNnPTIY=",
"requires": {
"dependencies": {
"regexpu-core": {
"requires": {
"requires": {
"integrity": "sha1-lGfQMsOM+u+58teVASUwYvh/ob0="
"dependencies": {
"browserslist": {
"requires": {
"autoprefixer": {
"has-flag": {
"requires": {
"supports-color": {
"integrity": "sha1-3dUsWHAz9J6Utx/FVWnyUuj/X4U=",
"requires": {
"currently-unhandled": {
"requires": {
"integrity": "sha1-VBCXI0yyUTyDzu06zdwn/yeYfVQ=",
"damerau-levenshtein": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"decode-uri-component": {
"default-require-extensions": {
"define-properties": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
"define-property": {
"detect-indent": {
"diffie-hellman": {
"detect-port-alt": {
"delayed-stream": {
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"integrity": "sha1-pF71cnuJDJv/5tfIduexnLDhfzs=",
"dom-serializer": {
"dom-converter": {
"dependencies": {
"domelementtype": {
"domelementtype": {
"domain-browser": {
"integrity": "sha1-sXrtguirWeUt2cGbF1bg/BhyBMI="
"dotenv-expand": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI="
"dependencies": {
"enhanced-resolve": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
"electron-to-chromium": {
"es6-iterator": {
"es-to-primitive": {
"integrity": "sha1-kTbgUD3MBqMBaQ8LsU/042TpSfA=",
"integrity": "sha1-XjqzIlH/0VOKH45f+hNXdy+S2W8=",
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"dependencies": {
"escape-string-regexp": {
"es6-weak-map": {
"ansi-regex": {
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"source-map": {
"dependencies": {
"requires": {
"ansi-styles": {
"requires": {
"requires": {
"strip-ansi": {
"requires": {
"requires": {
"supports-color": {
"eslint-config-react-app": {
"requires": {
"eslint-loader": {
"eslint-module-utils": {
"requires": {
"eslint-import-resolver-node": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"dependencies": {
"eslint-plugin-flowtype": {
"load-json-file": {
"eslint-plugin-import": {
"requires": {
"doctrine": {
"requires": {
"dependencies": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"path-type": {
"read-pkg": {
"requires": {
"read-pkg-up": {
"eslint-plugin-jsx-a11y": {
"eslint-plugin-react": {
"requires": {
"dependencies": {
"jsx-ast-utils": {
"requires": {
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"requires": {
"eslint-scope": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"event-emitter": {
"eventemitter3": {
"evp_bytestokey": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"expand-brackets": {
"expand-range": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"dependencies": {
"isobject": {
"fill-range": {
"requires": {
"is-number": {
"requires": {
"expand-tilde": {
"requires": {
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"array-flatten": {
"path-to-regexp": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"safe-buffer": {
"extend-shallow": {
"dependencies": {
"is-extendable": {
"requires": {
"dependencies": {
"external-editor": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"fast-deep-equal": {
"extract-text-webpack-plugin": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"fast-json-stable-stringify": {
"integrity": "sha1-0eJkOzipTXWDtHkGDmxK/8lAcfg="
"faye-websocket": {
"fast-levenshtein": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"dependencies": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="
"requires": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"filename-regex": {
"file-entry-cache": {
"filename-reserved-regex": {
"integrity": "sha1-qfL/0RxQO+0wABUCknI3jx8TZaU=",
"filenamify-url": {
"dependencies": {
"extend-shallow": {
"find-cache-dir": {
"follow-redirects": {
"dependencies": {
"finalhandler": {
"requires": {
"forever-agent": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"fragment-cache": {
"requires": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"dependencies": {
"requires": {
"are-we-there-yet": {
"brace-expansion": {
"ansi-regex": {
"balanced-match": {
"requires": {
"concat-map": {
"console-control-strings": {
"core-util-is": {
"code-point-at": {
"requires": {
"deep-extend": {
"delegates": {
"detect-libc": {
"requires": {
"fs-minipass": {
"requires": {
"fs.realpath": {
"has-unicode": {
"iconv-lite": {
"ignore-walk": {
"requires": {
"requires": {
"requires": {
"requires": {
"inherits": {
"is-fullwidth-code-point": {
"inflight": {
"minimatch": {
"requires": {
"requires": {
"minimist": {
"minipass": {
"requires": {
"requires": {
"requires": {
"minizlib": {
"node-pre-gyp": {
"requires": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"requires": {
"requires": {
"requires": {
"object-assign": {
"number-is-nan": {
"requires": {
"os-homedir": {
"path-is-absolute": {
"os-tmpdir": {
"process-nextick-args": {
"requires": {
"dependencies": {
"readable-stream": {
"minimist": {
"requires": {
"requires": {
"safer-buffer": {
"set-blocking": {
"safe-buffer": {
"requires": {
"signal-exit": {
"string-width": {
"string_decoder": {
"requires": {
"strip-ansi": {
"strip-json-comments": {
"requires": {
"requires": {
"util-deprecate": {
"requires": {
"wide-align": {
"function-bind": {
"requires": {
"integrity": "sha1-uWjGsKBDhDJJAui/Gl3zJXmkUP4="
"functional-red-black-tree": {
"get-caller-file": {
"dependencies": {
"commander": {
"fs-extra": {
"requires": {
"requires": {
"jsonfile": {
"global-modules": {
"global-prefix": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"requires": {
"handle-thing": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"integrity": "sha1-VGGI6b3DN/Zzdy+BZgRks4nc5SA=",
"integrity": "sha1-Ywo13+ApS8KB7a5v/F0yn8eYLcw=",
"source-map": {
"dependencies": {
"requires": {
"uglify-js": {
"dependencies": {
"requires": {
"source-map": {
"har-validator": {
"requires": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0="
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"homedir-polyfill": {
"dependencies": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"html-comment-regex": {
"hosted-git-info": {
"requires": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"html-encoding-sniffer": {
"dependencies": {
"html-minifier": {
"dependencies": {
"html-entities": {
"html-webpack-plugin": {
"integrity": "sha1-+G5jdNQyBabmxg6RlvF8Apm/s0g=",
"loader-utils": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"domutils": {
"readable-stream": {
"http-deceiver": {
"requires": {
"string_decoder": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"requires": {
"integrity": "sha1-O9bW/ebjFyyTNMOzO2wZPYD+ETc="
"http-proxy-middleware": {
"dependencies": {
"requires": {
"is-extglob": {
"https-browserify": {
"http-signature": {
"humanize-url": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"integrity": "sha1-9KuZ4NKIF0yk4eUEB8VfuuRk7/8=",
"icss-replace-symbols": {
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"http-parser-js": {
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"indent-string": {
"dependencies": {
"import-local": {
"requires": {
"ansi-regex": {
"ansi-styles": {
"supports-color": {
"strip-ansi": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"integrity": "sha1-rp+/k7mEh4eF1QqN4bNWlWBYz1w=",
"requires": {
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"requires": {
"dependencies": {
"integrity": "sha1-ftGxQQxqDg94z5XTuEQMY/eLhhQ="
"is-accessor-descriptor": {
"is-binary-path": {
"is-absolute-url": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-data-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-date-object": {
"dependencies": {
"dependencies": {
"is-descriptor": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"is-directory": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-extendable": {
"is-builtin-module": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-installed-globally": {
"is-fullwidth-code-point": {
"is-path-inside": {
"is-equal-shallow": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-path-in-cwd": {
"integrity": "sha1-Df2Y9akRFxbdU13aZJL2e/PSWoA=",
"is-posix-bracket": {
"is-plain-obj": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-plain-object": {
"integrity": "sha1-HQPd7VO9jbDzDCbk+V02/HyH3CQ="
"is-resolvable": {
"is-primitive": {
"is-retry-allowed": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"isomorphic-fetch": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"dependencies": {
"is-typedarray": {
"requires": {
"istanbul-api": {
"istanbul-lib-source-maps": {
"istanbul-lib-coverage": {
"istanbul-lib-instrument": {
"istanbul-lib-hook": {
"istanbul-lib-report": {
"requires": {
"dependencies": {
"supports-color": {
"has-flag": {
"requires": {
"istanbul-lib-source-maps": {
"dependencies": {
"istanbul-reports": {
"requires": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"dependencies": {
"ansi-escapes": {
"jest-cli": {
"callsites": {
"integrity": "sha1-k5TVzGXEOEBhSb7xv01Sto4D4/g="
"requires": {
"jest-changed-files": {
"integrity": "sha1-gfKI/Z5nXw+yPHXxwrGURf5YZhc=",
"jest-environment-jsdom": {
"jest-environment-node": {
"jest-haste-map": {
"integrity": "sha1-/MWxQReA2RHQQpAu8YWehS5g1eE=",
"jest-matcher-utils": {
"jest-matchers": {
"jest-docblock": {
"jest-message-util": {
"integrity": "sha1-ymnbHDLbWm9wf6XgQBq7VXAN/WA=",
"jest-jasmine2": {
"integrity": "sha1-auwoRDBvyw5udNV5bBAG2W/dgxw=",
"jest-regex-util": {
"jest-resolve": {
"integrity": "sha1-lEiz6La6/BVHlETGSZBFt//ll6U=",
"integrity": "sha1-osgCIZxCA/dU3xQE5JAYYWnRJNg=",
"jest-resolve-dependencies": {
"jest-runtime": {
"integrity": "sha1-DAf32A2C9OWmfG+LnD/n9lz9Mq0=",
"integrity": "sha1-0M/R3k9XnymEhJJcKA+PHZTsPKs=",
"jest-snapshot": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"integrity": "sha1-6MVG//ywbADUgzyoRBD+1/igl9Q=",
"dependencies": {
"jest-validate": {
"integrity": "sha1-XJZ93YN6m/3KXy3oQlOr6KHAO4A=",
"json-schema-traverse": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-stringify-safe": {
"json-stable-stringify": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"integrity": "sha1-OGchPo3Xm/Ho8jAMDPwe+xgsDfE="
"integrity": "sha1-2ouEvUfeU5WHj5XWTQLyRJ/gXms="
"dependencies": {
"load-json-file": {
"jsx-ast-utils": {
"latest-version": {
"strip-bom": {
"requires": {
"loader-fs-cache": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"dependencies": {
"find-cache-dir": {
"requires": {
"requires": {
"loader-runner": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"loader-utils": {
"dependencies": {
"lodash._reinterpolate": {
"path-exists": {
"lodash.debounce": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"requires": {
"lodash.camelcase": {
"integrity": "sha1-0JF4cW/+pN3p5ft7N/bwgCJ0WAw="
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.defaults": {
"lodash.templatesettings": {
"lodash.template": {
"lodash.memoize": {
"lowercase-keys": {
"dependencies": {
"loose-envify": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"math-expression-evaluator": {
"integrity": "sha1-6b296UogpawYsENA/Fdk1bCdkB0=",
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"loud-rejection": {
"integrity": "sha1-cstmi0JSKCkKu/qFaJJYcwioAfs=",
"minimist": {
"dependencies": {
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"dependencies": {
"merge-descriptors": {
"arr-diff": {
"requires": {
"array-unique": {
"miller-rabin": {
"requires": {
"minimalistic-assert": {
"minimalistic-crypto-utils": {
"integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="
"dependencies": {
"requires": {
"dependencies": {
"minimist": {
"is-extendable": {
"multicast-dns-service-types": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw="
"natural-compare": {
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"dependencies": {
"multicast-dns": {
"node-libs-browser": {
"node-notifier": {
"dependencies": {
"normalize-package-data": {
"normalize-range": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-path": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"punycode": {
"normalize-url": {
"num2fraction": {
"npm-run-path": {
"number-is-nan": {
"dependencies": {
"object-assign": {
"define-property": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"object-visit": {
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"dependencies": {
"wordwrap": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"os-browserify": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"parse-passwd": {
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"package-json": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"path-is-inside": {
"path-browserify": {
"path-is-absolute": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"path-to-regexp": {
"dependencies": {
"performance-now": {
"path-dirname": {
"pinkie-promise": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"posix-character-classes": {
"requires": {
"dependencies": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"ansi-styles": {
"postcss-calc": {
"requires": {
"dependencies": {
"has-flag": {
"supports-color": {
"requires": {
"postcss-colormin": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"has-flag": {
"postcss-convert-values": {
"dependencies": {
"supports-color": {
"requires": {
"has-flag": {
"dependencies": {
"postcss-discard-comments": {
"has-flag": {
"requires": {
"supports-color": {
"requires": {
"dependencies": {
"requires": {
"postcss-discard-duplicates": {
"supports-color": {
"requires": {
"has-flag": {
"postcss-discard-empty": {
"dependencies": {
"requires": {
"has-flag": {
"supports-color": {
"requires": {
"requires": {
"postcss-discard-overridden": {
"has-flag": {
"dependencies": {
"requires": {
"requires": {
"supports-color": {
"integrity": "sha1-vOMLLMWR/8Y0Mitfs0ZLbZNPRDM=",
"dependencies": {
"postcss-discard-unused": {
"has-flag": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-filter-plugins": {
"requires": {
"has-flag": {
"supports-color": {
"requires": {
"postcss-load-config": {
"requires": {
"postcss-flexbugs-fixes": {
"integrity": "sha1-U56a/J3chiASHr+djDZz4M5Q0oo=",
"postcss-merge-idents": {
"postcss-loader": {
"postcss-load-options": {
"integrity": "sha1-TFUwMTwI4dWzu/PSu8dH4njuonA=",
"postcss-load-plugins": {
"has-flag": {
"dependencies": {
"supports-color": {
"postcss-merge-longhand": {
"dependencies": {
"requires": {
"has-flag": {
"requires": {
"requires": {
"supports-color": {
"postcss-merge-rules": {
"requires": {
"dependencies": {
"requires": {
"browserslist": {
"has-flag": {
"supports-color": {
"requires": {
"postcss-message-helpers": {
"integrity": "sha1-pPL0+rbk/gAvCu0ABHjN9S+bpg4="
"dependencies": {
"postcss-minify-font-values": {
"requires": {
"has-flag": {
"integrity": "sha1-Xb2hE3NwP4PPtKPqOIHY11/15uE=",
"supports-color": {
"postcss-minify-gradients": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"supports-color": {
"has-flag": {
"postcss-minify-params": {
"integrity": "sha1-rSzgcTc7lDs9kwo/pZo1jCjW8fM=",
"dependencies": {
"requires": {
"requires": {
"postcss-minify-selectors": {
"supports-color": {
"dependencies": {
"has-flag": {
"has-flag": {
"requires": {
"requires": {
"supports-color": {
"postcss-modules-extract-imports": {
"postcss-modules-scope": {
"postcss-modules-local-by-default": {
"requires": {
"postcss-normalize-charset": {
"integrity": "sha1-757nEhLX/nWceO0WL2HtYrXLk/E=",
"dependencies": {
"postcss-modules-values": {
"has-flag": {
"supports-color": {
"postcss-normalize-url": {
"requires": {
"integrity": "sha1-EI90s/L82viRov+j6kWSJ5/HgiI=",
"requires": {
"dependencies": {
"requires": {
"has-flag": {
"requires": {
"supports-color": {
"postcss-ordered-values": {
"integrity": "sha1-7sbCpntsQSqNsgQud/6NpD+VwR0=",
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"has-flag": {
"postcss-reduce-idents": {
"requires": {
"dependencies": {
"has-flag": {
"supports-color": {
"postcss-reduce-initial": {
"dependencies": {
"has-flag": {
"requires": {
"supports-color": {
"postcss-reduce-transforms": {
"integrity": "sha1-/3b02CEkN7McKYpC0uFEQCV3GuE=",
"requires": {
"dependencies": {
"has-flag": {
"requires": {
"requires": {
"supports-color": {
"postcss-selector-parser": {
"integrity": "sha1-+UN3iGBsPJrO4W/+jYsWKX8nu5A=",
"postcss-svgo": {
"has-flag": {
"requires": {
"requires": {
"supports-color": {
"dependencies": {
"postcss-unique-selectors": {
"requires": {
"dependencies": {
"requires": {
"postcss-value-parser": {
"requires": {
"supports-color": {
"postcss-zindex": {
"integrity": "sha1-0hCd3AVbka9n/EyzsCWUZjnSryI=",
"integrity": "sha1-h/OPnxj3dKSrTIojL1xc6IcqnRU="
"requires": {
"supports-color": {
"dependencies": {
"requires": {
"has-flag": {
"has-flag": {
"prepend-http": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"pretty-bytes": {
"pretty-error": {
"dependencies": {
"integrity": "sha1-Ag41ClYKH+GpjcO+tsz/s4beixQ=",
"pretty-format": {
"requires": {
"ansi-styles": {
"process-nextick-args": {
"integrity": "sha1-5F1osAoXZHttpxG/he1u1HII9FA=",
"integrity": "sha1-ihvjZr+Pwj2yvSPxDG/pILQ4nR8="
"public-encrypt": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"querystring-es3": {
"dependencies": {
"querystringify": {
"range-parser": {
"is-number": {
"query-string": {
"integrity": "sha1-vNYMd9Prk83gBQKVw/N5OJvIj4k=",
"http-errors": {
"dependencies": {
"setprototypeof": {
"iconv-lite": {
"requires": {
"dependencies": {
"react-error-overlay": {
"react-scripts": {
"react-dev-utils": {
"minimist": {
"dependencies": {
"integrity": "sha1-rzL3izGm/O8RnIew/Y2XU/A6C7g=",
"requires": {
"babel-core": {
"integrity": "sha1-nITsLc9oGH/wC8ZOEnS0QhduHIQ="
"whatwg-fetch": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"dependencies": {
"requires": {
"readable-stream": {
"recursive-readdir": {
"dependencies": {
"requires": {
"reduce-css-calc": {
"regenerator-runtime": {
"minimatch": {
"reduce-function-call": {
"regenerator-transform": {
"registry-auth-token": {
"regexpu-core": {
"registry-url": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"remove-trailing-separator": {
"integrity": "sha1-iYyr/Ivt5Le5ETWj/9Mj5YwNsxk=",
"dependencies": {
"repeat-element": {
"dependencies": {
"repeat-string": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-uncached": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"require-directory": {
"require-main-filename": {
"requires-port": {
"require-from-string": {
"resolve-from": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"resolve-from": {
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"dependencies": {
"restore-cursor": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",
"rx-lite-aggregates": {
"safer-buffer": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"requires": {
"dependencies": {
"requires": {
"fb-watchman": {
"schema-utils": {
"minimist": {
"dependencies": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"serviceworker-cache-polyfill": {
"set-blocking": {
"set-immediate-shim": {
"dependencies": {
"extend-shallow": {
"requires": {
"serve-static": {
"setprototypeof": {
"shebang-command": {
"setimmediate": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"shebang-regex": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"snapdragon-node": {
"requires": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"dependencies": {
"snapdragon-util": {
"requires": {
"faye-websocket": {
"requires": {
"dependencies": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"source-list-map": {
"source-map-support": {
"sockjs-client": {
"source-map-resolve": {
"spdx-exceptions": {
"spdx-correct": {
"source-map-url": {
"spdx-expression-parse": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"spdy-transport": {
"spdx-license-ids": {
"split-string": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"dependencies": {
"define-property": {
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"requires": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"string-length": {
"stream-browserify": {
"strict-uri-encode": {
"string-width": {
"ansi-regex": {
"strip-ansi": {
"dependencies": {
"requires": {
"string_decoder": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"strip-json-comments": {
"strip-indent": {
"strip-url-auth": {
"integrity": "sha1-IrD6OkE4WzO+PzMVUbu4N/oM164="
"style-loader": {
"supports-color": {
"dependencies": {
"sw-precache-webpack-plugin": {
"ansi-styles": {
"requires": {
"requires": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"requires": {
"fast-deep-equal": {
"json-schema-traverse": {
"integrity": "sha1-RYuDiH8oj8Vtb/+/rSYuJmOO+mk=",
"requires": {
"supports-color": {
"dependencies": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"test-exclude": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"requires": {
"requires": {
"requires": {
"kind-of": {
"micromatch": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"timers-browserify": {
"integrity": "sha1-8y6srFoXW+ol1/q1Zas+2HQe9W8="
"to-arraybuffer": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"to-fast-properties": {
"tough-cookie": {
"to-object-path": {
"to-regex-range": {
"dependencies": {
"trim-repeated": {
"punycode": {
"trim-newlines": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"tunnel-agent": {
"tty-browserify": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q=",
"source-map": {
"ua-parser-js": {
"dependencies": {
"integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",
"uglify-to-browserify": {
"uglifyjs-webpack-plugin": {
"requires": {
"dependencies": {
"uglify-js": {
"extend-shallow": {
"requires": {
"dependencies": {
"set-value": {
"requires": {
"universalify": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"requires": {
"unique-string": {
"dependencies": {
"requires": {
"dependencies": {
"isobject": {
"has-value": {
"has-values": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"ansi-styles": {
"update-notifier": {
"dependencies": {
"unzip-response": {
"supports-color": {
"requires": {
"requires": {
"requires": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"dependencies": {
"punycode": {
"requires": {
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"url-parse-lax": {
"util-deprecate": {
"validate-npm-package-license": {
"vm-browserify": {
"webidl-conversions": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"dependencies": {
"integrity": "sha1-YXmX/F9gV2iUxDX5QNgZ4TW4B2I="
"requires": {
"camelcase": {
"ajv-keywords": {
"requires": {
"string-width": {
"is-fullwidth-code-point": {
"dependencies": {
"requires": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"has-flag": {
"load-json-file": {
"os-locale": {
"requires": {
"path-type": {
"read-pkg": {
"requires": {
"requires": {
"read-pkg-up": {
"requires": {
"requires": {
"which-module": {
"supports-color": {
"integrity": "sha1-YpmpBVsc78lp/355wdkY3Osiw2A=",
"requires": {
"requires": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"requires": {
"yargs-parser": {
"webpack-dev-middleware": {
"dependencies": {
"webpack-dev-server": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo="
"requires": {
"camelcase": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-fullwidth-code-point": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"pify": {
"string-width": {
"requires": {
"requires": {
"requires": {
"supports-color": {
"yargs-parser": {
"requires": {
"requires": {
"webpack-manifest-plugin": {
"dependencies": {
"integrity": "sha1-8jP/zAjU2n1DLapEl3aYnbHfk/A=",
"requires": {
"fs-extra": {
"requires": {
"webpack-sources": {
"jsonfile": {
"websocket-driver": {
"dependencies": {
"websocket-extensions": {
"whatwg-encoding": {
"iconv-lite": {
"source-map": {
"dependencies": {
"requires": {
"whatwg-fetch": {
"webidl-conversions": {
"dependencies": {
"integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8="
"dependencies": {
"is-fullwidth-code-point": {
"string-width": {
"which-module": {
"requires": {
"write-file-atomic": {
"integrity": "sha1-SWsswQnsqNus/i3HK2A8F8WHCtQ="
"xml-name-validator": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo="
"dependencies": {
"camelcase": {
"is-fullwidth-code-point": {
"string-width": {
"requires": {
"requires": {
"requires": {
"yargs-parser": {
"integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",
"requires": {
"camelcase": {
"integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo="
"dependencies": {
"@babel/highlight": "^7.0.0"
"@babel/generator": "^7.0.0",
"@babel/helpers": "^7.1.0",
"@babel/code-frame": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/code-frame": {
"@babel/helper-annotate-as-pure": {
"@babel/parser": "^7.1.0",
"@babel/generator": {
"@babel/types": "^7.1.6",
"@babel/helper-builder-react-jsx": {
"@babel/types": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0",
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-call-delegate": {
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-define-map": {
"@babel/types": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-function-name": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/helper-hoist-variables": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-module-transforms": {
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-module-imports": {
"@babel/types": "^7.0.0",
"@babel/helper-optimise-call-expression": {
"@babel/types": "^7.0.0"
"@babel/helper-plugin-utils": {
"@babel/helper-remap-async-to-generator": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-regex": {
"@babel/helper-wrap-function": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/traverse": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-simple-access": {
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/helper-function-name": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helpers": {
"@babel/traverse": "^7.1.5",
"@babel/types": "^7.1.5"
"@babel/template": "^7.1.2",
"@babel/parser": {
"@babel/plugin-proposal-async-generator-functions": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/highlight": {
"@babel/plugin-proposal-class-properties": {
"@babel/plugin-syntax-async-generators": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-syntax-decorators": "^7.1.0"
"@babel/plugin-proposal-json-strings": {
"@babel/plugin-proposal-decorators": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-object-rest-spread": {
"@babel/plugin-syntax-json-strings": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-object-rest-spread": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-syntax-async-generators": {
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/plugin-syntax-json-strings": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-jsx": {
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoped-functions": {
"@babel/plugin-transform-block-scoping": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-classes": {
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-computed-properties": {
"@babel/plugin-transform-destructuring": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/plugin-transform-flow-strip-types": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-function-name": {
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-transform-modules-amd": {
"@babel/plugin-transform-literals": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-simple-access": "^7.1.0"
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/plugin-transform-modules-umd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-new-target": {
"@babel/plugin-transform-object-super": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-replace-supers": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-parameters": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-react-constant-elements": {
"@babel/plugin-transform-react-display-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-jsx": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-builder-react-jsx": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-react-jsx-self": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-source": {
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-runtime": {
"@babel/plugin-transform-regenerator": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/plugin-transform-template-literals": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-regex": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-typescript": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/preset-env": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-proposal-json-strings": "^7.0.0",
"@babel/plugin-syntax-async-generators": "^7.0.0",
"@babel/plugin-transform-block-scoping": "^7.1.5",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-destructuring": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-dotall-regex": "^7.0.0",
"@babel/plugin-transform-function-name": "^7.1.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-modules-amd": "^7.1.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-modules-umd": "^7.1.0",
"@babel/plugin-transform-object-super": "^7.1.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-sticky-regex": "^7.0.0",
"@babel/plugin-transform-typeof-symbol": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.0.0",
"@babel/preset-react": {
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/plugin-transform-typescript": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/runtime": {
"@babel/preset-typescript": {
"@babel/template": {
"dependencies": {
"regenerator-runtime": {
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.1.2",
"@babel/code-frame": "^7.0.0",
"@babel/traverse": {
"@babel/types": "^7.1.2"
"@babel/generator": "^7.1.6",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/types": "^7.1.6",
"@babel/parser": "^7.1.6",
"@csstools/convert-colors": {
"requires": {
"dependencies": {
"@mrmlnc/readdir-enhanced": {
"@babel/types": {
"@nodelib/fs.stat": {
"@babel/core": "^7.0.1",
"@babel/preset-env": "^7.0.0",
"@babel/preset-react": "^7.0.0",
"@svgr/webpack": {
"@webassemblyjs/ast": {
"@svgr/core": "^2.4.1",
"@webassemblyjs/helper-module-context": "1.7.6",
"@types/tapable": {
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6"
"@xtuc/long": "4.2.1"
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/leb128": {
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/utf8": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-parser": {
"@webassemblyjs/helper-fsm": "1.7.6",
"@webassemblyjs/helper-code-frame": "1.7.6",
"@webassemblyjs/wast-printer": {
"@xtuc/long": "4.2.1",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-parser": "1.7.6",
"@xtuc/ieee754": {
"@xtuc/long": "4.2.1"
"acorn-dynamic-import": {
"acorn-globals": {
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk="
"ajv-keywords": {
"alphanum-sort": {
"ansi-escapes": {
"dependencies": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"arr-diff": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"extend-shallow": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"kind-of": {
"requires": {
"requires": {
"requires": {
"extend-shallow": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-number": {
"requires": {
"is-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"append-transform": {
"requires": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-filter": {
"array-flatten": {
"array-includes": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-reduce": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"inherits": {
"array-unique": {
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"requires": {
"ast-types-flow": {
"astral-regex": {
"async-limiter": {
"dependencies": {
"autoprefixer": {
"requires": {
"source-map": {
"axobject-query": {
"babel-code-frame": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"dependencies": {
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"js-tokens": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"@babel/code-frame": "^7.0.0",
"supports-color": {
"@babel/parser": "^7.0.0",
"@babel/traverse": "^7.0.0",
"@babel/types": "^7.0.0",
"babel-extract-comments": {
"dependencies": {
"babel-generator": {
"babel-eslint": {
"babel-helpers": {
"babel-messages": {
"babel-loader": {
"babel-plugin-dynamic-import-node": {
"babel-plugin-jest-hoist": {
"babel-plugin-istanbul": {
"babel-plugin-syntax-object-rest-spread": {
"babel-plugin-macros": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-named-asset-import": {
"babel-plugin-transform-react-remove-prop-types": {
"babel-preset-jest": {
"babel-preset-react-app": {
"@babel/plugin-proposal-class-properties": "7.1.0",
"@babel/plugin-proposal-decorators": "7.1.2",
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/core": "7.1.0",
"@babel/plugin-transform-destructuring": "7.0.0",
"@babel/plugin-transform-runtime": "7.1.0",
"@babel/plugin-transform-classes": "7.1.0",
"@babel/preset-react": "7.0.0",
"@babel/preset-typescript": "7.1.0",
"@babel/preset-env": "7.1.0",
"@babel/plugin-transform-destructuring": {
"@babel/runtime": "7.0.0",
"requires": {
"dependencies": {
"@babel/preset-env": {
"requires": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"babel-register": {
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"dependencies": {
"requires": {
"babel-core": {
"babel-runtime": {
"babel-template": {
"requires": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"babel-traverse": {
"dependencies": {
"requires": {
"dependencies": {
"to-fast-properties": {
"balanced-match": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"bcrypt-pbkdf": {
"binary-extensions": {
"requires": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"requires": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"iconv-lite": {
"dependencies": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"requires": {
"browser-process-hrtime": {
"brace-expansion": {
"browserify-aes": {
"browser-resolve": {
"dependencies": {
"browserify-rsa": {
"browserify-cipher": {
"browserify-des": {
"browserify-sign": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserslist": {
"browserify-zlib": {
"builtin-modules": {
"builtin-status-codes": {
"buffer-indexof": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"dependencies": {
"call-me-maybe": {
"caller-callsite": {
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"capture-exit": {
"dependencies": {
"case-sensitive-paths-webpack-plugin": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"caniuse-lite": {
"extend-shallow": {
"requires": {
"array-unique": {
"requires": {
"fill-range": {
"glob-parent": {
"requires": {
"dependencies": {
"is-glob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-extglob": {
"requires": {
"is-number": {
"requires": {
"chrome-trace-event": {
"dependencies": {
"circular-json": {
"define-property": {
"requires": {
"dependencies": {
"source-map": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"ansi-regex": {
"dependencies": {
"collection-visit": {
"strip-ansi": {
"color-convert": {
"requires": {
"code-point-at": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"color-string": {
"combined-stream": {
"component-emitter": {
"dependencies": {
"compressible": {
"confusing-browser-globals": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"concat-stream": {
"console-browserify": {
"requires": {
"constants-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"connect-history-api-fallback": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"content-disposition": {
"contains-path": {
"convert-source-map": {
"cookie-signature": {
"copy-concurrently": {
"copy-descriptor": {
"content-type": {
"core-util-is": {
"crypto-browserify": {
"css-declaration-sorter": {
"dependencies": {
"css-color-names": {
"requires": {
"source-map": {
"css-select-base-adapter": {
"dependencies": {
"css-selector-tokenizer": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"regexpu-core": {
"requires": {
"regjsparser": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"regjsgen": {
"css-unit-converter": {
"requires": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"css-url-regex": {
"requires": {
"source-map": {
"cssnano-preset-default": {
"dependencies": {
"dependencies": {
"source-map": {
"cssnano-util-get-arguments": {
"cssnano-util-get-match": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"dependencies": {
"cssnano-util-raw-cache": {
"requires": {
"source-map": {
"requires": {
"dependencies": {
"cssnano-util-same-parent": {
"requires": {
"damerau-levenshtein": {
"css-tree": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"dependencies": {
"decode-uri-component": {
"default-gateway": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"dependencies": {
"default-require-extensions": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"define-property": {
"define-properties": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"pify": {
"delayed-stream": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"detect-newline": {
"detect-indent": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"dependencies": {
"detect-port-alt": {
"dependencies": {
"path-type": {
"diffie-hellman": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"requires": {
"dom-serializer": {
"dependencies": {
"dom-converter": {
"domexception": {
"domelementtype": {
"domain-browser": {
"dotenv-expand": {
"domelementtype": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"end-of-stream": {
"enhanced-resolve": {
"electron-to-chromium": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"es-to-primitive": {
"escape-string-regexp": {
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"source-map": {
"dependencies": {
"@babel/code-frame": "^7.0.0",
"dependencies": {
"eslint-scope": {
"ansi-regex": {
"strip-ansi": {
"requires": {
"eslint-config-react-app": {
"eslint-import-resolver-node": {
"dependencies": {
"requires": {
"requires": {
"eslint-loader": {
"dependencies": {
"eslint-module-utils": {
"requires": {
"path-exists": {
"requires": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"requires": {
"eslint-plugin-import": {
"eslint-plugin-flowtype": {
"doctrine": {
"dependencies": {
"requires": {
"load-json-file": {
"requires": {
"parse-json": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"requires": {
"path-type": {
"requires": {
"requires": {
"read-pkg-up": {
"requires": {
"requires": {
"strip-bom": {
"eslint-plugin-jsx-a11y": {
"read-pkg": {
"eslint-plugin-react": {
"eslint-utils": {
"eslint-scope": {
"eslint-visitor-keys": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"eventemitter3": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"evp_bytestokey": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"dependencies": {
"requires": {
"cross-spawn": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"expand-tilde": {
"expand-brackets": {
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"dependencies": {
"array-flatten": {
"requires": {
"expand-range": {
"extend-shallow": {
"is-extendable": {
"external-editor": {
"dependencies": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"requires": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"@mrmlnc/readdir-enhanced": "^2.2.1",
"dependencies": {
"@nodelib/fs.stat": "^1.1.2",
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"fast-deep-equal": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"is-descriptor": {
"kind-of": {
"requires": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"glob-parent": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-glob": {
"requires": {
"is-descriptor": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"micromatch": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"fast-json-stable-stringify": {
"kind-of": {
"fast-levenshtein": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"faye-websocket": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"figgy-pudding": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"filename-regex": {
"file-entry-cache": {
"isobject": {
"dependencies": {
"requires": {
"dependencies": {
"finalhandler": {
"find-cache-dir": {
"requires": {
"dependencies": {
"follow-redirects": {
"flush-write-stream": {
"requires": {
"fork-ts-checker-webpack-plugin-alt": {
"forever-agent": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"array-unique": {
"extend-shallow": {
"requires": {
"dependencies": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"define-property": {
"fill-range": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"requires": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"fs-write-stream-atomic": {
"fragment-cache": {
"ansi-regex": {
"dependencies": {
"are-we-there-yet": {
"requires": {
"balanced-match": {
"brace-expansion": {
"requires": {
"code-point-at": {
"console-control-strings": {
"core-util-is": {
"requires": {
"concat-map": {
"deep-extend": {
"delegates": {
"fs-minipass": {
"requires": {
"detect-libc": {
"requires": {
"fs.realpath": {
"has-unicode": {
"requires": {
"iconv-lite": {
"ignore-walk": {
"requires": {
"requires": {
"requires": {
"is-fullwidth-code-point": {
"inherits": {
"requires": {
"minimatch": {
"requires": {
"inflight": {
"minimist": {
"minipass": {
"requires": {
"requires": {
"requires": {
"minizlib": {
"node-pre-gyp": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"requires": {
"requires": {
"requires": {
"object-assign": {
"requires": {
"number-is-nan": {
"requires": {
"os-tmpdir": {
"os-homedir": {
"path-is-absolute": {
"requires": {
"process-nextick-args": {
"dependencies": {
"readable-stream": {
"requires": {
"requires": {
"minimist": {
"set-blocking": {
"safe-buffer": {
"signal-exit": {
"safer-buffer": {
"string-width": {
"requires": {
"string_decoder": {
"requires": {
"strip-ansi": {
"requires": {
"requires": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"function-bind": {
"requires": {
"wide-align": {
"functional-red-black-tree": {
"get-own-enumerable-property-symbols": {
"glob-to-regexp": {
"get-caller-file": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"global-modules": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"global-prefix": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-generate": {
"h2x-traverse": {
"dependencies": {
"h2x-plugin-jsx": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"handle-thing": {
"dependencies": {
"har-validator": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"source-map": {
"harmony-reflect": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"is-number": {
"dependencies": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"requires": {
"hex-color-regex": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"homedir-polyfill": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"html-comment-regex": {
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"html-entities": {
"hosted-git-info": {
"dependencies": {
"html-minifier": {
"html-encoding-sniffer": {
"html-webpack-plugin": {
"commander": {
"domutils": {
"dependencies": {
"requires": {
"@types/tapable": "1.0.2",
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"requires": {
"readable-stream": {
"http-deceiver": {
"string_decoder": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-proxy-middleware": {
"http-parser-js": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"extend-shallow": {
"expand-brackets": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"fill-range": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"micromatch": {
"http-signature": {
"requires": {
"https-browserify": {
"icss-replace-symbols": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"identity-obj-proxy": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"dependencies": {
"import-fresh": {
"ansi-regex": {
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"strip-ansi": {
"import-local": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"requires": {
"is-absolute-url": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"is-binary-path": {
"is-accessor-descriptor": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-builtin-module": {
"is-color-stop": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-data-descriptor": {
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-directory": {
"is-date-object": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"dependencies": {
"is-equal-shallow": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"is-extendable": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-generator-fn": {
"is-fullwidth-code-point": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-path-in-cwd": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-path-inside": {
"is-posix-bracket": {
"is-plain-object": {
"is-primitive": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-resolvable": {
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"is-typedarray": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"istanbul-api": {
"istanbul-lib-hook": {
"istanbul-lib-coverage": {
"istanbul-lib-instrument": {
"dependencies": {
"istanbul-lib-report": {
"supports-color": {
"has-flag": {
"istanbul-lib-source-maps": {
"requires": {
"dependencies": {
"istanbul-reports": {
"jest-cli": {
"ansi-regex": {
"requires": {
"strip-ansi": {
"requires": {
"jest-changed-files": {
"dependencies": {
"babel-core": {
"requires": {
"jest-docblock": {
"requires": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"requires": {
"jest-environment-jsdom": {
"whatwg-url": {
"dependencies": {
"jest-environment-node": {
"requires": {
"requires": {
"jest-get-type": {
"jest-haste-map": {
"jest-leak-detector": {
"jest-message-util": {
"jest-jasmine2": {
"jest-matcher-utils": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-pnp-resolver": {
"jest-resolve": {
"jest-regex-util": {
"jest-resolve-dependencies": {
"source-map": {
"dependencies": {
"source-map-support": {
"dependencies": {
"jest-runtime": {
"requires": {
"babel-core": {
"requires": {
"strip-bom": {
"jest-serializer": {
"requires": {
"dependencies": {
"jest-snapshot": {
"jest-validate": {
"jest-watcher": {
"source-map": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"json-parse-better-errors": {
"js-levenshtein": {
"json-schema-traverse": {
"json-stable-stringify": {
"json-stable-stringify-without-jsonify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-stringify-safe": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"last-call-webpack-plugin": {
"jsx-ast-utils": {
"load-json-file": {
"parse-json": {
"dependencies": {
"requires": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"find-cache-dir": {
"loader-fs-cache": {
"dependencies": {
"requires": {
"path-exists": {
"requires": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"loader-runner": {
"loader-utils": {
"requires": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"lodash.camelcase": {
"lodash._reinterpolate": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"lodash.debounce": {
"lodash.sortby": {
"lodash.memoize": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.templatesettings": {
"lodash.template": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"loose-envify": {
"map-age-cleaner": {
"dependencies": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"merge-descriptors": {
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-stream": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"miller-rabin": {
"minimalistic-assert": {
"mini-css-extract-plugin": {
"minimalistic-crypto-utils": {
"dependencies": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"requires": {
"is-extendable": {
"dependencies": {
"move-concurrently": {
"mixin-object": {
"multicast-dns": {
"multicast-dns-service-types": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"natural-compare": {
"node-libs-browser": {
"dependencies": {
"node-notifier": {
"punycode": {
"node-releases": {
"normalize-package-data": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-path": {
"normalize-range": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"npm-run-path": {
"normalize-url": {
"num2fraction": {
"object-assign": {
"dependencies": {
"number-is-nan": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"object-visit": {
"define-property": {
"object.assign": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"requires": {
"object.getownpropertydescriptors": {
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"object.values": {
"integrity": "sha1-5STaCbT2b/Bd9FdUbscqyZ8TBpo=",
"dependencies": {
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"optimize-css-assets-webpack-plugin": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"wordwrap": {
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"os-browserify": {
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"p-is-promise": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"parallel-transform": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"parse-passwd": {
"path-browserify": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-is-absolute": {
"path-is-inside": {
"path-dirname": {
"path-to-regexp": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"performance-now": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"pinkie-promise": {
"posix-character-classes": {
"pnp-webpack-plugin": {
"dependencies": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"dependencies": {
"postcss-attribute-case-insensitive": {
"requires": {
"source-map": {
"dependencies": {
"source-map": {
"postcss-calc": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"postcss-color-functional-notation": {
"requires": {
"dependencies": {
"postcss-color-hex-alpha": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-color-mod-function": {
"requires": {
"dependencies": {
"source-map": {
"@csstools/convert-colors": "^1.4.0",
"requires": {
"postcss-color-rebeccapurple": {
"dependencies": {
"postcss-colormin": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-convert-values": {
"requires": {
"source-map": {
"postcss-custom-media": {
"source-map": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-custom-properties": {
"requires": {
"source-map": {
"postcss-custom-selectors": {
"requires": {
"dependencies": {
"postcss-dir-pseudo-class": {
"dependencies": {
"requires": {
"source-map": {
"postcss-discard-comments": {
"dependencies": {
"requires": {
"source-map": {
"postcss-discard-duplicates": {
"dependencies": {
"source-map": {
"requires": {
"source-map": {
"postcss-discard-empty": {
"dependencies": {
"source-map": {
"requires": {
"dependencies": {
"postcss-discard-overridden": {
"source-map": {
"postcss-env-function": {
"dependencies": {
"requires": {
"source-map": {
"postcss-flexbugs-fixes": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"postcss-focus-visible": {
"requires": {
"dependencies": {
"dependencies": {
"postcss-focus-within": {
"requires": {
"source-map": {
"dependencies": {
"source-map": {
"postcss-font-variant": {
"requires": {
"source-map": {
"postcss-gap-properties": {
"dependencies": {
"source-map": {
"requires": {
"postcss-image-set-function": {
"source-map": {
"dependencies": {
"dependencies": {
"requires": {
"source-map": {
"postcss-initial": {
"dependencies": {
"requires": {
"postcss-lab-function": {
"@csstools/convert-colors": "^1.4.0",
"source-map": {
"dependencies": {
"postcss-load-config": {
"cosmiconfig": {
"requires": {
"postcss-loader": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"postcss-logical": {
"requires": {
"dependencies": {
"postcss-media-minmax": {
"dependencies": {
"source-map": {
"requires": {
"requires": {
"source-map": {
"dependencies": {
"postcss-merge-longhand": {
"source-map": {
"postcss-merge-rules": {
"postcss-selector-parser": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"postcss-minify-font-values": {
"source-map": {
"dependencies": {
"requires": {
"dependencies": {
"postcss-minify-gradients": {
"source-map": {
"postcss-minify-params": {
"requires": {
"dependencies": {
"postcss-minify-selectors": {
"source-map": {
"dependencies": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"requires": {
"postcss-modules-extract-imports": {
"postcss-modules-values": {
"postcss-modules-local-by-default": {
"postcss-nesting": {
"postcss-modules-scope": {
"dependencies": {
"source-map": {
"postcss-normalize-charset": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-display-values": {
"source-map": {
"dependencies": {
"postcss-normalize-positions": {
"dependencies": {
"requires": {
"requires": {
"postcss-normalize-repeat-style": {
"dependencies": {
"requires": {
"source-map": {
"source-map": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-string": {
"postcss-normalize-timing-functions": {
"dependencies": {
"source-map": {
"postcss-normalize-unicode": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-url": {
"requires": {
"postcss-normalize-whitespace": {
"source-map": {
"dependencies": {
"source-map": {
"requires": {
"postcss-ordered-values": {
"requires": {
"dependencies": {
"postcss-overflow-shorthand": {
"source-map": {
"dependencies": {
"requires": {
"postcss-page-break": {
"dependencies": {
"requires": {
"source-map": {
"postcss-place": {
"source-map": {
"dependencies": {
"requires": {
"postcss-preset-env": {
"requires": {
"source-map": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-pseudo-class-any-link": {
"requires": {
"source-map": {
"dependencies": {
"postcss-reduce-initial": {
"source-map": {
"postcss-reduce-transforms": {
"requires": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-replace-overflow-wrap": {
"source-map": {
"dependencies": {
"postcss-safe-parser": {
"requires": {
"source-map": {
"postcss-selector-matches": {
"dependencies": {
"source-map": {
"postcss-selector-not": {
"requires": {
"dependencies": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-svgo": {
"postcss-unique-selectors": {
"dependencies": {
"source-map": {
"postcss-value-parser": {
"postcss-values-parser": {
"requires": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"pretty-bytes": {
"pretty-error": {
"pretty-format": {
"dependencies": {
"ansi-regex": {
"process-nextick-args": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"public-encrypt": {
"promise-inflight": {
"requires": {
"querystring-es3": {
"querystringify": {
"dependencies": {
"dependencies": {
"is-number": {
"range-parser": {
"dependencies": {
"requires": {
"react-app-polyfill": {
"react-dev-utils": {
"@babel/code-frame": "7.0.0",
"iconv-lite": {
"dependencies": {
"requires": {
"ansi-regex": {
"browserslist": {
"requires": {
"locate-path": {
"p-locate": {
"requires": {
"requires": {
"strip-ansi": {
"requires": {
"requires": {
"react-error-overlay": {
"@svgr/webpack": "2.4.1",
"react-scripts": {
"@babel/core": "7.1.0",
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"dependencies": {
"dependencies": {
"requires": {
"path-exists": {
"requires": {
"requires": {
"readable-stream": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"is-number": {
"requires": {
"requires": {
"micromatch": {
"kind-of": {
"realpath-native": {
"recursive-readdir": {
"regenerate-unicode-properties": {
"regexpu-core": {
"regenerator-runtime": {
"regenerator-transform": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"dependencies": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"remove-trailing-separator": {
"dependencies": {
"requires": {
"css-select": {
"repeat-string": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"requires": {
"repeat-element": {
"dependencies": {
"domutils": {
"tough-cookie": {
"requires": {
"request-promise-native": {
"request-promise-core": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"punycode": {
"require-directory": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"require-from-string": {
"require-main-filename": {
"require-uncached": {
"dependencies": {
"requires": {
"caller-path": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"resolve-from": {
"callsites": {
"requires-port": {
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"resolve-from": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"restore-cursor": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"safer-buffer": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"dependencies": {
"requires": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"extend-shallow": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"requires": {
"micromatch": {
"minimist": {
"dependencies": {
"clone-deep": {
"requires": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"requires": {
"requires": {
"shallow-clone": {
"dependencies": {
"kind-of": {
"schema-utils": {
"serialize-javascript": {
"dependencies": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"requires": {
"dependencies": {
"requires": {
"serve-static": {
"dependencies": {
"extend-shallow": {
"set-blocking": {
"setimmediate": {
"setprototypeof": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"requires": {
"dependencies": {
"requires": {
"shallow-clone": {
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"lazy-cache": {
"shebang-command": {
"shebang-regex": {
"simple-swizzle": {
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"dependencies": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"dependencies": {
"is-arrayish": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"snapdragon-node": {
"requires": {
"dependencies": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"dependencies": {
"snapdragon-util": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"requires": {
"faye-websocket": {
"dependencies": {
"sockjs-client": {
"requires": {
"source-map-resolve": {
"source-map-url": {
"source-list-map": {
"source-map-support": {
"spdx-exceptions": {
"spdx-expression-parse": {
"spdx-correct": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"dependencies": {
"spdx-license-ids": {
"dependencies": {
"spdy-transport": {
"requires": {
"split-string": {
"static-extend": {
"requires": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"define-property": {
"stealthy-require": {
"requires": {
"dependencies": {
"stream-browserify": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"string-length": {
"stream-shift": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"dependencies": {
"requires": {
"strip-ansi": {
"string-width": {
"ansi-regex": {
"dependencies": {
"ansi-regex": {
"strip-ansi": {
"string_decoder": {
"stringify-object": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"requires": {
"strip-comments": {
"strip-json-comments": {
"dependencies": {
"requires": {
"style-loader": {
"schema-utils": {
"postcss-selector-parser": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"dependencies": {
"commander": {
"terser-webpack-plugin": {
"requires": {
"source-map": {
"source-map-support": {
"requires": {
"dependencies": {
"find-cache-dir": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"requires": {
"p-locate": {
"source-map": {
"test-exclude": {
"requires": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"timers-browserify": {
"to-arraybuffer": {
"to-fast-properties": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"to-regex-range": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"to-object-path": {
"is-number": {
"dependencies": {
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"requires": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"tough-cookie": {
"tty-browserify": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"dependencies": {
"tunnel-agent": {
"source-map": {
"commander": {
"uglifyjs-webpack-plugin": {
"requires": {
"dependencies": {
"mississippi": {
"requires": {
"commander": {
"schema-utils": {
"requires": {
"requires": {
"source-map": {
"uglify-es": {
"requires": {
"unicode-canonical-property-names-ecmascript": {
"unicode-match-property-ecmascript": {
"unicode-match-property-value-ecmascript": {
"unicode-property-aliases-ecmascript": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"set-value": {
"requires": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"unique-filename": {
"dependencies": {
"universalify": {
"requires": {
"has-value": {
"dependencies": {
"has-values": {
"requires": {
"isobject": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"dependencies": {
"util.promisify": {
"punycode": {
"util-deprecate": {
"validate-npm-package-license": {
"vm-browserify": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"dependencies": {
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"w3c-xmlserializer": {
"@webassemblyjs/helper-module-context": "1.7.6",
"minimist": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-edit": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"arr-diff": {
"webidl-conversions": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"dependencies": {
"requires": {
"eslint-scope": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"micromatch": {
"schema-utils": {
"webpack-dev-middleware": {
"webpack-dev-server": {
"requires": {
"dependencies": {
"decamelize": {
"camelcase": {
"requires": {
"requires": {
"import-local": {
"requires": {
"requires": {
"invert-kv": {
"locate-path": {
"requires": {
"requires": {
"requires": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"yargs-parser": {
"webpack-manifest-plugin": {
"webpack-sources": {
"dependencies": {
"requires": {
"source-map": {
"websocket-extensions": {
"websocket-driver": {
"whatwg-fetch": {
"whatwg-mimetype": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"whatwg-encoding": {
"which-module": {
"workbox-background-sync": {
"workbox-build": {
"workbox-broadcast-cache-update": {
"fs-extra": {
"dependencies": {
"workbox-cache-expiration": {
"workbox-cacheable-response": {
"requires": {
"workbox-core": {
"workbox-google-analytics": {
"workbox-range-requests": {
"workbox-navigation-preload": {
"workbox-routing": {
"workbox-precaching": {
"workbox-streams": {
"workbox-strategies": {
"workbox-webpack-plugin": {
"is-fullwidth-code-point": {
"requires": {
"dependencies": {
"write-file-atomic": {
"requires": {
"string-width": {
"xml-name-validator": {
"yargs-parser": {
"dependencies": {
"camelcase": {
"@babel/code-frame": {
"@babel/highlight": "^7.0.0"
"@babel/code-frame": "^7.0.0",
"@babel/generator": "^7.0.0",
"@babel/helpers": "^7.1.0",
"@babel/parser": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/generator": {
"@babel/helper-annotate-as-pure": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.1.6",
"@babel/types": "^7.0.0"
"@babel/helper-builder-react-jsx": {
"@babel/helper-call-delegate": {
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-define-map": {
"@babel/types": "^7.0.0",
"@babel/helper-explode-assignable-expression": {
"@babel/traverse": "^7.1.0",
"@babel/helper-function-name": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/helper-hoist-variables": {
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-module-transforms": {
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/helper-optimise-call-expression": {
"@babel/types": "^7.0.0"
"@babel/helper-plugin-utils": {
"@babel/helper-regex": {
"@babel/helper-remap-async-to-generator": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-wrap-function": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/template": "^7.1.0",
"@babel/helper-simple-access": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.2",
"@babel/helpers": {
"@babel/traverse": "^7.1.5",
"@babel/types": "^7.1.5"
"@babel/highlight": {
"@babel/plugin-proposal-async-generator-functions": {
"@babel/parser": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/plugin-syntax-async-generators": "^7.0.0"
"@babel/plugin-proposal-class-properties": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-decorators": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-syntax-decorators": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-json-strings": {
"@babel/plugin-syntax-json-strings": "^7.0.0"
"@babel/plugin-proposal-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-object-rest-spread": "^7.0.0"
"dependencies": {
"@babel/core": {}
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/plugin-syntax-async-generators": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-syntax-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/plugin-syntax-typescript": {
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/plugin-transform-block-scoped-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-block-scoping": {
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-classes": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"dependencies": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/core": {}
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-destructuring": {
"@babel/plugin-transform-computed-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/plugin-transform-flow-strip-types": {
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-function-name": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-amd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-simple-access": "^7.1.0"
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/plugin-transform-modules-umd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-object-super": {
"@babel/plugin-transform-new-target": {
"@babel/plugin-transform-parameters": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0"
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-constant-elements": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-display-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"dependencies": {
"@babel/core": {}
"@babel/plugin-transform-react-jsx": {
"@babel/helper-builder-react-jsx": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-react-jsx-source": {
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-regenerator": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-shorthand-properties": {
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/helper-regex": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-typeof-symbol": {
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-typescript": "^7.0.0"
"@babel/plugin-transform-unicode-regex": {
"@babel/helper-regex": "^7.0.0",
"@babel/preset-env": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-json-strings": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoping": "^7.1.5",
"@babel/plugin-syntax-async-generators": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-duplicate-keys": "^7.0.0",
"@babel/plugin-transform-dotall-regex": "^7.0.0",
"@babel/plugin-transform-destructuring": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-function-name": "^7.1.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-modules-amd": "^7.1.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-modules-umd": "^7.1.0",
"@babel/plugin-transform-object-super": "^7.1.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-typeof-symbol": "^7.0.0",
"@babel/plugin-transform-sticky-regex": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/preset-react": {
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/preset-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-typescript": "^7.1.0"
"dependencies": {
"@babel/runtime": {
"regenerator-runtime": {
"@babel/template": {
"@babel/parser": "^7.1.2",
"@babel/code-frame": "^7.0.0",
"@babel/traverse": {
"@babel/types": "^7.1.2"
"@babel/code-frame": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/generator": "^7.1.6",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/parser": "^7.1.6",
"@babel/types": "^7.1.6",
"dependencies": {
"requires": {
"@babel/types": {
"@csstools/convert-colors": {
"@mrmlnc/readdir-enhanced": {
"@nodelib/fs.stat": {
"@svgr/webpack": {
"@babel/core": "^7.0.1",
"@babel/preset-react": "^7.0.0",
"@babel/preset-env": "^7.0.0",
"@svgr/core": "^2.4.1",
"@types/tapable": {
"@webassemblyjs/ast": {
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6"
"@webassemblyjs/ieee754": {
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/leb128": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/utf8": {
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/wast-parser": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-code-frame": "1.7.6",
"@webassemblyjs/helper-fsm": "1.7.6",
"@xtuc/long": "4.2.1",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-printer": {
"@webassemblyjs/wast-parser": "1.7.6",
"acorn-dynamic-import": {
"@xtuc/long": "4.2.1"
"@xtuc/ieee754": {
"dependencies": {
"acorn-globals": {
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk="
"ajv-keywords": {
"alphanum-sort": {
"ansi-escapes": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"requires": {
"define-property": {
"extend-shallow": {
"dependencies": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"micromatch": {
"requires": {
"requires": {
"append-transform": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-flatten": {
"array-includes": {
"array-reduce": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"array-unique": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"inherits": {
"assign-symbols": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"requires": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"ast-types-flow": {
"async-limiter": {
"astral-regex": {
"autoprefixer": {
"dependencies": {
"source-map": {
"requires": {
"axobject-query": {
"babel-code-frame": {
"dependencies": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"js-tokens": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"@babel/code-frame": "^7.0.0",
"supports-color": {
"babel-eslint": {
"@babel/parser": "^7.0.0",
"babel-extract-comments": {
"@babel/traverse": "^7.0.0",
"babel-generator": {
"@babel/types": "^7.0.0",
"dependencies": {
"dependencies": {
"babel-messages": {
"babel-helpers": {
"babel-plugin-istanbul": {
"@babel/core": {}
"babel-plugin-dynamic-import-node": {
"babel-plugin-jest-hoist": {
"babel-plugin-macros": {
"babel-plugin-syntax-object-rest-spread": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-named-asset-import": {
"babel-plugin-transform-react-remove-prop-types": {
"babel-plugin-transform-object-rest-spread": {
"babel-preset-jest": {
"@babel/core": "7.1.0",
"babel-preset-react-app": {
"@babel/plugin-proposal-class-properties": "7.1.0",
"@babel/plugin-proposal-decorators": "7.1.2",
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/plugin-transform-classes": "7.1.0",
"@babel/plugin-transform-destructuring": "7.0.0",
"@babel/plugin-transform-runtime": "7.1.0",
"@babel/preset-env": "7.1.0",
"@babel/preset-react": "7.0.0",
"@babel/preset-typescript": "7.1.0",
"dependencies": {
"@babel/runtime": "7.0.0",
"@babel/core": {
"requires": {
"@babel/code-frame": "^7.0.0",
"@babel/generator": "^7.0.0",
"@babel/parser": "^7.1.0",
"@babel/helpers": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/plugin-syntax-object-rest-spread": {
"@babel/types": "^7.0.0",
"dependencies": {
"@babel/core": {}
"requires": {
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"requires": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-runtime": {
"@babel/helper-module-imports": "^7.0.0",
"requires": {
"@babel/helper-plugin-utils": "^7.0.0",
"requires": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/preset-env": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"dependencies": {
"@babel/core": {},
"@babel/plugin-syntax-object-rest-spread": {
"requires": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/preset-react": {
"requires": {
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"babel-loader": {
"requires": {
"dependencies": {
"babel-register": {
"babel-core": {
"requires": {
"requires": {
"babel-runtime": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-template": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"dependencies": {
"requires": {
"babel-traverse": {
"dependencies": {
"to-fast-properties": {
"dependencies": {
"balanced-match": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"bcrypt-pbkdf": {
"binary-extensions": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"dependencies": {
"iconv-lite": {
"requires": {
"requires": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"brace-expansion": {
"browser-process-hrtime": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browser-resolve": {
"browserify-aes": {
"dependencies": {
"browserify-des": {
"browserify-cipher": {
"browserify-rsa": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-sign": {
"browserify-zlib": {
"browserslist": {
"builtin-modules": {
"buffer-indexof": {
"builtin-status-codes": {
"dependencies": {
"call-me-maybe": {
"caller-callsite": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"caniuse-lite": {
"capture-exit": {
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"case-sensitive-paths-webpack-plugin": {
"dependencies": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"fill-range": {
"glob-parent": {
"is-glob": {
"requires": {
"dependencies": {
"requires": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"is-number": {
"requires": {
"chrome-trace-event": {
"circular-json": {
"dependencies": {
"define-property": {
"requires": {
"dependencies": {
"source-map": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"dependencies": {
"strip-ansi": {
"requires": {
"ansi-regex": {
"collection-visit": {
"code-point-at": {
"color-string": {
"color-convert": {
"combined-stream": {
"component-emitter": {
"compressible": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"dependencies": {
"requires": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"concat-stream": {
"connect-history-api-fallback": {
"confusing-browser-globals": {
"console-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"constants-browserify": {
"contains-path": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"content-disposition": {
"content-type": {
"convert-source-map": {
"copy-concurrently": {
"cookie-signature": {
"copy-descriptor": {
"crypto-browserify": {
"core-util-is": {
"css-color-names": {
"dependencies": {
"css-declaration-sorter": {
"requires": {
"source-map": {
"css-select-base-adapter": {
"css-selector-tokenizer": {
"dependencies": {
"regexpu-core": {
"requires": {
"regjsgen": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"requires": {
"regjsparser": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"css-unit-converter": {
"dependencies": {
"css-url-regex": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"requires": {
"source-map": {
"cssnano-preset-default": {
"dependencies": {
"requires": {
"source-map": {
"cssnano-util-get-arguments": {
"cssnano-util-get-match": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"requires": {
"cssnano-util-raw-cache": {
"source-map": {
"dependencies": {
"cssnano-util-same-parent": {
"css-tree": {
"dependencies": {
"damerau-levenshtein": {
"requires": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"decode-uri-component": {
"dependencies": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"default-gateway": {
"dependencies": {
"requires": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"define-property": {
"define-properties": {
"default-require-extensions": {
"is-accessor-descriptor": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"dependencies": {
"dependencies": {
"requires": {
"pify": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"delayed-stream": {
"detect-indent": {
"detect-newline": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"detect-port-alt": {
"dependencies": {
"diffie-hellman": {
"requires": {
"dependencies": {
"path-type": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"dom-serializer": {
"dependencies": {
"dom-converter": {
"domelementtype": {
"domain-browser": {
"domelementtype": {
"dotenv-expand": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"domexception": {
"electron-to-chromium": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"es-to-primitive": {
"enhanced-resolve": {
"escape-string-regexp": {
"end-of-stream": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"source-map": {
"dependencies": {
"@babel/code-frame": "^7.0.0",
"dependencies": {
"ansi-regex": {
"eslint-scope": {
"requires": {
"strip-ansi": {
"requires": {
"eslint-config-react-app": {
"eslint-import-resolver-node": {
"dependencies": {
"eslint-loader": {
"requires": {
"eslint-module-utils": {
"dependencies": {
"requires": {
"requires": {
"path-exists": {
"requires": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"eslint-plugin-flowtype": {
"dependencies": {
"requires": {
"eslint-plugin-import": {
"doctrine": {
"requires": {
"load-json-file": {
"requires": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"parse-json": {
"requires": {
"path-type": {
"requires": {
"read-pkg": {
"requires": {
"requires": {
"read-pkg-up": {
"strip-bom": {
"eslint-plugin-jsx-a11y": {
"eslint-plugin-react": {
"eslint-scope": {
"eslint-utils": {
"eslint-visitor-keys": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"eventemitter3": {
"evp_bytestokey": {
"dependencies": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"cross-spawn": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"requires": {
"expand-brackets": {
"expand-range": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"expand-tilde": {
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"array-flatten": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-extendable": {
"dependencies": {
"requires": {
"external-editor": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"fast-deep-equal": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"@mrmlnc/readdir-enhanced": "^2.2.1",
"@nodelib/fs.stat": "^1.1.2",
"dependencies": {
"arr-diff": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"expand-brackets": {
"dependencies": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"kind-of": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"kind-of": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"define-property": {
"dependencies": {
"requires": {
"fill-range": {
"requires": {
"requires": {
"extend-shallow": {
"extend-shallow": {
"glob-parent": {
"requires": {
"dependencies": {
"requires": {
"dependencies": {
"is-glob": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"fast-json-stable-stringify": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"faye-websocket": {
"fast-levenshtein": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"figgy-pudding": {
"filename-regex": {
"file-entry-cache": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"dependencies": {
"finalhandler": {
"isobject": {
"dependencies": {
"requires": {
"find-cache-dir": {
"requires": {
"dependencies": {
"flush-write-stream": {
"dependencies": {
"requires": {
"follow-redirects": {
"forever-agent": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"fork-ts-checker-webpack-plugin-alt": {
"dependencies": {
"array-unique": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"is-data-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"is-number": {
"requires": {
"dependencies": {
"requires": {
"micromatch": {
"kind-of": {
"requires": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"requires": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"fragment-cache": {
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"fs-write-stream-atomic": {
"dependencies": {
"ansi-regex": {
"requires": {
"are-we-there-yet": {
"brace-expansion": {
"balanced-match": {
"requires": {
"code-point-at": {
"console-control-strings": {
"core-util-is": {
"requires": {
"concat-map": {
"deep-extend": {
"delegates": {
"detect-libc": {
"fs-minipass": {
"fs.realpath": {
"requires": {
"requires": {
"requires": {
"iconv-lite": {
"has-unicode": {
"requires": {
"requires": {
"ignore-walk": {
"inflight": {
"requires": {
"inherits": {
"is-fullwidth-code-point": {
"minimatch": {
"requires": {
"requires": {
"requires": {
"minipass": {
"minimist": {
"minizlib": {
"requires": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"npm-bundled": {
"requires": {
"npm-packlist": {
"requires": {
"requires": {
"object-assign": {
"number-is-nan": {
"os-homedir": {
"requires": {
"os-tmpdir": {
"path-is-absolute": {
"requires": {
"process-nextick-args": {
"dependencies": {
"requires": {
"readable-stream": {
"minimist": {
"requires": {
"requires": {
"safe-buffer": {
"set-blocking": {
"safer-buffer": {
"string-width": {
"requires": {
"signal-exit": {
"string_decoder": {
"requires": {
"strip-ansi": {
"requires": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"wide-align": {
"requires": {
"function-bind": {
"get-own-enumerable-property-symbols": {
"get-caller-file": {
"functional-red-black-tree": {
"glob-to-regexp": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"global-prefix": {
"global-modules": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"h2x-generate": {
"dependencies": {
"requires": {
"h2x-plugin-jsx": {
"h2x-traverse": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"handle-thing": {
"dependencies": {
"har-validator": {
"harmony-reflect": {
"source-map": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"dependencies": {
"is-number": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"hex-color-regex": {
"homedir-polyfill": {
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"hosted-git-info": {
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"html-encoding-sniffer": {
"html-comment-regex": {
"html-entities": {
"html-minifier": {
"dependencies": {
"commander": {
"html-webpack-plugin": {
"@types/tapable": "1.0.2",
"dependencies": {
"domutils": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"requires": {
"string_decoder": {
"http-deceiver": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-parser-js": {
"http-proxy-middleware": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"expand-brackets": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"extend-shallow": {
"define-property": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"extend-shallow": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"is-number": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"http-signature": {
"https-browserify": {
"icss-replace-symbols": {
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"identity-obj-proxy": {
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"import-fresh": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"import-local": {
"dependencies": {
"ansi-regex": {
"requires": {
"strip-ansi": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"is-absolute-url": {
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"is-accessor-descriptor": {
"is-binary-path": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-builtin-module": {
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-color-stop": {
"is-data-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-date-object": {
"is-descriptor": {
"dependencies": {
"is-directory": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-equal-shallow": {
"is-extendable": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"is-fullwidth-code-point": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-path-in-cwd": {
"is-generator-fn": {
"is-path-inside": {
"is-plain-object": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-posix-bracket": {
"is-primitive": {
"is-typedarray": {
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"is-resolvable": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"istanbul-lib-coverage": {
"istanbul-api": {
"istanbul-lib-hook": {
"istanbul-lib-instrument": {
"dependencies": {
"istanbul-lib-report": {
"requires": {
"has-flag": {
"istanbul-lib-source-maps": {
"supports-color": {
"istanbul-reports": {
"dependencies": {
"jest-cli": {
"ansi-regex": {
"strip-ansi": {
"jest-changed-files": {
"requires": {
"requires": {
"babel-core": {
"dependencies": {
"requires": {
"requires": {
"jest-docblock": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"dependencies": {
"jest-environment-jsdom": {
"requires": {
"whatwg-url": {
"requires": {
"jest-environment-node": {
"requires": {
"jest-get-type": {
"jest-haste-map": {
"jest-jasmine2": {
"jest-matcher-utils": {
"jest-message-util": {
"jest-leak-detector": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-pnp-resolver": {
"jest-regex-util": {
"jest-resolve": {
"jest-resolve-dependencies": {
"dependencies": {
"source-map-support": {
"requires": {
"source-map": {
"jest-runtime": {
"dependencies": {
"babel-core": {
"requires": {
"requires": {
"jest-serializer": {
"strip-bom": {
"dependencies": {
"jest-snapshot": {
"jest-watcher": {
"source-map": {
"jest-validate": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"json-parse-better-errors": {
"js-levenshtein": {
"json-schema-traverse": {
"json-stable-stringify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-stable-stringify-without-jsonify": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"jsx-ast-utils": {
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"json-stringify-safe": {
"last-call-webpack-plugin": {
"dependencies": {
"parse-json": {
"load-json-file": {
"requires": {
"loader-fs-cache": {
"dependencies": {
"find-cache-dir": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"requires": {
"requires": {
"path-exists": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"requires": {
"loader-runner": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"lodash._reinterpolate": {
"loader-utils": {
"lodash.debounce": {
"lodash.camelcase": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"lodash.memoize": {
"lodash.sortby": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.template": {
"lodash.templatesettings": {
"dependencies": {
"loose-envify": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"map-age-cleaner": {
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"merge-descriptors": {
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-stream": {
"mini-css-extract-plugin": {
"miller-rabin": {
"minimalistic-crypto-utils": {
"minimalistic-assert": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"is-extendable": {
"requires": {
"dependencies": {
"mixin-object": {
"dependencies": {
"move-concurrently": {
"multicast-dns": {
"multicast-dns-service-types": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"node-libs-browser": {
"natural-compare": {
"dependencies": {
"punycode": {
"node-releases": {
"node-notifier": {
"normalize-range": {
"normalize-path": {
"normalize-package-data": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"normalize-url": {
"num2fraction": {
"npm-run-path": {
"number-is-nan": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"define-property": {
"requires": {
"dependencies": {
"object-visit": {
"object.assign": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"object.values": {
"object.getownpropertydescriptors": {
"integrity": "sha1-5STaCbT2b/Bd9FdUbscqyZ8TBpo=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"dependencies": {
"optimize-css-assets-webpack-plugin": {
"wordwrap": {
"os-browserify": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"cross-spawn": {}
"dependencies": {
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"parallel-transform": {
"p-is-promise": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"parse-passwd": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"path-browserify": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-is-absolute": {
"path-dirname": {
"path-to-regexp": {
"path-is-inside": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"performance-now": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"pnp-webpack-plugin": {
"pinkie-promise": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"dependencies": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"posix-character-classes": {
"requires": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-attribute-case-insensitive": {
"source-map": {
"dependencies": {
"requires": {
"postcss-calc": {
"requires": {
"postcss-color-functional-notation": {
"dependencies": {
"source-map": {
"requires": {
"source-map": {
"postcss-color-hex-alpha": {
"requires": {
"dependencies": {
"postcss-color-mod-function": {
"@csstools/convert-colors": "^1.4.0",
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-color-rebeccapurple": {
"requires": {
"source-map": {
"postcss-colormin": {
"dependencies": {
"requires": {
"source-map": {
"postcss-convert-values": {
"dependencies": {
"requires": {
"source-map": {
"postcss-custom-media": {
"requires": {
"dependencies": {
"postcss-custom-properties": {
"source-map": {
"dependencies": {
"requires": {
"postcss-custom-selectors": {
"dependencies": {
"source-map": {
"requires": {
"postcss-dir-pseudo-class": {
"source-map": {
"dependencies": {
"requires": {
"postcss-discard-comments": {
"dependencies": {
"source-map": {
"requires": {
"source-map": {
"postcss-discard-duplicates": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-discard-empty": {
"requires": {
"source-map": {
"postcss-discard-overridden": {
"dependencies": {
"requires": {
"dependencies": {
"source-map": {
"postcss-env-function": {
"dependencies": {
"requires": {
"postcss-flexbugs-fixes": {
"source-map": {
"requires": {
"dependencies": {
"postcss-focus-visible": {
"source-map": {
"requires": {
"source-map": {
"dependencies": {
"postcss-focus-within": {
"source-map": {
"requires": {
"dependencies": {
"postcss-font-variant": {
"requires": {
"source-map": {
"postcss-gap-properties": {
"dependencies": {
"requires": {
"source-map": {
"postcss-image-set-function": {
"requires": {
"dependencies": {
"source-map": {
"postcss-initial": {
"source-map": {
"requires": {
"dependencies": {
"postcss-lab-function": {
"dependencies": {
"@csstools/convert-colors": "^1.4.0",
"requires": {
"source-map": {
"postcss-load-config": {
"cosmiconfig": {
"dependencies": {
"requires": {
"postcss-loader": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-logical": {
"source-map": {
"requires": {
"postcss-media-minmax": {
"requires": {
"source-map": {
"dependencies": {
"dependencies": {
"requires": {
"postcss-merge-longhand": {
"source-map": {
"postcss-merge-rules": {
"dependencies": {
"requires": {
"requires": {
"postcss-selector-parser": {
"source-map": {
"postcss-minify-font-values": {
"dependencies": {
"source-map": {
"requires": {
"postcss-minify-gradients": {
"requires": {
"dependencies": {
"source-map": {
"postcss-minify-params": {
"dependencies": {
"requires": {
"postcss-minify-selectors": {
"source-map": {
"dependencies": {
"requires": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"postcss-modules-extract-imports": {
"postcss-modules-local-by-default": {
"postcss-nesting": {
"postcss-modules-values": {
"postcss-modules-scope": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-charset": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-display-values": {
"dependencies": {
"requires": {
"dependencies": {
"postcss-normalize-positions": {
"source-map": {
"source-map": {
"requires": {
"postcss-normalize-repeat-style": {
"requires": {
"dependencies": {
"source-map": {
"postcss-normalize-string": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-timing-functions": {
"requires": {
"source-map": {
"postcss-normalize-unicode": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-url": {
"dependencies": {
"source-map": {
"postcss-normalize-whitespace": {
"requires": {
"dependencies": {
"requires": {
"postcss-ordered-values": {
"source-map": {
"dependencies": {
"requires": {
"dependencies": {
"postcss-overflow-shorthand": {
"source-map": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"postcss-page-break": {
"source-map": {
"postcss-place": {
"requires": {
"dependencies": {
"source-map": {
"postcss-preset-env": {
"dependencies": {
"requires": {
"source-map": {
"postcss-pseudo-class-any-link": {
"dependencies": {
"source-map": {
"requires": {
"postcss-reduce-initial": {
"requires": {
"dependencies": {
"postcss-reduce-transforms": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-replace-overflow-wrap": {
"dependencies": {
"requires": {
"source-map": {
"postcss-safe-parser": {
"dependencies": {
"requires": {
"source-map": {
"postcss-selector-matches": {
"requires": {
"dependencies": {
"postcss-selector-not": {
"dependencies": {
"source-map": {
"source-map": {
"requires": {
"postcss-svgo": {
"postcss-selector-parser": {
"dependencies": {
"dependencies": {
"requires": {
"source-map": {
"postcss-unique-selectors": {
"dependencies": {
"requires": {
"source-map": {
"postcss-values-parser": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"postcss-value-parser": {
"pretty-bytes": {
"pretty-error": {
"dependencies": {
"pretty-format": {
"process-nextick-args": {
"ansi-regex": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"promise-inflight": {
"dependencies": {
"public-encrypt": {
"requires": {
"querystring-es3": {
"querystringify": {
"dependencies": {
"iconv-lite": {
"is-number": {
"dependencies": {
"requires": {
"range-parser": {
"dependencies": {
"@babel/code-frame": "7.0.0",
"react-app-polyfill": {
"browserslist": {
"react-dev-utils": {
"requires": {
"requires": {
"ansi-regex": {
"locate-path": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"strip-ansi": {
"requires": {
"react-error-overlay": {
"react-scripts": {
"@svgr/webpack": "2.4.1",
"@babel/core": "7.1.0",
"@babel/core": {
"dependencies": {
"requires": {
"@babel/generator": "^7.0.0",
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.1.0",
"@babel/helpers": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0",
"requires": {
"babel-loader": {
"requires": {
"dependencies": {
"requires": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"requires": {
"path-exists": {
"readable-stream": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"define-property": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"extend-shallow": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"define-property": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"micromatch": {
"realpath-native": {
"requires": {
"requires": {
"recursive-readdir": {
"regenerator-runtime": {
"regenerate-unicode-properties": {
"regenerator-transform": {
"regexpu-core": {
"dependencies": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"remove-trailing-separator": {
"dependencies": {
"css-select": {
"domutils": {
"requires": {
"repeat-element": {
"requires": {
"dependencies": {
"repeat-string": {
"punycode": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"tough-cookie": {
"requires": {
"request-promise-core": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"request-promise-native": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-directory": {
"require-from-string": {
"require-main-filename": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"require-uncached": {
"caller-path": {
"dependencies": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"requires": {
"callsites": {
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"resolve-from": {
"requires-port": {
"resolve-from": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"restore-cursor": {
"safer-buffer": {
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"arr-diff": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"extend-shallow": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-number": {
"is-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"micromatch": {
"requires": {
"requires": {
"minimist": {
"dependencies": {
"clone-deep": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"requires": {
"shallow-clone": {
"requires": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"kind-of": {
"dependencies": {
"requires": {
"schema-utils": {
"dependencies": {
"serialize-javascript": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"dependencies": {
"requires": {
"serve-static": {
"set-blocking": {
"dependencies": {
"extend-shallow": {
"setimmediate": {
"requires": {
"setprototypeof": {
"shallow-clone": {
"dependencies": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"requires": {
"shebang-command": {
"lazy-cache": {
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"shebang-regex": {
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"simple-swizzle": {
"dependencies": {
"dependencies": {
"is-arrayish": {
"requires": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"snapdragon-node": {
"dependencies": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"snapdragon-util": {
"requires": {
"dependencies": {
"faye-websocket": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"requires": {
"sockjs-client": {
"dependencies": {
"requires": {
"source-list-map": {
"source-map-support": {
"source-map-resolve": {
"source-map-url": {
"spdx-correct": {
"spdx-exceptions": {
"spdx-expression-parse": {
"spdx-license-ids": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"requires": {
"dependencies": {
"spdy-transport": {
"dependencies": {
"requires": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"static-extend": {
"dependencies": {
"split-string": {
"requires": {
"define-property": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"stealthy-require": {
"stream-browserify": {
"stream-shift": {
"string-length": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"dependencies": {
"strip-ansi": {
"ansi-regex": {
"requires": {
"string-width": {
"dependencies": {
"ansi-regex": {
"strip-ansi": {
"stringify-object": {
"requires": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"string_decoder": {
"strip-json-comments": {
"strip-comments": {
"style-loader": {
"requires": {
"dependencies": {
"dependencies": {
"schema-utils": {
"requires": {
"requires": {
"postcss-selector-parser": {
"supports-color": {
"source-map": {
"dependencies": {
"source-map": {
"commander": {
"source-map-support": {
"requires": {
"dependencies": {
"find-cache-dir": {
"requires": {
"terser-webpack-plugin": {
"requires": {
"locate-path": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"source-map": {
"requires": {
"test-exclude": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"timers-browserify": {
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"to-arraybuffer": {
"to-fast-properties": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"to-object-path": {
"to-regex-range": {
"dependencies": {
"is-number": {
"tough-cookie": {
"requires": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"tty-browserify": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"tunnel-agent": {
"source-map": {
"dependencies": {
"uglifyjs-webpack-plugin": {
"commander": {
"dependencies": {
"commander": {
"mississippi": {
"requires": {
"requires": {
"requires": {
"schema-utils": {
"source-map": {
"requires": {
"requires": {
"requires": {
"unicode-canonical-property-names-ecmascript": {
"unicode-match-property-ecmascript": {
"unicode-match-property-value-ecmascript": {
"uglify-es": {
"extend-shallow": {
"unicode-property-aliases-ecmascript": {
"dependencies": {
"requires": {
"set-value": {
"requires": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"unique-filename": {
"dependencies": {
"has-value": {
"requires": {
"universalify": {
"isobject": {
"has-values": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"dependencies": {
"requires": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"dependencies": {
"punycode": {
"util-deprecate": {
"validate-npm-package-license": {
"util.promisify": {
"vm-browserify": {
"w3c-xmlserializer": {
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"dependencies": {
"minimist": {
"webidl-conversions": {
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-edit": "1.7.6",
"arr-diff": {
"dependencies": {
"@webassemblyjs/wasm-parser": "1.7.6",
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"extend-shallow": {
"dependencies": {
"requires": {
"eslint-scope": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"requires": {
"schema-utils": {
"webpack-dev-middleware": {
"webpack-dev-server": {
"dependencies": {
"decamelize": {
"requires": {
"camelcase": {
"import-local": {
"requires": {
"requires": {
"requires": {
"invert-kv": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"requires": {
"yargs-parser": {
"requires": {
"webpack-sources": {
"webpack-manifest-plugin": {
"dependencies": {
"source-map": {
"whatwg-encoding": {
"websocket-extensions": {
"websocket-driver": {
"whatwg-fetch": {
"which-module": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"whatwg-mimetype": {
"workbox-background-sync": {
"workbox-broadcast-cache-update": {
"dependencies": {
"workbox-build": {
"fs-extra": {
"workbox-cache-expiration": {
"requires": {
"workbox-cacheable-response": {
"workbox-core": {
"workbox-google-analytics": {
"workbox-navigation-preload": {
"workbox-range-requests": {
"workbox-precaching": {
"workbox-strategies": {
"workbox-routing": {
"workbox-streams": {
"workbox-webpack-plugin": {
"is-fullwidth-code-point": {
"dependencies": {
"string-width": {
"write-file-atomic": {
"requires": {
"requires": {
"xml-name-validator": {
"yargs-parser": {
"camelcase": {
"dependencies": {
"@babel/code-frame": "^7.0.0",
"@babel/code-frame": {
"@babel/highlight": "^7.0.0"
"@babel/generator": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helpers": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/parser": "^7.1.0",
"@babel/generator": {
"@babel/helper-annotate-as-pure": {
"@babel/types": "^7.2.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-builder-react-jsx": {
"@babel/types": "^7.0.0",
"@babel/helper-call-delegate": {
"@babel/types": "^7.0.0"
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-define-map": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-function-name": {
"@babel/template": "^7.1.0",
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/helper-hoist-variables": {
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/types": "^7.0.0"
"@babel/helper-module-transforms": {
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/helper-optimise-call-expression": {
"@babel/types": "^7.0.0"
"@babel/helper-plugin-utils": {
"@babel/helper-regex": {
"@babel/helper-remap-async-to-generator": {
"@babel/helper-wrap-function": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/types": "^7.0.0"
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-simple-access": {
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/helper-function-name": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/template": "^7.1.2",
"@babel/template": "^7.1.0",
"@babel/types": "^7.2.0"
"@babel/traverse": "^7.1.5",
"@babel/helpers": {
"@babel/types": "^7.2.0"
"@babel/highlight": {
"@babel/plugin-proposal-async-generator-functions": {
"@babel/parser": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/plugin-syntax-async-generators": "^7.2.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/plugin-proposal-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/plugin-proposal-decorators": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-syntax-decorators": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-json-strings": {
"@babel/plugin-syntax-json-strings": "^7.2.0"
"@babel/plugin-syntax-object-rest-spread": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-object-rest-spread": {
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-syntax-async-generators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/plugin-transform-block-scoped-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-block-scoping": {
"@babel/plugin-transform-classes": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-computed-properties": {
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": {
"@babel/plugin-transform-flow-strip-types": {
"@babel/plugin-transform-exponentiation-operator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-function-name": {
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-transform-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-amd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-simple-access": "^7.1.0"
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-umd": {
"@babel/plugin-transform-object-super": {
"@babel/plugin-transform-new-target": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-replace-supers": "^7.1.0"
"@babel/plugin-transform-parameters": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/plugin-transform-react-constant-elements": {
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-display-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-jsx": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-builder-react-jsx": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-react-jsx-self": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-regenerator": {
"@babel/plugin-transform-react-jsx-source": {
"@babel/plugin-transform-runtime": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-regex": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-typescript": {
"@babel/plugin-syntax-typescript": "^7.2.0"
"@babel/plugin-transform-unicode-regex": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/preset-env": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoping": "^7.2.0",
"@babel/plugin-proposal-json-strings": "^7.2.0",
"@babel/plugin-syntax-async-generators": "^7.2.0",
"@babel/plugin-transform-classes": "^7.2.0",
"@babel/plugin-transform-dotall-regex": "^7.2.0",
"@babel/plugin-transform-destructuring": "^7.2.0",
"@babel/plugin-transform-duplicate-keys": "^7.2.0",
"@babel/plugin-transform-literals": "^7.2.0",
"@babel/plugin-transform-function-name": "^7.2.0",
"@babel/plugin-transform-for-of": "^7.2.0",
"@babel/plugin-transform-modules-amd": "^7.2.0",
"@babel/plugin-transform-modules-umd": "^7.2.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-object-super": "^7.2.0",
"@babel/plugin-transform-parameters": "^7.2.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-spread": "^7.2.0",
"@babel/plugin-transform-sticky-regex": "^7.2.0",
"@babel/plugin-transform-typeof-symbol": "^7.2.0",
"@babel/plugin-transform-unicode-regex": "^7.2.0",
"@babel/preset-react": {
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/preset-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/runtime": {
"@babel/plugin-transform-typescript": "^7.1.0"
"dependencies": {
"regenerator-runtime": {
"@babel/template": {
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.1.2",
"@babel/types": "^7.1.2"
"@babel/traverse": {
"@babel/code-frame": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/generator": "^7.1.6",
"@babel/helper-function-name": "^7.1.0",
"@babel/parser": "^7.1.6",
"@babel/types": "^7.1.6",
"dependencies": {
"@babel/types": {
"requires": {
"@csstools/convert-colors": {
"@mrmlnc/readdir-enhanced": {
"@nodelib/fs.stat": {
"@svgr/webpack": {
"@babel/preset-env": "^7.0.0",
"@babel/core": "^7.0.1",
"@babel/preset-react": "^7.0.0",
"@types/tapable": {
"@svgr/core": "^2.4.1",
"@webassemblyjs/ast": {
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6"
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/ieee754": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/leb128": {
"@webassemblyjs/utf8": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/wast-parser": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-code-frame": "1.7.6",
"@webassemblyjs/helper-fsm": "1.7.6",
"@webassemblyjs/wast-printer": {
"@xtuc/long": "4.2.1",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-parser": "1.7.6",
"@xtuc/ieee754": {
"@xtuc/long": "4.2.1"
"acorn-dynamic-import": {
"ajv-keywords": {
"acorn-globals": {
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk="
"dependencies": {
"ansi-escapes": {
"alphanum-sort": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"requires": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"is-descriptor": {
"requires": {
"requires": {
"define-property": {
"dependencies": {
"extend-shallow": {
"fill-range": {
"requires": {
"requires": {
"extend-shallow": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"append-transform": {
"requires": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-flatten": {
"array-includes": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-reduce": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"array-unique": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"inherits": {
"requires": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"ast-types-flow": {
"autoprefixer": {
"async-limiter": {
"astral-regex": {
"dependencies": {
"requires": {
"source-map": {
"babel-code-frame": {
"dependencies": {
"axobject-query": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"ansi-styles": {
"requires": {
"js-tokens": {
"supports-color": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"babel-eslint": {
"@babel/parser": "^7.0.0",
"@babel/code-frame": "^7.0.0",
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.0.0",
"babel-extract-comments": {
"babel-helpers": {
"babel-generator": {
"dependencies": {
"babel-loader": {
"babel-messages": {
"babel-plugin-dynamic-import-node": {
"babel-plugin-istanbul": {
"babel-plugin-named-asset-import": {
"babel-plugin-jest-hoist": {
"babel-plugin-syntax-object-rest-spread": {
"babel-plugin-macros": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-transform-react-remove-prop-types": {
"babel-preset-jest": {
"babel-preset-react-app": {
"@babel/plugin-proposal-decorators": "7.1.2",
"@babel/core": "7.1.0",
"@babel/plugin-proposal-class-properties": "7.1.0",
"@babel/preset-env": "7.1.0",
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/plugin-transform-runtime": "7.1.0",
"@babel/plugin-transform-classes": "7.1.0",
"@babel/plugin-transform-destructuring": "7.0.0",
"@babel/preset-typescript": "7.1.0",
"@babel/runtime": "7.0.0",
"@babel/preset-react": "7.0.0",
"dependencies": {
"@babel/plugin-proposal-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"requires": {
"@babel/plugin-transform-classes": {
"requires": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"requires": {
"@babel/helper-function-name": "^7.1.0",
"requires": {
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-react-display-name": {
"requires": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/preset-env": {
"requires": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"dependencies": {
"@babel/plugin-transform-parameters": "^7.1.0",
"babel-register": {
"@babel/plugin-transform-spread": "^7.0.0",
"requires": {
"babel-core": {
"requires": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-runtime": {
"babel-template": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"dependencies": {
"babel-traverse": {
"balanced-match": {
"dependencies": {
"to-fast-properties": {
"requires": {
"dependencies": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-accessor-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"bcrypt-pbkdf": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"binary-extensions": {
"dependencies": {
"iconv-lite": {
"requires": {
"requires": {
"brace-expansion": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browser-process-hrtime": {
"browser-resolve": {
"dependencies": {
"browserify-aes": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"browserify-des": {
"browserify-cipher": {
"browserify-rsa": {
"browserify-sign": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-zlib": {
"browserslist": {
"buffer-indexof": {
"builtin-modules": {
"builtin-status-codes": {
"dependencies": {
"caller-callsite": {
"call-me-maybe": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"capture-exit": {
"caniuse-lite": {
"case-sensitive-paths-webpack-plugin": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"requires": {
"glob-parent": {
"dependencies": {
"is-glob": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"requires": {
"chrome-trace-event": {
"circular-json": {
"define-property": {
"dependencies": {
"dependencies": {
"requires": {
"source-map": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"dependencies": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"ansi-regex": {
"requires": {
"strip-ansi": {
"collection-visit": {
"color-convert": {
"code-point-at": {
"combined-stream": {
"color-string": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"component-emitter": {
"compressible": {
"dependencies": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"requires": {
"concat-stream": {
"confusing-browser-globals": {
"connect-history-api-fallback": {
"constants-browserify": {
"console-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"contains-path": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"content-disposition": {
"content-type": {
"convert-source-map": {
"cookie-signature": {
"copy-concurrently": {
"copy-descriptor": {
"core-util-is": {
"crypto-browserify": {
"css-color-names": {
"css-declaration-sorter": {
"requires": {
"dependencies": {
"css-select-base-adapter": {
"source-map": {
"dependencies": {
"css-selector-tokenizer": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"requires": {
"regexpu-core": {
"regjsgen": {
"regjsparser": {
"css-unit-converter": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"css-url-regex": {
"requires": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"dependencies": {
"source-map": {
"requires": {
"cssnano-preset-default": {
"dependencies": {
"requires": {
"cssnano-util-get-arguments": {
"source-map": {
"cssnano-util-get-match": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"dependencies": {
"cssnano-util-raw-cache": {
"source-map": {
"requires": {
"cssnano-util-same-parent": {
"dependencies": {
"damerau-levenshtein": {
"requires": {
"css-tree": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"decode-uri-component": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"dependencies": {
"requires": {
"default-gateway": {
"dependencies": {
"define-property": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"default-require-extensions": {
"define-properties": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"requires": {
"is-descriptor": {
"requires": {
"dependencies": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"pify": {
"delayed-stream": {
"detect-indent": {
"detect-newline": {
"dependencies": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"requires": {
"detect-port-alt": {
"dependencies": {
"diffie-hellman": {
"requires": {
"path-type": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"dom-converter": {
"dom-serializer": {
"domelementtype": {
"dependencies": {
"domain-browser": {
"domexception": {
"domelementtype": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"dotenv-expand": {
"electron-to-chromium": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"end-of-stream": {
"enhanced-resolve": {
"escape-string-regexp": {
"es-to-primitive": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"dependencies": {
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"dependencies": {
"@babel/code-frame": "^7.0.0",
"ansi-regex": {
"source-map": {
"eslint-scope": {
"requires": {
"strip-ansi": {
"requires": {
"dependencies": {
"eslint-config-react-app": {
"eslint-import-resolver-node": {
"requires": {
"eslint-loader": {
"eslint-module-utils": {
"requires": {
"dependencies": {
"requires": {
"path-exists": {
"requires": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"eslint-plugin-flowtype": {
"requires": {
"dependencies": {
"eslint-plugin-import": {
"requires": {
"requires": {
"load-json-file": {
"requires": {
"doctrine": {
"parse-json": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"path-type": {
"requires": {
"requires": {
"read-pkg": {
"requires": {
"read-pkg-up": {
"requires": {
"strip-bom": {
"eslint-plugin-jsx-a11y": {
"eslint-plugin-react": {
"eslint-utils": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"eslint-scope": {
"eslint-visitor-keys": {
"eventemitter3": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"evp_bytestokey": {
"cross-spawn": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"dependencies": {
"expand-brackets": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"requires": {
"expand-range": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"expand-tilde": {
"dependencies": {
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"array-flatten": {
"requires": {
"extend-shallow": {
"dependencies": {
"is-extendable": {
"external-editor": {
"requires": {
"fast-deep-equal": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"@nodelib/fs.stat": "^1.1.2",
"@mrmlnc/readdir-enhanced": "^2.2.1",
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"is-descriptor": {
"requires": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"requires": {
"glob-parent": {
"requires": {
"dependencies": {
"is-glob": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"kind-of": {
"dependencies": {
"requires": {
"requires": {
"micromatch": {
"requires": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"fast-json-stable-stringify": {
"fast-levenshtein": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"faye-websocket": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"figgy-pudding": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"dependencies": {
"file-entry-cache": {
"filename-regex": {
"isobject": {
"requires": {
"finalhandler": {
"find-cache-dir": {
"dependencies": {
"flush-write-stream": {
"requires": {
"dependencies": {
"follow-redirects": {
"requires": {
"forever-agent": {
"dependencies": {
"fork-ts-checker-webpack-plugin-alt": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"extend-shallow": {
"dependencies": {
"kind-of": {
"is-data-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"requires": {
"extend-shallow": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"fragment-cache": {
"requires": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"fs-write-stream-atomic": {
"dependencies": {
"brace-expansion": {
"balanced-match": {
"ansi-regex": {
"are-we-there-yet": {
"requires": {
"requires": {
"code-point-at": {
"console-control-strings": {
"concat-map": {
"core-util-is": {
"deep-extend": {
"delegates": {
"requires": {
"detect-libc": {
"fs-minipass": {
"fs.realpath": {
"requires": {
"requires": {
"requires": {
"has-unicode": {
"iconv-lite": {
"requires": {
"requires": {
"ignore-walk": {
"requires": {
"inflight": {
"is-fullwidth-code-point": {
"inherits": {
"requires": {
"minimatch": {
"requires": {
"minimist": {
"minizlib": {
"minipass": {
"requires": {
"requires": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"requires": {
"requires": {
"object-assign": {
"number-is-nan": {
"requires": {
"os-homedir": {
"requires": {
"os-tmpdir": {
"path-is-absolute": {
"process-nextick-args": {
"requires": {
"dependencies": {
"minimist": {
"readable-stream": {
"requires": {
"requires": {
"safer-buffer": {
"set-blocking": {
"signal-exit": {
"requires": {
"safe-buffer": {
"string-width": {
"string_decoder": {
"requires": {
"strip-ansi": {
"requires": {
"strip-json-comments": {
"util-deprecate": {
"requires": {
"requires": {
"wide-align": {
"function-bind": {
"functional-red-black-tree": {
"get-caller-file": {
"get-own-enumerable-property-symbols": {
"glob-to-regexp": {
"global-modules": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"global-prefix": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"h2x-plugin-jsx": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-generate": {
"handle-thing": {
"h2x-traverse": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"dependencies": {
"har-validator": {
"source-map": {
"harmony-reflect": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"dependencies": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"hoist-non-react-statics": {
"hex-color-regex": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"homedir-polyfill": {
"hosted-git-info": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"html-comment-regex": {
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"html-minifier": {
"html-encoding-sniffer": {
"dependencies": {
"html-entities": {
"html-webpack-plugin": {
"commander": {
"dependencies": {
"@types/tapable": "1.0.2",
"domutils": {
"readable-stream": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"requires": {
"string_decoder": {
"requires": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-deceiver": {
"http-parser-js": {
"http-proxy-middleware": {
"arr-diff": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"expand-brackets": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"dependencies": {
"is-number": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"http-signature": {
"https-browserify": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"icss-replace-symbols": {
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"identity-obj-proxy": {
"import-fresh": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"import-local": {
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"dependencies": {
"ansi-regex": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"strip-ansi": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"is-absolute-url": {
"is-accessor-descriptor": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"is-builtin-module": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-binary-path": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-data-descriptor": {
"is-date-object": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-color-stop": {
"is-descriptor": {
"dependencies": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"is-directory": {
"is-equal-shallow": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"is-extendable": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-generator-fn": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-fullwidth-code-point": {
"is-path-inside": {
"is-path-in-cwd": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-posix-bracket": {
"is-plain-object": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-primitive": {
"is-resolvable": {
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"is-typedarray": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"istanbul-lib-coverage": {
"istanbul-api": {
"istanbul-lib-hook": {
"istanbul-lib-instrument": {
"istanbul-lib-report": {
"has-flag": {
"supports-color": {
"dependencies": {
"requires": {
"istanbul-lib-source-maps": {
"istanbul-reports": {
"ansi-regex": {
"dependencies": {
"jest-cli": {
"requires": {
"strip-ansi": {
"jest-changed-files": {
"requires": {
"babel-core": {
"dependencies": {
"requires": {
"jest-docblock": {
"requires": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"dependencies": {
"jest-environment-jsdom": {
"whatwg-url": {
"requires": {
"requires": {
"requires": {
"jest-environment-node": {
"jest-haste-map": {
"jest-get-type": {
"jest-leak-detector": {
"jest-matcher-utils": {
"jest-message-util": {
"jest-jasmine2": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-regex-util": {
"jest-resolve": {
"jest-pnp-resolver": {
"dependencies": {
"jest-resolve-dependencies": {
"source-map-support": {
"source-map": {
"requires": {
"jest-runtime": {
"requires": {
"dependencies": {
"requires": {
"babel-core": {
"jest-serializer": {
"strip-bom": {
"jest-snapshot": {
"dependencies": {
"source-map": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"jest-validate": {
"js-levenshtein": {
"jest-watcher": {
"json-parse-better-errors": {
"json-stable-stringify": {
"json-schema-traverse": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-stringify-safe": {
"json-stable-stringify-without-jsonify": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"last-call-webpack-plugin": {
"jsx-ast-utils": {
"load-json-file": {
"dependencies": {
"parse-json": {
"loader-fs-cache": {
"requires": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"dependencies": {
"find-cache-dir": {
"requires": {
"path-exists": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"requires": {
"loader-runner": {
"requires": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"lodash.camelcase": {
"loader-utils": {
"lodash._reinterpolate": {
"lodash.debounce": {
"lodash.memoize": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"lodash.sortby": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.template": {
"lodash.templatesettings": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"loose-envify": {
"dependencies": {
"map-age-cleaner": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"merge-descriptors": {
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-stream": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"mini-css-extract-plugin": {
"miller-rabin": {
"minimalistic-assert": {
"minimalistic-crypto-utils": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"dependencies": {
"is-extendable": {
"requires": {
"mixin-object": {
"dependencies": {
"multicast-dns": {
"move-concurrently": {
"dependencies": {
"multicast-dns-service-types": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"natural-compare": {
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"node-libs-browser": {
"punycode": {
"dependencies": {
"node-notifier": {
"node-releases": {
"normalize-package-data": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-path": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"normalize-range": {
"normalize-url": {
"number-is-nan": {
"num2fraction": {
"object-assign": {
"npm-run-path": {
"define-property": {
"dependencies": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"requires": {
"object.assign": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"object-visit": {
"object.getownpropertydescriptors": {
"object.values": {
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"integrity": "sha1-5STaCbT2b/Bd9FdUbscqyZ8TBpo=",
"wordwrap": {
"dependencies": {
"optimize-css-assets-webpack-plugin": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"os-browserify": {
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"p-is-promise": {
"parallel-transform": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"parse-passwd": {
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-browserify": {
"path-dirname": {
"path-is-absolute": {
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"path-is-inside": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"path-to-regexp": {
"performance-now": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"pinkie-promise": {
"dependencies": {
"pnp-webpack-plugin": {
"posix-character-classes": {
"requires": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"dependencies": {
"source-map": {
"dependencies": {
"postcss-attribute-case-insensitive": {
"requires": {
"source-map": {
"postcss-calc": {
"dependencies": {
"requires": {
"source-map": {
"postcss-color-functional-notation": {
"dependencies": {
"requires": {
"postcss-color-hex-alpha": {
"source-map": {
"requires": {
"dependencies": {
"postcss-color-mod-function": {
"@csstools/convert-colors": "^1.4.0",
"source-map": {
"requires": {
"source-map": {
"dependencies": {
"dependencies": {
"postcss-color-rebeccapurple": {
"requires": {
"postcss-colormin": {
"source-map": {
"dependencies": {
"requires": {
"dependencies": {
"source-map": {
"postcss-convert-values": {
"requires": {
"dependencies": {
"postcss-custom-media": {
"source-map": {
"source-map": {
"requires": {
"dependencies": {
"postcss-custom-properties": {
"requires": {
"source-map": {
"dependencies": {
"postcss-custom-selectors": {
"source-map": {
"requires": {
"postcss-dir-pseudo-class": {
"requires": {
"source-map": {
"dependencies": {
"postcss-discard-comments": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-discard-duplicates": {
"dependencies": {
"source-map": {
"postcss-discard-empty": {
"requires": {
"requires": {
"source-map": {
"dependencies": {
"postcss-discard-overridden": {
"requires": {
"dependencies": {
"postcss-env-function": {
"requires": {
"source-map": {
"source-map": {
"dependencies": {
"requires": {
"postcss-flexbugs-fixes": {
"postcss-focus-visible": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-focus-within": {
"requires": {
"dependencies": {
"source-map": {
"postcss-font-variant": {
"dependencies": {
"source-map": {
"requires": {
"postcss-gap-properties": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"postcss-image-set-function": {
"dependencies": {
"source-map": {
"postcss-initial": {
"requires": {
"source-map": {
"dependencies": {
"dependencies": {
"postcss-lab-function": {
"requires": {
"@csstools/convert-colors": "^1.4.0",
"postcss-load-config": {
"source-map": {
"dependencies": {
"requires": {
"cosmiconfig": {
"postcss-loader": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-logical": {
"source-map": {
"postcss-media-minmax": {
"requires": {
"requires": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-merge-longhand": {
"source-map": {
"requires": {
"dependencies": {
"postcss-merge-rules": {
"requires": {
"postcss-selector-parser": {
"source-map": {
"requires": {
"dependencies": {
"postcss-minify-font-values": {
"requires": {
"dependencies": {
"source-map": {
"postcss-minify-gradients": {
"source-map": {
"requires": {
"dependencies": {
"postcss-minify-params": {
"requires": {
"source-map": {
"postcss-minify-selectors": {
"dependencies": {
"postcss-selector-parser": {
"requires": {
"requires": {
"postcss-modules-extract-imports": {
"source-map": {
"postcss-modules-scope": {
"postcss-modules-local-by-default": {
"postcss-modules-values": {
"postcss-nesting": {
"postcss-normalize-charset": {
"requires": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-normalize-display-values": {
"source-map": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-positions": {
"dependencies": {
"requires": {
"postcss-normalize-repeat-style": {
"dependencies": {
"postcss-normalize-string": {
"source-map": {
"dependencies": {
"source-map": {
"source-map": {
"requires": {
"postcss-normalize-timing-functions": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"postcss-normalize-unicode": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-url": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-whitespace": {
"requires": {
"dependencies": {
"source-map": {
"postcss-ordered-values": {
"dependencies": {
"source-map": {
"requires": {
"postcss-overflow-shorthand": {
"dependencies": {
"requires": {
"postcss-page-break": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"postcss-place": {
"dependencies": {
"source-map": {
"postcss-preset-env": {
"requires": {
"postcss-pseudo-class-any-link": {
"source-map": {
"requires": {
"dependencies": {
"source-map": {
"postcss-reduce-initial": {
"dependencies": {
"requires": {
"source-map": {
"postcss-reduce-transforms": {
"source-map": {
"dependencies": {
"dependencies": {
"requires": {
"source-map": {
"postcss-replace-overflow-wrap": {
"requires": {
"postcss-safe-parser": {
"dependencies": {
"source-map": {
"requires": {
"dependencies": {
"postcss-selector-matches": {
"requires": {
"postcss-selector-not": {
"dependencies": {
"source-map": {
"requires": {
"postcss-selector-parser": {
"source-map": {
"dependencies": {
"postcss-svgo": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-unique-selectors": {
"dependencies": {
"postcss-value-parser": {
"source-map": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"postcss-values-parser": {
"dependencies": {
"pretty-error": {
"pretty-bytes": {
"pretty-format": {
"ansi-regex": {
"promise-inflight": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"process-nextick-args": {
"dependencies": {
"public-encrypt": {
"querystring-es3": {
"requires": {
"querystringify": {
"dependencies": {
"range-parser": {
"dependencies": {
"is-number": {
"iconv-lite": {
"react-app-polyfill": {
"requires": {
"@babel/code-frame": "7.0.0",
"dependencies": {
"react-dev-utils": {
"ansi-regex": {
"browserslist": {
"inquirer": {
"requires": {
"requires": {
"requires": {
"requires": {
"locate-path": {
"p-locate": {
"requires": {
"requires": {
"requires": {
"strip-ansi": {
"react-error-overlay": {
"react-lifecycles-compat": {
"dependencies": {
"@babel/runtime": "^7.1.2",
"requires": {
"@babel/runtime": {
"regenerator-runtime": {
"@babel/core": "7.1.0",
"@svgr/webpack": "2.4.1",
"react-scripts": {
"dependencies": {
"requires": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"dependencies": {
"requires": {
"path-exists": {
"dependencies": {
"arr-diff": {
"readable-stream": {
"requires": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"define-property": {
"requires": {
"requires": {
"fill-range": {
"extend-shallow": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"micromatch": {
"kind-of": {
"requires": {
"requires": {
"realpath-native": {
"recursive-readdir": {
"regenerate-unicode-properties": {
"regexpu-core": {
"regenerator-transform": {
"regenerator-runtime": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"dependencies": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"dependencies": {
"requires": {
"remove-trailing-separator": {
"domutils": {
"css-select": {
"requires": {
"repeat-element": {
"repeat-string": {
"punycode": {
"dependencies": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"tough-cookie": {
"requires": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"request-promise-native": {
"require-directory": {
"request-promise-core": {
"require-from-string": {
"require-main-filename": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"require-uncached": {
"caller-path": {
"dependencies": {
"requires": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"callsites": {
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"resolve-from": {
"requires-port": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"resolve-from": {
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"restore-cursor": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"safer-buffer": {
"arr-diff": {
"dependencies": {
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"kind-of": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"is-accessor-descriptor": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"is-number": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"micromatch": {
"requires": {
"minimist": {
"clone-deep": {
"dependencies": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"shallow-clone": {
"requires": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"dependencies": {
"kind-of": {
"requires": {
"schema-utils": {
"requires": {
"dependencies": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"serialize-javascript": {
"dependencies": {
"requires": {
"serve-static": {
"set-blocking": {
"dependencies": {
"extend-shallow": {
"requires": {
"setprototypeof": {
"setimmediate": {
"shallow-clone": {
"dependencies": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"requires": {
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"lazy-cache": {
"shebang-command": {
"shebang-regex": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"simple-swizzle": {
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"is-arrayish": {
"dependencies": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"define-property": {
"dependencies": {
"requires": {
"snapdragon-node": {
"define-property": {
"is-accessor-descriptor": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"snapdragon-util": {
"dependencies": {
"faye-websocket": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"requires": {
"sockjs-client": {
"requires": {
"dependencies": {
"source-map-support": {
"source-list-map": {
"source-map-resolve": {
"spdx-correct": {
"source-map-url": {
"spdx-exceptions": {
"spdx-expression-parse": {
"spdx-license-ids": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"spdy-transport": {
"requires": {
"dependencies": {
"dependencies": {
"requires": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"split-string": {
"dependencies": {
"define-property": {
"requires": {
"stealthy-require": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"stream-browserify": {
"stream-shift": {
"string-length": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"ansi-regex": {
"dependencies": {
"string-width": {
"strip-ansi": {
"dependencies": {
"requires": {
"ansi-regex": {
"strip-ansi": {
"requires": {
"stringify-object": {
"string_decoder": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"strip-json-comments": {
"strip-comments": {
"style-loader": {
"dependencies": {
"schema-utils": {
"requires": {
"postcss-selector-parser": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"symbol-observable": {
"dependencies": {
"commander": {
"source-map": {
"requires": {
"source-map-support": {
"terser-webpack-plugin": {
"requires": {
"find-cache-dir": {
"dependencies": {
"requires": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"source-map": {
"test-exclude": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"timers-browserify": {
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"to-arraybuffer": {
"to-object-path": {
"to-fast-properties": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"to-regex-range": {
"dependencies": {
"tough-cookie": {
"requires": {
"is-number": {
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"tty-browserify": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"tunnel-agent": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"commander": {
"dependencies": {
"uglifyjs-webpack-plugin": {
"dependencies": {
"source-map": {
"requires": {
"requires": {
"commander": {
"requires": {
"mississippi": {
"requires": {
"schema-utils": {
"source-map": {
"requires": {
"uglify-es": {
"requires": {
"unicode-canonical-property-names-ecmascript": {
"unicode-match-property-ecmascript": {
"unicode-property-aliases-ecmascript": {
"unicode-match-property-value-ecmascript": {
"dependencies": {
"requires": {
"extend-shallow": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"set-value": {
"unique-filename": {
"universalify": {
"dependencies": {
"requires": {
"has-value": {
"requires": {
"dependencies": {
"isobject": {
"requires": {
"has-values": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"dependencies": {
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"punycode": {
"validate-npm-package-license": {
"util-deprecate": {
"util.promisify": {
"vm-browserify": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"dependencies": {
"w3c-xmlserializer": {
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"webidl-conversions": {
"minimist": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wasm-edit": "1.7.6",
"dependencies": {
"arr-diff": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"eslint-scope": {
"requires": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"extend-shallow": {
"define-property": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"micromatch": {
"webpack-dev-server": {
"schema-utils": {
"webpack-dev-middleware": {
"requires": {
"dependencies": {
"requires": {
"camelcase": {
"decamelize": {
"requires": {
"import-local": {
"requires": {
"requires": {
"requires": {
"locate-path": {
"invert-kv": {
"requires": {
"requires": {
"p-locate": {
"os-locale": {
"requires": {
"requires": {
"requires": {
"yargs-parser": {
"requires": {
"requires": {
"requires": {
"webpack-manifest-plugin": {
"webpack-sources": {
"source-map": {
"dependencies": {
"websocket-driver": {
"whatwg-fetch": {
"whatwg-encoding": {
"websocket-extensions": {
"which-module": {
"whatwg-mimetype": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"workbox-background-sync": {
"workbox-broadcast-cache-update": {
"workbox-build": {
"dependencies": {
"fs-extra": {
"requires": {
"workbox-cache-expiration": {
"workbox-cacheable-response": {
"workbox-google-analytics": {
"workbox-navigation-preload": {
"workbox-core": {
"workbox-precaching": {
"workbox-range-requests": {
"workbox-routing": {
"workbox-streams": {
"workbox-strategies": {
"dependencies": {
"workbox-webpack-plugin": {
"is-fullwidth-code-point": {
"requires": {
"requires": {
"string-width": {
"xml-name-validator": {
"write-file-atomic": {
"yargs-parser": {
"dependencies": {
"camelcase": {
"@babel/code-frame": "^7.0.0",
"@babel/code-frame": {
"@babel/helpers": "^7.1.0",
"@babel/highlight": "^7.0.0"
"@babel/generator": "^7.0.0",
"@babel/parser": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/generator": {
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.1.3",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/helper-builder-react-jsx": {
"@babel/helper-annotate-as-pure": {
"@babel/types": "^7.0.0",
"@babel/helper-call-delegate": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-define-map": {
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-function-name": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-hoist-variables": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/helper-member-expression-to-functions": {
"@babel/helper-module-transforms": {
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0",
"@babel/helper-plugin-utils": {
"@babel/helper-regex": {
"@babel/types": "^7.0.0"
"@babel/helper-optimise-call-expression": {
"@babel/helper-remap-async-to-generator": {
"@babel/helper-wrap-function": "^7.1.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-simple-access": {
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/helper-function-name": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helpers": {
"@babel/traverse": "^7.1.0",
"@babel/template": "^7.1.2",
"@babel/highlight": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.1.2"
"@babel/plugin-proposal-async-generator-functions": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/parser": {
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/plugin-syntax-async-generators": "^7.0.0"
"@babel/plugin-proposal-class-properties": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-proposal-object-rest-spread": {
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-json-strings": {
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/plugin-syntax-json-strings": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-object-rest-spread": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-syntax-async-generators": {
"@babel/plugin-syntax-dynamic-import": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoped-functions": {
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-block-scoping": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-classes": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-transform-computed-properties": {
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-duplicate-keys": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-flow-strip-types": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-transform-function-name": {
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-literals": {
"@babel/plugin-transform-modules-amd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-simple-access": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-umd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-new-target": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-object-super": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0"
"@babel/helper-call-delegate": "^7.1.0",
"@babel/plugin-transform-parameters": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-constant-elements": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/plugin-transform-react-display-name": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-builder-react-jsx": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-jsx": {
"@babel/plugin-transform-react-jsx-self": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-react-jsx-source": {
"@babel/plugin-transform-regenerator": {
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-runtime": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/plugin-transform-spread": {
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-regex": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/plugin-syntax-typescript": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-proposal-json-strings": "^7.0.0",
"@babel/preset-env": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-async-generators": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-block-scoping": "^7.0.0",
"@babel/plugin-transform-destructuring": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": "^7.0.0",
"@babel/plugin-transform-dotall-regex": "^7.0.0",
"@babel/plugin-transform-function-name": "^7.1.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-modules-umd": "^7.1.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-modules-amd": "^7.1.0",
"@babel/plugin-transform-object-super": "^7.1.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"@babel/plugin-transform-sticky-regex": "^7.0.0",
"@babel/plugin-transform-typeof-symbol": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.0.0",
"@babel/preset-react": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/preset-typescript": {
"@babel/runtime": {
"@babel/plugin-transform-typescript": "^7.1.0"
"@babel/template": {
"@babel/code-frame": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/types": "^7.1.2"
"@babel/parser": "^7.1.2",
"@babel/code-frame": "^7.0.0",
"@babel/generator": "^7.1.3",
"@babel/traverse": {
"@babel/parser": "^7.1.3",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@material-ui/core": {
"@babel/types": "^7.1.3",
"@csstools/convert-colors": {
"@babel/types": {
"@babel/runtime": "7.1.2",
"@types/jss": "^9.5.6",
"@mrmlnc/readdir-enhanced": {
"@types/react-transition-group": "^2.0.8",
"@nodelib/fs.stat": {
"@babel/core": "^7.0.1",
"@babel/preset-env": "^7.0.0",
"@babel/preset-react": "^7.0.0",
"@svgr/webpack": {
"@svgr/core": "^2.4.1",
"@types/prop-types": "*",
"@types/prop-types": {
"@types/react": {
"@types/react": "*"
"@types/react-transition-group": {
"@types/tapable": {
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ast": {
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6"
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": {
"@webassemblyjs/leb128": {
"@xtuc/long": "4.2.1"
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/utf8": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/wast-parser": {
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-fsm": "1.7.6",
"@xtuc/long": "4.2.1",
"@webassemblyjs/helper-code-frame": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-printer": {
"@webassemblyjs/wast-parser": "1.7.6",
"@xtuc/ieee754": {
"@xtuc/long": "4.2.1"
"acorn-dynamic-import": {
"dependencies": {
"acorn-globals": {
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk="
"ajv-keywords": {
"alphanum-sort": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"ansi-escapes": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"requires": {
"arr-diff": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"expand-brackets": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"kind-of": {
"dependencies": {
"requires": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"kind-of": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"kind-of": {
"dependencies": {
"requires": {
"micromatch": {
"requires": {
"append-transform": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"requires": {
"array-flatten": {
"array-reduce": {
"array-includes": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"dependencies": {
"array-unique": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"requires": {
"inherits": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"ast-types-flow": {
"astral-regex": {
"async-limiter": {
"dependencies": {
"autoprefixer": {
"axobject-query": {
"requires": {
"source-map": {
"babel-code-frame": {
"ansi-styles": {
"dependencies": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"requires": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"babel-eslint": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"supports-color": {
"@babel/code-frame": "^7.0.0",
"@babel/traverse": "^7.0.0",
"js-tokens": {
"@babel/parser": "^7.0.0",
"@babel/types": "^7.0.0",
"babel-extract-comments": {
"dependencies": {
"babel-generator": {
"babel-plugin-dynamic-import-node": {
"babel-loader": {
"babel-helpers": {
"babel-messages": {
"babel-plugin-jest-hoist": {
"babel-plugin-named-asset-import": {
"babel-plugin-istanbul": {
"babel-plugin-macros": {
"babel-plugin-syntax-object-rest-spread": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-transform-react-remove-prop-types": {
"babel-preset-jest": {
"babel-preset-react-app": {
"@babel/core": "7.1.0",
"@babel/plugin-proposal-class-properties": "7.1.0",
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/plugin-transform-classes": "7.1.0",
"@babel/plugin-transform-destructuring": "7.0.0",
"@babel/plugin-transform-runtime": "7.1.0",
"@babel/preset-react": "7.0.0",
"@babel/preset-typescript": "7.1.0",
"@babel/preset-env": "7.1.0",
"@babel/plugin-transform-destructuring": {
"@babel/runtime": "7.0.0",
"dependencies": {
"@babel/helper-plugin-utils": "^7.0.0"
"requires": {
"@babel/runtime": {
"requires": {
"babel-core": {
"requires": {
"babel-register": {
"babel-runtime": {
"dependencies": {
"requires": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"regenerator-runtime": {
"babel-template": {
"babel-traverse": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"dependencies": {
"to-fast-properties": {
"dependencies": {
"dependencies": {
"requires": {
"dependencies": {
"balanced-match": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"bcrypt-pbkdf": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"binary-extensions": {
"requires": {
"requires": {
"dependencies": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"requires": {
"iconv-lite": {
"brace-expansion": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browser-resolve": {
"dependencies": {
"browserify-des": {
"browser-process-hrtime": {
"browserify-cipher": {
"browserify-rsa": {
"browserify-aes": {
"browserify-sign": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"buffer-indexof": {
"browserify-zlib": {
"browserslist": {
"builtin-modules": {
"builtin-status-codes": {
"dependencies": {
"call-me-maybe": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"capture-exit": {
"caniuse-lite": {
"case-sensitive-paths-webpack-plugin": {
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"integrity": "sha1-6LL+PX8at9aaMhma/5HqaTFAlRU="
"dependencies": {
"change-emitter": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"array-unique": {
"extend-shallow": {
"requires": {
"fill-range": {
"glob-parent": {
"requires": {
"dependencies": {
"requires": {
"is-glob": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"requires": {
"chrome-trace-event": {
"dependencies": {
"requires": {
"circular-json": {
"define-property": {
"source-map": {
"dependencies": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"dependencies": {
"ansi-regex": {
"requires": {
"code-point-at": {
"collection-visit": {
"strip-ansi": {
"combined-stream": {
"color-string": {
"color-convert": {
"component-emitter": {
"compressible": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"requires": {
"dependencies": {
"concat-stream": {
"connect-history-api-fallback": {
"confusing-browser-globals": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"console-browserify": {
"constants-browserify": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"contains-path": {
"content-disposition": {
"content-type": {
"convert-source-map": {
"cookie-signature": {
"copy-descriptor": {
"copy-concurrently": {
"integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="
"crypto-browserify": {
"css-color-names": {
"css-declaration-sorter": {
"core-util-is": {
"dependencies": {
"css-select-base-adapter": {
"requires": {
"dependencies": {
"css-selector-tokenizer": {
"source-map": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"regexpu-core": {
"regjsgen": {
"regjsparser": {
"requires": {
"requires": {
"css-unit-converter": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"dependencies": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"css-url-regex": {
"requires": {
"source-map": {
"dependencies": {
"cssnano-preset-default": {
"requires": {
"source-map": {
"cssnano-util-get-arguments": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"cssnano-util-get-match": {
"requires": {
"cssnano-util-raw-cache": {
"dependencies": {
"cssnano-util-same-parent": {
"dependencies": {
"source-map": {
"css-tree": {
"damerau-levenshtein": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"requires": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"dependencies": {
"decode-uri-component": {
"default-require-extensions": {
"requires": {
"default-gateway": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"dependencies": {
"define-properties": {
"is-accessor-descriptor": {
"requires": {
"define-property": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
"delayed-stream": {
"requires": {
"detect-newline": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"detect-port-alt": {
"dependencies": {
"detect-indent": {
"requires": {
"diffie-hellman": {
"dependencies": {
"path-type": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"dom-converter": {
"dom-serializer": {
"dependencies": {
"requires": {
"domain-browser": {
"domelementtype": {
"domelementtype": {
"electron-to-chromium": {
"domexception": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"end-of-stream": {
"escape-string-regexp": {
"dotenv-expand": {
"enhanced-resolve": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"es-to-primitive": {
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"dependencies": {
"@babel/code-frame": "^7.0.0",
"source-map": {
"dependencies": {
"requires": {
"eslint-scope": {
"requires": {
"fast-deep-equal": {
"ansi-regex": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"strip-ansi": {
"json-schema-traverse": {
"eslint-config-react-app": {
"eslint-loader": {
"dependencies": {
"requires": {
"eslint-import-resolver-node": {
"dependencies": {
"requires": {
"eslint-module-utils": {
"requires": {
"requires": {
"requires": {
"path-exists": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"eslint-plugin-flowtype": {
"dependencies": {
"eslint-plugin-import": {
"doctrine": {
"requires": {
"load-json-file": {
"requires": {
"requires": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"parse-json": {
"requires": {
"path-type": {
"requires": {
"requires": {
"read-pkg-up": {
"strip-bom": {
"eslint-plugin-react": {
"read-pkg": {
"eslint-plugin-jsx-a11y": {
"requires": {
"eslint-utils": {
"eslint-visitor-keys": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"eslint-scope": {
"eventemitter3": {
"evp_bytestokey": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"dependencies": {
"cross-spawn": {
"requires": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"expand-brackets": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"expand-range": {
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"expand-tilde": {
"array-flatten": {
"dependencies": {
"extend-shallow": {
"is-extendable": {
"dependencies": {
"requires": {
"external-editor": {
"fast-deep-equal": {
"requires": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"@mrmlnc/readdir-enhanced": "^2.2.1",
"dependencies": {
"@nodelib/fs.stat": "^1.0.1",
"arr-diff": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"kind-of": {
"is-descriptor": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"extend-shallow": {
"dependencies": {
"requires": {
"glob-parent": {
"requires": {
"requires": {
"is-glob": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"dependencies": {
"requires": {
"requires": {
"micromatch": {
"fast-json-stable-stringify": {
"kind-of": {
"fast-levenshtein": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"requires": {
"faye-websocket": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"figgy-pudding": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"file-entry-cache": {
"filename-regex": {
"dependencies": {
"requires": {
"finalhandler": {
"isobject": {
"dependencies": {
"find-cache-dir": {
"flush-write-stream": {
"requires": {
"follow-redirects": {
"requires": {
"dependencies": {
"forever-agent": {
"fork-ts-checker-webpack-plugin-alt": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"extend-shallow": {
"requires": {
"define-property": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"fill-range": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"is-number": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"micromatch": {
"kind-of": {
"fragment-cache": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"requires": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"dependencies": {
"fs-write-stream-atomic": {
"are-we-there-yet": {
"brace-expansion": {
"ansi-regex": {
"requires": {
"balanced-match": {
"concat-map": {
"requires": {
"console-control-strings": {
"code-point-at": {
"requires": {
"core-util-is": {
"delegates": {
"deep-extend": {
"fs-minipass": {
"detect-libc": {
"requires": {
"fs.realpath": {
"iconv-lite": {
"has-unicode": {
"requires": {
"requires": {
"requires": {
"ignore-walk": {
"inflight": {
"requires": {
"inherits": {
"is-fullwidth-code-point": {
"requires": {
"minimatch": {
"requires": {
"requires": {
"minimist": {
"requires": {
"minipass": {
"minizlib": {
"requires": {
"requires": {
"requires": {
"npm-bundled": {
"node-pre-gyp": {
"requires": {
"npm-packlist": {
"requires": {
"requires": {
"number-is-nan": {
"requires": {
"requires": {
"os-homedir": {
"object-assign": {
"path-is-absolute": {
"requires": {
"os-tmpdir": {
"dependencies": {
"requires": {
"process-nextick-args": {
"minimist": {
"readable-stream": {
"requires": {
"requires": {
"safe-buffer": {
"set-blocking": {
"string-width": {
"signal-exit": {
"requires": {
"safer-buffer": {
"string_decoder": {
"requires": {
"strip-ansi": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"requires": {
"wide-align": {
"functional-red-black-tree": {
"requires": {
"get-caller-file": {
"function-bind": {
"get-own-enumerable-property-symbols": {
"glob-to-regexp": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"global-prefix": {
"global-modules": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"h2x-generate": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-plugin-jsx": {
"dependencies": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"handle-thing": {
"source-map": {
"dependencies": {
"har-validator": {
"harmony-reflect": {
"h2x-traverse": {
"dependencies": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"hex-color-regex": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"hoist-non-react-statics": {
"hosted-git-info": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"html-comment-regex": {
"homedir-polyfill": {
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"html-encoding-sniffer": {
"commander": {
"html-minifier": {
"html-entities": {
"html-webpack-plugin": {
"dependencies": {
"@types/tapable": "1.0.2",
"dependencies": {
"domutils": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"string_decoder": {
"http-deceiver": {
"requires": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"dependencies": {
"http-proxy-middleware": {
"http-parser-js": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"define-property": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"is-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"kind-of": {
"requires": {
"fill-range": {
"extend-shallow": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-data-descriptor": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"micromatch": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"http-signature": {
"https-browserify": {
"hyphenate-style-name": {
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"icss-replace-symbols": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"identity-obj-proxy": {
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"dependencies": {
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"import-local": {
"resolve-from": {
"indefinite-observable": {
"dependencies": {
"strip-ansi": {
"requires": {
"ansi-regex": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"is-accessor-descriptor": {
"is-absolute-url": {
"is-binary-path": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-color-stop": {
"is-builtin-module": {
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-date-object": {
"is-data-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-descriptor": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"is-directory": {
"dependencies": {
"is-equal-shallow": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-extendable": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-generator-fn": {
"is-fullwidth-code-point": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-in-browser": {
"is-path-in-cwd": {
"is-plain-object": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-primitive": {
"is-path-inside": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"is-typedarray": {
"is-posix-bracket": {
"is-resolvable": {
"isomorphic-fetch": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"istanbul-api": {
"istanbul-lib-coverage": {
"istanbul-lib-instrument": {
"istanbul-lib-report": {
"dependencies": {
"istanbul-lib-hook": {
"requires": {
"supports-color": {
"istanbul-lib-source-maps": {
"has-flag": {
"dependencies": {
"istanbul-reports": {
"jest-cli": {
"ansi-regex": {
"requires": {
"strip-ansi": {
"jest-changed-files": {
"dependencies": {
"babel-core": {
"requires": {
"requires": {
"requires": {
"jest-docblock": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"jest-environment-jsdom": {
"dependencies": {
"requires": {
"whatwg-url": {
"requires": {
"jest-get-type": {
"jest-environment-node": {
"requires": {
"jest-haste-map": {
"jest-leak-detector": {
"jest-matcher-utils": {
"jest-message-util": {
"jest-jasmine2": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-pnp-resolver": {
"jest-regex-util": {
"dependencies": {
"jest-resolve-dependencies": {
"jest-resolve": {
"source-map-support": {
"requires": {
"source-map": {
"jest-runtime": {
"babel-core": {
"dependencies": {
"requires": {
"strip-bom": {
"jest-serializer": {
"jest-snapshot": {
"requires": {
"callsites": {
"source-map": {
"dependencies": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"jest-watcher": {
"jest-validate": {
"js-levenshtein": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"json-schema-traverse": {
"json-parse-better-errors": {
"json-stable-stringify-without-jsonify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-stringify-safe": {
"json-stable-stringify": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"dependencies": {
"symbol-observable": {
"jss-default-unit": {
"requires": {
"jss-camel-case": {
"requires": {
"jss-vendor-prefixer": {
"jsx-ast-utils": {
"jss-props-sort": {
"dependencies": {
"load-json-file": {
"last-call-webpack-plugin": {
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"dependencies": {
"requires": {
"parse-json": {
"loader-fs-cache": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"dependencies": {
"find-cache-dir": {
"requires": {
"path-exists": {
"requires": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"requires": {
"loader-runner": {
"lodash._reinterpolate": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"lodash.camelcase": {
"loader-utils": {
"lodash.debounce": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.memoize": {
"lodash.template": {
"lodash.templatesettings": {
"lodash.sortby": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"loose-envify": {
"map-age-cleaner": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"merge-descriptors": {
"merge-stream": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"dependencies": {
"mini-css-extract-plugin": {
"miller-rabin": {
"minimalistic-assert": {
"minimalistic-crypto-utils": {
"dependencies": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"requires": {
"is-extendable": {
"mixin-object": {
"dependencies": {
"move-concurrently": {
"multicast-dns-service-types": {
"arr-diff": {
"multicast-dns": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"natural-compare": {
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"punycode": {
"node-libs-browser": {
"dependencies": {
"node-notifier": {
"node-releases": {
"normalize-package-data": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-path": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"normalize-range": {
"normalize-scroll-left": {
"normalize-url": {
"npm-run-path": {
"num2fraction": {
"number-is-nan": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"object-assign": {
"dependencies": {
"object-visit": {
"define-property": {
"object.getownpropertydescriptors": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"object.values": {
"object.assign": {
"requires": {
"integrity": "sha1-5STaCbT2b/Bd9FdUbscqyZ8TBpo=",
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"dependencies": {
"wordwrap": {
"optimize-css-assets-webpack-plugin": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"os-browserify": {
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"parallel-transform": {
"p-is-promise": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"parse-passwd": {
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"path-browserify": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-is-absolute": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"path-is-inside": {
"path-to-regexp": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"path-dirname": {
"performance-now": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"pinkie-promise": {
"integrity": "sha1-juwdj/AqWjoVLdQ0FKFce3n9abY="
"dependencies": {
"pnp-webpack-plugin": {
"requires": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"dependencies": {
"posix-character-classes": {
"postcss-attribute-case-insensitive": {
"dependencies": {
"source-map": {
"postcss-calc": {
"source-map": {
"requires": {
"dependencies": {
"postcss-color-functional-notation": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"postcss-color-hex-alpha": {
"requires": {
"dependencies": {
"postcss-color-mod-function": {
"dependencies": {
"@csstools/convert-colors": "^1.4.0",
"source-map": {
"source-map": {
"requires": {
"postcss-color-rebeccapurple": {
"dependencies": {
"postcss-colormin": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-convert-values": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-custom-media": {
"requires": {
"postcss-custom-properties": {
"dependencies": {
"requires": {
"dependencies": {
"source-map": {
"source-map": {
"postcss-custom-selectors": {
"requires": {
"dependencies": {
"postcss-dir-pseudo-class": {
"source-map": {
"dependencies": {
"source-map": {
"postcss-discard-comments": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-discard-duplicates": {
"requires": {
"source-map": {
"dependencies": {
"postcss-discard-empty": {
"dependencies": {
"source-map": {
"requires": {
"postcss-discard-overridden": {
"requires": {
"source-map": {
"dependencies": {
"postcss-env-function": {
"requires": {
"source-map": {
"postcss-flexbugs-fixes": {
"dependencies": {
"source-map": {
"requires": {
"dependencies": {
"postcss-focus-visible": {
"requires": {
"source-map": {
"postcss-focus-within": {
"requires": {
"source-map": {
"postcss-font-variant": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-gap-properties": {
"requires": {
"dependencies": {
"postcss-image-set-function": {
"dependencies": {
"source-map": {
"source-map": {
"dependencies": {
"postcss-initial": {
"requires": {
"postcss-lab-function": {
"@csstools/convert-colors": "^1.4.0",
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"cosmiconfig": {
"dependencies": {
"postcss-load-config": {
"requires": {
"requires": {
"postcss-loader": {
"dependencies": {
"source-map": {
"requires": {
"postcss-logical": {
"requires": {
"dependencies": {
"postcss-media-minmax": {
"source-map": {
"requires": {
"dependencies": {
"postcss-merge-longhand": {
"source-map": {
"dependencies": {
"postcss-merge-rules": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"postcss-selector-parser": {
"source-map": {
"requires": {
"dependencies": {
"postcss-minify-font-values": {
"source-map": {
"requires": {
"postcss-minify-gradients": {
"requires": {
"dependencies": {
"source-map": {
"postcss-minify-params": {
"dependencies": {
"requires": {
"postcss-minify-selectors": {
"requires": {
"source-map": {
"postcss-selector-parser": {
"dependencies": {
"postcss-modules-extract-imports": {
"source-map": {
"postcss-modules-local-by-default": {
"postcss-modules-scope": {
"requires": {
"postcss-nesting": {
"postcss-modules-values": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-charset": {
"requires": {
"dependencies": {
"postcss-normalize-display-values": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-positions": {
"requires": {
"source-map": {
"dependencies": {
"source-map": {
"postcss-normalize-repeat-style": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-string": {
"postcss-normalize-timing-functions": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-normalize-unicode": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-url": {
"requires": {
"postcss-normalize-whitespace": {
"dependencies": {
"postcss-ordered-values": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-overflow-shorthand": {
"source-map": {
"dependencies": {
"postcss-page-break": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"postcss-place": {
"dependencies": {
"requires": {
"source-map": {
"postcss-preset-env": {
"dependencies": {
"source-map": {
"postcss-pseudo-class-any-link": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"postcss-reduce-initial": {
"requires": {
"dependencies": {
"source-map": {
"postcss-reduce-transforms": {
"requires": {
"dependencies": {
"dependencies": {
"postcss-replace-overflow-wrap": {
"source-map": {
"source-map": {
"requires": {
"postcss-safe-parser": {
"dependencies": {
"source-map": {
"requires": {
"postcss-selector-matches": {
"dependencies": {
"postcss-selector-not": {
"requires": {
"source-map": {
"dependencies": {
"postcss-selector-parser": {
"requires": {
"dependencies": {
"source-map": {
"postcss-svgo": {
"requires": {
"dependencies": {
"postcss-unique-selectors": {
"requires": {
"source-map": {
"dependencies": {
"postcss-value-parser": {
"source-map": {
"postcss-values-parser": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"pretty-bytes": {
"pretty-error": {
"pretty-format": {
"ansi-regex": {
"process-nextick-args": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"promise-inflight": {
"dependencies": {
"public-encrypt": {
"dependencies": {
"querystring-es3": {
"requires": {
"querystringify": {
"dependencies": {
"is-number": {
"range-parser": {
"iconv-lite": {
"dependencies": {
"react-app-polyfill": {
"dependencies": {
"requires": {
"requires": {
"react-dev-utils": {
"@babel/code-frame": "7.0.0",
"dependencies": {
"ansi-regex": {
"browserslist": {
"requires": {
"requires": {
"requires": {
"locate-path": {
"requires": {
"p-locate": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"requires": {
"strip-ansi": {
"requires": {
"react-error-overlay": {
"@babel/runtime": "7.0.0",
"react-event-listener": {
"@babel/runtime": {
"requires": {
"dependencies": {
"react-lifecycles-compat": {
"requires": {
"react-scripts": {
"@svgr/webpack": "2.4.1",
"@babel/core": "7.1.0",
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"dependencies": {
"react-transition-group": {
"path-exists": {
"requires": {
"requires": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"readable-stream": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"arr-diff": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"requires": {
"dependencies": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"realpath-native": {
"requires": {
"@babel/runtime": "^7.0.0",
"regenerate-unicode-properties": {
"regenerator-runtime": {
"recursive-readdir": {
"regenerator-transform": {
"dependencies": {
"regexpu-core": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"remove-trailing-separator": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"css-select": {
"dependencies": {
"requires": {
"domutils": {
"requires": {
"repeat-string": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"repeat-element": {
"request-promise-core": {
"request-promise-native": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"require-directory": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-uncached": {
"require-from-string": {
"require-main-filename": {
"requires-port": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"resolve-from": {
"dependencies": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"resolve-from": {
"restore-cursor": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"safer-buffer": {
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"arr-diff": {
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"dependencies": {
"camelcase": {
"@babel/generator": "^7.0.0",
"@babel/code-frame": "^7.0.0",
"@babel/code-frame": {
"@babel/highlight": "^7.0.0"
"@babel/helpers": "^7.1.0",
"@babel/parser": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-annotate-as-pure": {
"@babel/types": "^7.1.6",
"@babel/types": "^7.0.0"
"@babel/generator": {
"@babel/types": "^7.0.0"
"@babel/helper-builder-react-jsx": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/types": "^7.0.0",
"@babel/helper-call-delegate": {
"@babel/traverse": "^7.1.0",
"@babel/helper-define-map": {
"@babel/helper-function-name": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-explode-assignable-expression": {
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/helper-function-name": {
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/helper-hoist-variables": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-member-expression-to-functions": {
"@babel/helper-module-imports": {
"@babel/helper-module-transforms": {
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/types": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-plugin-utils": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-regex": {
"@babel/helper-optimise-call-expression": {
"@babel/helper-wrap-function": "^7.1.0",
"@babel/helper-remap-async-to-generator": {
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-replace-supers": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-simple-access": {
"@babel/template": "^7.1.0",
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-wrap-function": {
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helpers": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.1.5"
"@babel/template": "^7.1.2",
"@babel/parser": {
"@babel/traverse": "^7.1.5",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/highlight": {
"@babel/plugin-proposal-async-generator-functions": {
"@babel/plugin-proposal-class-properties": {
"@babel/plugin-syntax-async-generators": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-decorators": {
"@babel/plugin-proposal-json-strings": {
"@babel/plugin-syntax-decorators": "^7.1.0"
"@babel/plugin-syntax-json-strings": "^7.0.0"
"@babel/plugin-proposal-object-rest-spread": {
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/plugin-syntax-object-rest-spread": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-async-generators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-class-properties": {
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/plugin-transform-async-to-generator": {
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/plugin-transform-block-scoped-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoping": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-transform-classes": {
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-transform-destructuring": {
"@babel/plugin-transform-computed-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-transform-exponentiation-operator": {
"@babel/plugin-transform-flow-strip-types": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-function-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-literals": {
"@babel/plugin-transform-modules-amd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-simple-access": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-umd": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-new-target": {
"@babel/plugin-transform-object-super": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-parameters": {
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/plugin-transform-react-constant-elements": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-react-display-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-builder-react-jsx": "^7.0.0",
"@babel/plugin-transform-react-jsx": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-jsx-self": {
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-source": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-regenerator": {
"@babel/plugin-transform-runtime": {
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-regex": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-typescript": {
"@babel/plugin-syntax-typescript": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/preset-env": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-proposal-json-strings": "^7.0.0",
"@babel/plugin-syntax-async-generators": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoping": "^7.1.5",
"@babel/plugin-transform-destructuring": "^7.0.0",
"@babel/plugin-transform-dotall-regex": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-duplicate-keys": "^7.0.0",
"@babel/plugin-transform-function-name": "^7.1.0",
"@babel/plugin-transform-modules-umd": "^7.1.0",
"@babel/plugin-transform-modules-amd": "^7.1.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-object-super": "^7.1.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-sticky-regex": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.0.0",
"@babel/preset-react": {
"@babel/plugin-transform-typeof-symbol": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/preset-typescript": {
"@babel/plugin-transform-typescript": "^7.1.0"
"@babel/runtime": {
"dependencies": {
"@babel/template": {
"regenerator-runtime": {
"@babel/parser": "^7.1.2",
"@babel/code-frame": "^7.0.0",
"@babel/types": "^7.1.2"
"@babel/code-frame": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/traverse": {
"@babel/generator": "^7.1.6",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/types": "^7.1.6",
"dependencies": {
"@babel/parser": "^7.1.6",
"requires": {
"@babel/types": {
"@csstools/convert-colors": {
"@mrmlnc/readdir-enhanced": {
"@svgr/webpack": {
"@nodelib/fs.stat": {
"@babel/preset-env": "^7.0.0",
"@babel/preset-react": "^7.0.0",
"@svgr/core": "^2.4.1",
"@types/tapable": {
"@webassemblyjs/ast": {
"@babel/core": "^7.0.1",
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6"
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": {
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/leb128": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/utf8": {
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-parser": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-fsm": "1.7.6",
"@webassemblyjs/helper-code-frame": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-parser": "1.7.6",
"@xtuc/long": "4.2.1",
"@webassemblyjs/wast-printer": {
"@xtuc/long": "4.2.1"
"acorn-dynamic-import": {
"dependencies": {
"@xtuc/ieee754": {
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk="
"alphanum-sort": {
"acorn-globals": {
"ajv-keywords": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"ansi-escapes": {
"dependencies": {
"array-unique": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"extend-shallow": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"append-transform": {
"requires": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"micromatch": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-flatten": {
"array-filter": {
"array-includes": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-reduce": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"inherits": {
"array-unique": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"requires": {
"astral-regex": {
"ast-types-flow": {
"async-limiter": {
"assign-symbols": {
"dependencies": {
"requires": {
"source-map": {
"axobject-query": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"babel-code-frame": {
"ansi-styles": {
"dependencies": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"autoprefixer": {
"requires": {
"js-tokens": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"@babel/parser": "^7.0.0",
"supports-color": {
"@babel/code-frame": "^7.0.0",
"babel-eslint": {
"@babel/traverse": "^7.0.0",
"babel-extract-comments": {
"babel-helpers": {
"dependencies": {
"babel-messages": {
"babel-generator": {
"babel-plugin-dynamic-import-node": {
"babel-loader": {
"babel-plugin-macros": {
"@babel/types": "^7.0.0",
"babel-plugin-istanbul": {
"babel-plugin-named-asset-import": {
"babel-plugin-syntax-object-rest-spread": {
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-jest-hoist": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-react-remove-prop-types": {
"babel-preset-jest": {
"babel-preset-react-app": {
"@babel/plugin-proposal-class-properties": "7.1.0",
"@babel/core": "7.1.0",
"@babel/plugin-proposal-decorators": "7.1.2",
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/plugin-transform-classes": "7.1.0",
"@babel/plugin-transform-destructuring": "7.0.0",
"@babel/preset-env": "7.1.0",
"@babel/preset-typescript": "7.1.0",
"@babel/plugin-transform-runtime": "7.1.0",
"dependencies": {
"@babel/preset-react": "7.0.0",
"@babel/plugin-transform-destructuring": {
"@babel/runtime": "7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"requires": {
"@babel/preset-env": {
"@babel/helper-module-imports": "^7.0.0",
"requires": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"babel-register": {
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"babel-core": {
"dependencies": {
"babel-runtime": {
"requires": {
"babel-template": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"babel-traverse": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"dependencies": {
"dependencies": {
"requires": {
"to-fast-properties": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"balanced-match": {
"define-property": {
"dependencies": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"bcrypt-pbkdf": {
"requires": {
"binary-extensions": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"dependencies": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"requires": {
"iconv-lite": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"requires": {
"browser-process-hrtime": {
"browserify-aes": {
"brace-expansion": {
"browser-resolve": {
"browserify-sign": {
"dependencies": {
"browserify-rsa": {
"browserify-des": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-zlib": {
"builtin-status-codes": {
"browserify-cipher": {
"buffer-indexof": {
"builtin-modules": {
"browserslist": {
"caller-callsite": {
"call-me-maybe": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"dependencies": {
"case-sensitive-paths-webpack-plugin": {
"capture-exit": {
"caniuse-lite": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"extend-shallow": {
"dependencies": {
"requires": {
"fill-range": {
"glob-parent": {
"requires": {
"requires": {
"dependencies": {
"is-extglob": {
"requires": {
"is-glob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"chrome-trace-event": {
"dependencies": {
"define-property": {
"requires": {
"circular-json": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"source-map": {
"dependencies": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"ansi-regex": {
"requires": {
"dependencies": {
"strip-ansi": {
"code-point-at": {
"collection-visit": {
"color-convert": {
"color-string": {
"component-emitter": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"requires": {
"combined-stream": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"dependencies": {
"concat-stream": {
"requires": {
"compressible": {
"connect-history-api-fallback": {
"console-browserify": {
"confusing-browser-globals": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"content-disposition": {
"constants-browserify": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"content-type": {
"contains-path": {
"cookie-signature": {
"convert-source-map": {
"copy-descriptor": {
"copy-concurrently": {
"crypto-browserify": {
"core-util-is": {
"css-color-names": {
"css-declaration-sorter": {
"dependencies": {
"source-map": {
"dependencies": {
"css-select-base-adapter": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"css-selector-tokenizer": {
"requires": {
"regjsgen": {
"regexpu-core": {
"regjsparser": {
"requires": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"css-unit-converter": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"css-url-regex": {
"dependencies": {
"requires": {
"cssnano-preset-default": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"cssnano-util-get-arguments": {
"cssnano-util-get-match": {
"cssnano-util-raw-cache": {
"requires": {
"css-tree": {
"source-map": {
"dependencies": {
"cssnano-util-same-parent": {
"damerau-levenshtein": {
"requires": {
"dependencies": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"decode-uri-component": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"default-gateway": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"requires": {
"default-require-extensions": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"define-property": {
"dependencies": {
"define-properties": {
"is-accessor-descriptor": {
"dependencies": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"requires": {
"dependencies": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"pify": {
"dependencies": {
"detect-indent": {
"detect-newline": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"detect-port-alt": {
"delayed-stream": {
"requires": {
"dependencies": {
"path-type": {
"diffie-hellman": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"dom-serializer": {
"requires": {
"dom-converter": {
"domelementtype": {
"domain-browser": {
"domexception": {
"domelementtype": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"dotenv-expand": {
"dependencies": {
"enhanced-resolve": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"electron-to-chromium": {
"escape-string-regexp": {
"end-of-stream": {
"es-to-primitive": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"dependencies": {
"@babel/code-frame": "^7.0.0",
"dependencies": {
"ansi-regex": {
"eslint-scope": {
"source-map": {
"strip-ansi": {
"requires": {
"eslint-import-resolver-node": {
"dependencies": {
"requires": {
"eslint-config-react-app": {
"requires": {
"eslint-loader": {
"eslint-module-utils": {
"dependencies": {
"requires": {
"path-exists": {
"requires": {
"requires": {
"eslint-plugin-import": {
"eslint-plugin-flowtype": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"dependencies": {
"load-json-file": {
"doctrine": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"requires": {
"requires": {
"requires": {
"parse-json": {
"path-type": {
"read-pkg-up": {
"requires": {
"requires": {
"requires": {
"read-pkg": {
"strip-bom": {
"eslint-plugin-jsx-a11y": {
"requires": {
"eslint-plugin-react": {
"eslint-visitor-keys": {
"eslint-utils": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"eslint-scope": {
"eventemitter3": {
"evp_bytestokey": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"cross-spawn": {
"dependencies": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"expand-range": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"requires": {
"expand-brackets": {
"expand-tilde": {
"dependencies": {
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"extend-shallow": {
"array-flatten": {
"is-extendable": {
"requires": {
"dependencies": {
"external-editor": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"requires": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"@mrmlnc/readdir-enhanced": "^2.2.1",
"fast-deep-equal": {
"@nodelib/fs.stat": "^1.1.2",
"arr-diff": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"define-property": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"glob-parent": {
"requires": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"is-glob": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-extglob": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"fast-json-stable-stringify": {
"requires": {
"fast-levenshtein": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"file-entry-cache": {
"figgy-pudding": {
"faye-websocket": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"filename-regex": {
"requires": {
"isobject": {
"dependencies": {
"finalhandler": {
"requires": {
"flush-write-stream": {
"dependencies": {
"follow-redirects": {
"fork-ts-checker-webpack-plugin-alt": {
"requires": {
"find-cache-dir": {
"dependencies": {
"forever-agent": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"requires": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"arr-diff": {
"extend-shallow": {
"dependencies": {
"array-unique": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"kind-of": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"extend-shallow": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-number": {
"kind-of": {
"requires": {
"micromatch": {
"fragment-cache": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"requires": {
"fs-write-stream-atomic": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"are-we-there-yet": {
"dependencies": {
"ansi-regex": {
"brace-expansion": {
"requires": {
"balanced-match": {
"code-point-at": {
"requires": {
"core-util-is": {
"console-control-strings": {
"deep-extend": {
"concat-map": {
"detect-libc": {
"delegates": {
"fs-minipass": {
"requires": {
"fs.realpath": {
"requires": {
"requires": {
"has-unicode": {
"iconv-lite": {
"requires": {
"ignore-walk": {
"requires": {
"requires": {
"requires": {
"inflight": {
"requires": {
"is-fullwidth-code-point": {
"inherits": {
"minimatch": {
"minipass": {
"minimist": {
"requires": {
"requires": {
"minizlib": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"npm-bundled": {
"requires": {
"number-is-nan": {
"requires": {
"requires": {
"npm-packlist": {
"object-assign": {
"requires": {
"requires": {
"os-homedir": {
"os-tmpdir": {
"requires": {
"path-is-absolute": {
"process-nextick-args": {
"requires": {
"readable-stream": {
"safer-buffer": {
"dependencies": {
"minimist": {
"requires": {
"requires": {
"safe-buffer": {
"string-width": {
"requires": {
"set-blocking": {
"signal-exit": {
"string_decoder": {
"strip-json-comments": {
"requires": {
"strip-ansi": {
"requires": {
"requires": {
"util-deprecate": {
"requires": {
"wide-align": {
"functional-red-black-tree": {
"get-own-enumerable-property-symbols": {
"global-prefix": {
"get-caller-file": {
"global-modules": {
"glob-to-regexp": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"function-bind": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-traverse": {
"h2x-generate": {
"h2x-plugin-jsx": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"handle-thing": {
"dependencies": {
"har-validator": {
"source-map": {
"harmony-reflect": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"is-number": {
"dependencies": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"hex-color-regex": {
"homedir-polyfill": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"hosted-git-info": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"html-comment-regex": {
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"html-encoding-sniffer": {
"html-entities": {
"html-minifier": {
"dependencies": {
"html-webpack-plugin": {
"dependencies": {
"requires": {
"commander": {
"@types/tapable": "1.0.2",
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"requires": {
"readable-stream": {
"domutils": {
"string_decoder": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-parser-js": {
"http-proxy-middleware": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"http-deceiver": {
"array-unique": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"dependencies": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"define-property": {
"extend-shallow": {
"dependencies": {
"requires": {
"requires": {
"fill-range": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"is-accessor-descriptor": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"kind-of": {
"dependencies": {
"is-number": {
"requires": {
"micromatch": {
"http-signature": {
"requires": {
"requires": {
"https-browserify": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"identity-obj-proxy": {
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"icss-replace-symbols": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"import-fresh": {
"import-local": {
"dependencies": {
"ansi-regex": {
"strip-ansi": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"is-absolute-url": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"is-accessor-descriptor": {
"is-binary-path": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-builtin-module": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-data-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-descriptor": {
"is-color-stop": {
"is-date-object": {
"dependencies": {
"is-extendable": {
"is-directory": {
"is-equal-shallow": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-fullwidth-code-point": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-generator-fn": {
"is-path-in-cwd": {
"is-path-inside": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-plain-object": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-posix-bracket": {
"is-primitive": {
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"is-typedarray": {
"is-resolvable": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"istanbul-api": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"istanbul-lib-coverage": {
"istanbul-lib-report": {
"dependencies": {
"istanbul-lib-instrument": {
"istanbul-lib-source-maps": {
"requires": {
"istanbul-lib-hook": {
"supports-color": {
"has-flag": {
"jest-cli": {
"dependencies": {
"istanbul-reports": {
"ansi-regex": {
"jest-changed-files": {
"requires": {
"strip-ansi": {
"babel-core": {
"requires": {
"dependencies": {
"requires": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"jest-docblock": {
"requires": {
"jest-environment-jsdom": {
"dependencies": {
"requires": {
"whatwg-url": {
"requires": {
"jest-environment-node": {
"requires": {
"jest-get-type": {
"jest-haste-map": {
"jest-leak-detector": {
"jest-matcher-utils": {
"jest-jasmine2": {
"jest-message-util": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-regex-util": {
"jest-pnp-resolver": {
"jest-resolve-dependencies": {
"jest-resolve": {
"dependencies": {
"source-map": {
"source-map-support": {
"requires": {
"jest-runtime": {
"requires": {
"dependencies": {
"requires": {
"babel-core": {
"jest-serializer": {
"jest-snapshot": {
"dependencies": {
"source-map": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"jest-validate": {
"strip-bom": {
"jest-watcher": {
"js-levenshtein": {
"json-parse-better-errors": {
"json-stable-stringify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-stringify-safe": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"json-schema-traverse": {
"json-stable-stringify-without-jsonify": {
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"jsx-ast-utils": {
"dependencies": {
"last-call-webpack-plugin": {
"requires": {
"load-json-file": {
"loader-fs-cache": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"parse-json": {
"dependencies": {
"find-cache-dir": {
"requires": {
"path-exists": {
"requires": {
"requires": {
"requires": {
"loader-runner": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"loader-utils": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"lodash.camelcase": {
"lodash._reinterpolate": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"lodash.memoize": {
"lodash.debounce": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.template": {
"lodash.templatesettings": {
"loose-envify": {
"lodash.sortby": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"map-age-cleaner": {
"merge-descriptors": {
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-stream": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"miller-rabin": {
"minimalistic-assert": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"minimalistic-crypto-utils": {
"dependencies": {
"is-extendable": {
"requires": {
"mixin-object": {
"move-concurrently": {
"mini-css-extract-plugin": {
"dependencies": {
"multicast-dns-service-types": {
"dependencies": {
"multicast-dns": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"natural-compare": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"punycode": {
"dependencies": {
"node-libs-browser": {
"normalize-package-data": {
"node-releases": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-range": {
"normalize-url": {
"normalize-path": {
"node-notifier": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"npm-run-path": {
"number-is-nan": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"define-property": {
"requires": {
"num2fraction": {
"object-visit": {
"object.getownpropertydescriptors": {
"dependencies": {
"object.assign": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"object.values": {
"integrity": "sha1-5STaCbT2b/Bd9FdUbscqyZ8TBpo=",
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"optimize-css-assets-webpack-plugin": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"wordwrap": {
"dependencies": {
"os-browserify": {
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"parallel-transform": {
"p-is-promise": {
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"parse-passwd": {
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"path-browserify": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"path-is-inside": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"path-dirname": {
"path-is-absolute": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"performance-now": {
"pinkie-promise": {
"pnp-webpack-plugin": {
"path-to-regexp": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"dependencies": {
"posix-character-classes": {
"dependencies": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"postcss-attribute-case-insensitive": {
"requires": {
"source-map": {
"requires": {
"dependencies": {
"dependencies": {
"source-map": {
"postcss-calc": {
"requires": {
"source-map": {
"postcss-color-functional-notation": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-color-hex-alpha": {
"requires": {
"requires": {
"source-map": {
"postcss-color-mod-function": {
"@csstools/convert-colors": "^1.4.0",
"postcss-color-rebeccapurple": {
"requires": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-colormin": {
"requires": {
"dependencies": {
"postcss-convert-values": {
"source-map": {
"requires": {
"dependencies": {
"source-map": {
"postcss-custom-media": {
"postcss-custom-properties": {
"source-map": {
"requires": {
"source-map": {
"postcss-custom-selectors": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"postcss-dir-pseudo-class": {
"dependencies": {
"source-map": {
"postcss-discard-comments": {
"dependencies": {
"requires": {
"requires": {
"postcss-discard-duplicates": {
"dependencies": {
"dependencies": {
"source-map": {
"postcss-discard-empty": {
"source-map": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"postcss-discard-overridden": {
"dependencies": {
"requires": {
"source-map": {
"postcss-env-function": {
"requires": {
"postcss-flexbugs-fixes": {
"dependencies": {
"source-map": {
"dependencies": {
"dependencies": {
"requires": {
"postcss-focus-visible": {
"requires": {
"source-map": {
"source-map": {
"dependencies": {
"postcss-focus-within": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"postcss-font-variant": {
"postcss-gap-properties": {
"source-map": {
"dependencies": {
"postcss-image-set-function": {
"source-map": {
"dependencies": {
"source-map": {
"postcss-initial": {
"requires": {
"requires": {
"source-map": {
"dependencies": {
"postcss-lab-function": {
"@csstools/convert-colors": "^1.4.0",
"requires": {
"dependencies": {
"postcss-load-config": {
"source-map": {
"requires": {
"postcss-loader": {
"cosmiconfig": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"postcss-media-minmax": {
"postcss-logical": {
"dependencies": {
"requires": {
"source-map": {
"postcss-merge-longhand": {
"dependencies": {
"requires": {
"source-map": {
"postcss-merge-rules": {
"source-map": {
"dependencies": {
"postcss-selector-parser": {
"requires": {
"dependencies": {
"postcss-minify-font-values": {
"requires": {
"source-map": {
"dependencies": {
"source-map": {
"postcss-minify-gradients": {
"requires": {
"postcss-minify-params": {
"source-map": {
"requires": {
"requires": {
"dependencies": {
"postcss-minify-selectors": {
"requires": {
"source-map": {
"dependencies": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"postcss-modules-local-by-default": {
"postcss-modules-values": {
"postcss-modules-extract-imports": {
"postcss-modules-scope": {
"postcss-nesting": {
"dependencies": {
"requires": {
"source-map": {
"postcss-normalize-charset": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-normalize-display-values": {
"source-map": {
"postcss-normalize-positions": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-repeat-style": {
"requires": {
"dependencies": {
"requires": {
"postcss-normalize-string": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-timing-functions": {
"source-map": {
"postcss-normalize-unicode": {
"requires": {
"source-map": {
"source-map": {
"dependencies": {
"postcss-normalize-url": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"postcss-normalize-whitespace": {
"source-map": {
"postcss-ordered-values": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"dependencies": {
"postcss-overflow-shorthand": {
"requires": {
"source-map": {
"postcss-page-break": {
"postcss-place": {
"dependencies": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-preset-env": {
"dependencies": {
"source-map": {
"source-map": {
"postcss-pseudo-class-any-link": {
"requires": {
"dependencies": {
"postcss-reduce-initial": {
"source-map": {
"requires": {
"postcss-reduce-transforms": {
"dependencies": {
"requires": {
"source-map": {
"postcss-replace-overflow-wrap": {
"source-map": {
"dependencies": {
"postcss-safe-parser": {
"requires": {
"dependencies": {
"dependencies": {
"postcss-selector-matches": {
"dependencies": {
"source-map": {
"requires": {
"requires": {
"dependencies": {
"postcss-selector-not": {
"postcss-selector-parser": {
"source-map": {
"dependencies": {
"requires": {
"postcss-svgo": {
"source-map": {
"dependencies": {
"postcss-unique-selectors": {
"requires": {
"source-map": {
"dependencies": {
"source-map": {
"requires": {
"pretty-error": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"postcss-values-parser": {
"postcss-value-parser": {
"dependencies": {
"pretty-bytes": {
"process-nextick-args": {
"ansi-regex": {
"dependencies": {
"pretty-format": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"public-encrypt": {
"promise-inflight": {
"requires": {
"dependencies": {
"is-number": {
"querystring-es3": {
"querystringify": {
"iconv-lite": {
"range-parser": {
"requires": {
"dependencies": {
"react-dev-utils": {
"react-app-polyfill": {
"@babel/code-frame": "7.0.0",
"ansi-regex": {
"dependencies": {
"locate-path": {
"browserslist": {
"requires": {
"requires": {
"requires": {
"requires": {
"requires": {
"strip-ansi": {
"react-scripts": {
"react-error-overlay": {
"@babel/core": "7.1.0",
"@svgr/webpack": "2.4.1",
"p-locate": {
"requires": {
"dependencies": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"requires": {
"dependencies": {
"readable-stream": {
"requires": {
"requires": {
"path-exists": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"arr-diff": {
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"extend-shallow": {
"define-property": {
"requires": {
"fill-range": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"is-number": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"micromatch": {
"requires": {
"requires": {
"recursive-readdir": {
"regenerate-unicode-properties": {
"regenerator-transform": {
"realpath-native": {
"regenerator-runtime": {
"regexpu-core": {
"dependencies": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"remove-trailing-separator": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"requires": {
"css-select": {
"dependencies": {
"domutils": {
"repeat-string": {
"repeat-element": {
"requires": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"dependencies": {
"punycode": {
"tough-cookie": {
"requires": {
"request-promise-core": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"request-promise-native": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-directory": {
"require-from-string": {
"require-uncached": {
"require-main-filename": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"caller-path": {
"requires": {
"callsites": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"dependencies": {
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"resolve-from": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"resolve-from": {
"requires-port": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"safer-buffer": {
"restore-cursor": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"dependencies": {
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"arr-diff": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"extend-shallow": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"define-property": {
"expand-brackets": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"dependencies": {
"kind-of": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"kind-of": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"micromatch": {
"dependencies": {
"requires": {
"clone-deep": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"dependencies": {
"minimist": {
"requires": {
"shallow-clone": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"schema-utils": {
"serialize-javascript": {
"requires": {
"kind-of": {
"requires": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"requires": {
"dependencies": {
"serve-static": {
"dependencies": {
"extend-shallow": {
"set-blocking": {
"requires": {
"shallow-clone": {
"setprototypeof": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"lazy-cache": {
"setimmediate": {
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"requires": {
"dependencies": {
"shebang-regex": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"shebang-command": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"simple-swizzle": {
"requires": {
"dependencies": {
"is-arrayish": {
"extend-shallow": {
"requires": {
"define-property": {
"requires": {
"snapdragon-node": {
"define-property": {
"requires": {
"dependencies": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"dependencies": {
"requires": {
"snapdragon-util": {
"dependencies": {
"requires": {
"sockjs-client": {
"faye-websocket": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"requires": {
"source-map-resolve": {
"source-list-map": {
"requires": {
"dependencies": {
"spdx-exceptions": {
"source-map-support": {
"source-map-url": {
"spdx-license-ids": {
"spdx-expression-parse": {
"spdx-correct": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"spdy-transport": {
"dependencies": {
"dependencies": {
"requires": {
"requires": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"requires": {
"split-string": {
"stealthy-require": {
"define-property": {
"dependencies": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"string-length": {
"stream-browserify": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"ansi-regex": {
"dependencies": {
"strip-ansi": {
"string-width": {
"ansi-regex": {
"stream-shift": {
"dependencies": {
"requires": {
"strip-ansi": {
"string_decoder": {
"requires": {
"stringify-object": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"strip-comments": {
"strip-json-comments": {
"dependencies": {
"schema-utils": {
"requires": {
"dependencies": {
"style-loader": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"supports-color": {
"dependencies": {
"commander": {
"requires": {
"source-map": {
"terser-webpack-plugin": {
"requires": {
"source-map-support": {
"requires": {
"find-cache-dir": {
"requires": {
"dependencies": {
"locate-path": {
"requires": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"test-exclude": {
"source-map": {
"timers-browserify": {
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"to-arraybuffer": {
"to-fast-properties": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"to-object-path": {
"dependencies": {
"to-regex-range": {
"tough-cookie": {
"requires": {
"is-number": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"tty-browserify": {
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"commander": {
"source-map": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"tunnel-agent": {
"uglifyjs-webpack-plugin": {
"dependencies": {
"requires": {
"dependencies": {
"commander": {
"mississippi": {
"schema-utils": {
"requires": {
"requires": {
"requires": {
"source-map": {
"requires": {
"requires": {
"unicode-match-property-ecmascript": {
"unicode-property-aliases-ecmascript": {
"uglify-es": {
"unicode-canonical-property-names-ecmascript": {
"extend-shallow": {
"unicode-match-property-value-ecmascript": {
"requires": {
"set-value": {
"requires": {
"dependencies": {
"unique-filename": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"dependencies": {
"universalify": {
"dependencies": {
"isobject": {
"has-value": {
"requires": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"has-values": {
"dependencies": {
"util-deprecate": {
"punycode": {
"util.promisify": {
"validate-npm-package-license": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"w3c-xmlserializer": {
"vm-browserify": {
"requires": {
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"minimist": {
"dependencies": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"webidl-conversions": {
"@webassemblyjs/wasm-edit": "1.7.6",
"dependencies": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"arr-diff": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"eslint-scope": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"requires": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"kind-of": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"dependencies": {
"fill-range": {
"extend-shallow": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-accessor-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"requires": {
"dependencies": {
"micromatch": {
"kind-of": {
"requires": {
"requires": {
"schema-utils": {
"webpack-dev-middleware": {
"requires": {
"webpack-dev-server": {
"requires": {
"camelcase": {
"requires": {
"decamelize": {
"dependencies": {
"requires": {
"requires": {
"import-local": {
"requires": {
"invert-kv": {
"locate-path": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"requires": {
"requires": {
"yargs-parser": {
"webpack-manifest-plugin": {
"requires": {
"dependencies": {
"websocket-driver": {
"websocket-extensions": {
"source-map": {
"webpack-sources": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"whatwg-encoding": {
"whatwg-fetch": {
"whatwg-mimetype": {
"workbox-broadcast-cache-update": {
"workbox-build": {
"dependencies": {
"workbox-background-sync": {
"fs-extra": {
"which-module": {
"workbox-cache-expiration": {
"workbox-cacheable-response": {
"requires": {
"workbox-core": {
"workbox-google-analytics": {
"workbox-precaching": {
"workbox-navigation-preload": {
"workbox-strategies": {
"workbox-range-requests": {
"workbox-routing": {
"workbox-webpack-plugin": {
"workbox-streams": {
"requires": {
"dependencies": {
"is-fullwidth-code-point": {
"write-file-atomic": {
"string-width": {
"requires": {
"dependencies": {
"@babel/generator": "^7.0.0",
"@babel/highlight": "^7.0.0"
"@babel/code-frame": "^7.0.0",
"@babel/helpers": "^7.1.0",
"@babel/code-frame": {
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/parser": "^7.1.0",
"@babel/generator": {
"@babel/types": "^7.1.6",
"@babel/helper-annotate-as-pure": {
"@babel/types": "^7.0.0"
"@babel/helper-builder-react-jsx": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-call-delegate": {
"@babel/helper-function-name": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-define-map": {
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-function-name": {
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/helper-hoist-variables": {
"@babel/types": "^7.0.0"
"@babel/helper-member-expression-to-functions": {
"@babel/helper-module-transforms": {
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-optimise-call-expression": {
"@babel/types": "^7.0.0",
"@babel/helper-regex": {
"@babel/helper-remap-async-to-generator": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/helper-wrap-function": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/helper-plugin-utils": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-simple-access": {
"@babel/helper-split-export-declaration": {
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-wrap-function": {
"@babel/template": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helpers": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.2",
"@babel/types": "^7.1.5"
"@babel/traverse": "^7.1.5",
"@babel/highlight": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/parser": {
"@babel/plugin-proposal-async-generator-functions": {
"@babel/plugin-syntax-async-generators": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-class-properties": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-proposal-decorators": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-proposal-json-strings": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-syntax-decorators": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-json-strings": "^7.0.0"
"@babel/plugin-proposal-object-rest-spread": {
"@babel/plugin-syntax-object-rest-spread": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/plugin-syntax-async-generators": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-decorators": {
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/plugin-syntax-object-rest-spread": {
"@babel/plugin-syntax-typescript": {
"@babel/plugin-transform-arrow-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/plugin-transform-block-scoped-functions": {
"@babel/plugin-transform-block-scoping": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-classes": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-transform-computed-properties": {
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-destructuring": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-dotall-regex": {
"@babel/plugin-transform-duplicate-keys": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-exponentiation-operator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-flow-strip-types": {
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-for-of": {
"@babel/plugin-transform-function-name": {
"@babel/plugin-transform-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-amd": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-simple-access": "^7.1.0"
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-umd": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-object-super": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0"
"@babel/plugin-transform-parameters": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-new-target": {
"@babel/helper-call-delegate": "^7.1.0",
"@babel/plugin-transform-react-display-name": {
"@babel/plugin-transform-react-constant-elements": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-builder-react-jsx": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": {
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/plugin-transform-react-jsx-source": {
"@babel/plugin-transform-regenerator": {
"@babel/plugin-syntax-jsx": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-runtime": {
"@babel/plugin-transform-sticky-regex": {
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-regex": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/plugin-syntax-typescript": "^7.0.0"
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/preset-env": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-proposal-json-strings": "^7.0.0",
"@babel/plugin-syntax-async-generators": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoping": "^7.1.5",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-destructuring": "^7.0.0",
"@babel/plugin-transform-dotall-regex": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-function-name": "^7.1.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": "^7.0.0",
"@babel/plugin-transform-modules-amd": "^7.1.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-object-super": "^7.1.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-modules-umd": "^7.1.0",
"@babel/plugin-transform-sticky-regex": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"@babel/plugin-transform-typeof-symbol": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/preset-react": {
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/preset-typescript": {
"@babel/plugin-transform-typescript": "^7.1.0"
"@babel/runtime": {
"regenerator-runtime": {
"@babel/template": {
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.1.2",
"dependencies": {
"@babel/types": "^7.1.2"
"@babel/generator": "^7.1.6",
"@babel/code-frame": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/traverse": {
"@babel/parser": "^7.1.6",
"dependencies": {
"@babel/types": "^7.1.6",
"requires": {
"@babel/types": {
"@csstools/convert-colors": {
"@types/jss": "^9.5.6",
"@material-ui/core": {
"@babel/runtime": "7.1.2",
"@material-ui/utils": "^3.0.0-alpha.0",
"@types/react-transition-group": "^2.0.8",
"dependencies": {
"@babel/runtime": {
"requires": {
"hoist-non-react-statics": {
"requires": {
"@babel/runtime": "7.0.0",
"regenerator-runtime": {
"@material-ui/icons": {
"recompose": {
"dependencies": {
"@babel/runtime": "^7.0.0",
"@material-ui/utils": {
"dependencies": {
"@babel/runtime": "7.1.2"
"requires": {
"@babel/runtime": {
"regenerator-runtime": {
"requires": {
"@mrmlnc/readdir-enhanced": {
"@nodelib/fs.stat": {
"@svgr/webpack": {
"@babel/core": "^7.0.1",
"@babel/preset-env": "^7.0.0",
"@types/prop-types": {
"@babel/preset-react": "^7.0.0",
"@types/react": {
"@svgr/core": "^2.4.1",
"@types/react-transition-group": {
"@types/tapable": {
"@types/prop-types": "*",
"@types/react": "*"
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ast": {
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6"
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/ieee754": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/leb128": {
"@webassemblyjs/utf8": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/wast-parser": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-code-frame": "1.7.6",
"@xtuc/long": "4.2.1",
"@webassemblyjs/helper-fsm": "1.7.6",
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-printer": {
"acorn-dynamic-import": {
"@xtuc/long": "4.2.1"
"acorn-globals": {
"@xtuc/ieee754": {
"integrity": "sha1-7PAh+hCP0X37Xms4Py3SM+Mf/Fk="
"ajv-keywords": {
"dependencies": {
"alphanum-sort": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"dependencies": {
"arr-diff": {
"ansi-escapes": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"array-unique": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"expand-brackets": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"append-transform": {
"requires": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-filter": {
"array-flatten": {
"array-includes": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"array-unique": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"array-reduce": {
"dependencies": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"requires": {
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"ast-types-flow": {
"autoprefixer": {
"async-limiter": {
"dependencies": {
"inherits": {
"astral-regex": {
"requires": {
"source-map": {
"axobject-query": {
"babel-code-frame": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"requires": {
"dependencies": {
"js-tokens": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"supports-color": {
"@babel/code-frame": "^7.0.0",
"babel-eslint": {
"@babel/traverse": "^7.0.0",
"ansi-styles": {
"@babel/parser": "^7.0.0",
"babel-extract-comments": {
"babel-generator": {
"@babel/types": "^7.0.0",
"dependencies": {
"babel-helpers": {
"babel-loader": {
"babel-plugin-dynamic-import-node": {
"babel-plugin-istanbul": {
"babel-plugin-macros": {
"babel-plugin-jest-hoist": {
"babel-plugin-named-asset-import": {
"babel-plugin-syntax-object-rest-spread": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-react-remove-prop-types": {
"babel-plugin-transform-object-rest-spread": {
"babel-messages": {
"babel-preset-react-app": {
"@babel/core": "7.1.0",
"@babel/plugin-proposal-class-properties": "7.1.0",
"@babel/plugin-transform-classes": "7.1.0",
"babel-preset-jest": {
"@babel/plugin-proposal-decorators": "7.1.2",
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/plugin-transform-destructuring": "7.0.0",
"@babel/plugin-transform-runtime": "7.1.0",
"@babel/preset-react": "7.0.0",
"@babel/preset-typescript": "7.1.0",
"dependencies": {
"@babel/preset-env": "7.1.0",
"@babel/plugin-transform-destructuring": {
"@babel/runtime": "7.0.0",
"@babel/preset-env": {
"@babel/helper-plugin-utils": "^7.0.0"
"requires": {
"requires": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"dependencies": {
"babel-register": {
"requires": {
"babel-core": {
"requires": {
"babel-runtime": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"babel-template": {
"dependencies": {
"requires": {
"babel-traverse": {
"dependencies": {
"to-fast-properties": {
"dependencies": {
"balanced-match": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"define-property": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"bcrypt-pbkdf": {
"requires": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"binary-extensions": {
"requires": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"iconv-lite": {
"dependencies": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"requires": {
"requires": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browser-resolve": {
"browser-process-hrtime": {
"dependencies": {
"brace-expansion": {
"browserify-cipher": {
"browserify-sign": {
"browserify-aes": {
"browserify-des": {
"browserify-rsa": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserslist": {
"browserify-zlib": {
"builtin-modules": {
"builtin-status-codes": {
"dependencies": {
"buffer-indexof": {
"caller-callsite": {
"caniuse-lite": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"call-me-maybe": {
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"capture-exit": {
"case-sensitive-paths-webpack-plugin": {
"integrity": "sha1-6LL+PX8at9aaMhma/5HqaTFAlRU="
"change-emitter": {
"dependencies": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"requires": {
"requires": {
"glob-parent": {
"dependencies": {
"is-glob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"is-number": {
"is-extglob": {
"chrome-trace-event": {
"requires": {
"circular-json": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"dependencies": {
"source-map": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"ansi-regex": {
"dependencies": {
"code-point-at": {
"strip-ansi": {
"collection-visit": {
"requires": {
"combined-stream": {
"color-string": {
"color-convert": {
"component-emitter": {
"compressible": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"dependencies": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"confusing-browser-globals": {
"concat-stream": {
"requires": {
"connect-history-api-fallback": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"contains-path": {
"content-type": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"content-disposition": {
"constants-browserify": {
"convert-source-map": {
"console-browserify": {
"cookie-signature": {
"copy-concurrently": {
"core-util-is": {
"copy-descriptor": {
"crypto-browserify": {
"css-declaration-sorter": {
"dependencies": {
"css-color-names": {
"css-selector-tokenizer": {
"source-map": {
"css-select-base-adapter": {
"requires": {
"dependencies": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"requires": {
"regexpu-core": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"requires": {
"regjsparser": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"regjsgen": {
"dependencies": {
"css-url-regex": {
"css-unit-converter": {
"source-map": {
"cssnano-preset-default": {
"requires": {
"dependencies": {
"cssnano-util-get-arguments": {
"source-map": {
"cssnano-util-get-match": {
"requires": {
"cssnano-util-raw-cache": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"cssnano-util-same-parent": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"css-tree": {
"requires": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"decode-uri-component": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"dependencies": {
"default-gateway": {
"default-require-extensions": {
"damerau-levenshtein": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"dependencies": {
"define-properties": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"define-property": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"dependencies": {
"requires": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"requires": {
"delayed-stream": {
"detect-indent": {
"pify": {
"detect-newline": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"detect-port-alt": {
"requires": {
"diffie-hellman": {
"requires": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"path-type": {
"dependencies": {
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"@babel/runtime": "^7.1.2"
"dependencies": {
"dom-converter": {
"@babel/runtime": {
"regenerator-runtime": {
"requires": {
"dom-serializer": {
"dependencies": {
"domelementtype": {
"domain-browser": {
"domelementtype": {
"domexception": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"dotenv-expand": {
"electron-to-chromium": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"enhanced-resolve": {
"email-addresses": {
"end-of-stream": {
"es-to-primitive": {
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"dependencies": {
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"@babel/code-frame": "^7.0.0",
"source-map": {
"dependencies": {
"ansi-regex": {
"eslint-scope": {
"requires": {
"strip-ansi": {
"requires": {
"eslint-config-react-app": {
"eslint-import-resolver-node": {
"requires": {
"eslint-loader": {
"eslint-module-utils": {
"dependencies": {
"requires": {
"dependencies": {
"path-exists": {
"requires": {
"requires": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"eslint-plugin-flowtype": {
"requires": {
"eslint-plugin-import": {
"requires": {
"dependencies": {
"doctrine": {
"load-json-file": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"parse-json": {
"requires": {
"requires": {
"path-type": {
"read-pkg": {
"requires": {
"requires": {
"read-pkg-up": {
"strip-bom": {
"eslint-plugin-jsx-a11y": {
"requires": {
"eslint-scope": {
"eslint-plugin-react": {
"eslint-visitor-keys": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"evp_bytestokey": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"eventemitter3": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"dependencies": {
"eslint-utils": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"cross-spawn": {
"expand-range": {
"requires": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"expand-tilde": {
"dependencies": {
"array-flatten": {
"requires": {
"extend-shallow": {
"dependencies": {
"is-extendable": {
"requires": {
"external-editor": {
"fast-deep-equal": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"@mrmlnc/readdir-enhanced": "^2.2.1",
"@nodelib/fs.stat": "^1.1.2",
"arr-diff": {
"expand-brackets": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"array-unique": {
"requires": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"expand-brackets": {
"requires": {
"extend-shallow": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"extend-shallow": {
"define-property": {
"dependencies": {
"requires": {
"fill-range": {
"requires": {
"glob-parent": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"is-glob": {
"requires": {
"requires": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"fast-json-stable-stringify": {
"fast-levenshtein": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"requires": {
"faye-websocket": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"dependencies": {
"integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="
"figgy-pudding": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"file-entry-cache": {
"filenamify-url": {
"integrity": "sha1-qfL/0RxQO+0wABUCknI3jx8TZaU=",
"requires": {
"filename-reserved-regex": {
"dependencies": {
"filename-regex": {
"requires": {
"finalhandler": {
"find-cache-dir": {
"isobject": {
"flush-write-stream": {
"dependencies": {
"follow-redirects": {
"dependencies": {
"requires": {
"fork-ts-checker-webpack-plugin-alt": {
"requires": {
"forever-agent": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"array-unique": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"expand-brackets": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"kind-of": {
"fill-range": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"requires": {
"micromatch": {
"requires": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"fragment-cache": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"dependencies": {
"fs-write-stream-atomic": {
"ansi-regex": {
"kind-of": {
"are-we-there-yet": {
"requires": {
"balanced-match": {
"brace-expansion": {
"requires": {
"code-point-at": {
"core-util-is": {
"requires": {
"concat-map": {
"deep-extend": {
"delegates": {
"detect-libc": {
"fs-minipass": {
"requires": {
"fs.realpath": {
"requires": {
"console-control-strings": {
"has-unicode": {
"requires": {
"iconv-lite": {
"ignore-walk": {
"requires": {
"inflight": {
"requires": {
"inherits": {
"requires": {
"is-fullwidth-code-point": {
"requires": {
"minimatch": {
"minipass": {
"minimist": {
"requires": {
"requires": {
"minizlib": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"requires": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"number-is-nan": {
"requires": {
"requires": {
"object-assign": {
"os-tmpdir": {
"os-homedir": {
"requires": {
"path-is-absolute": {
"requires": {
"process-nextick-args": {
"requires": {
"dependencies": {
"readable-stream": {
"requires": {
"requires": {
"safe-buffer": {
"safer-buffer": {
"signal-exit": {
"set-blocking": {
"string-width": {
"requires": {
"string_decoder": {
"requires": {
"strip-ansi": {
"strip-json-comments": {
"requires": {
"requires": {
"util-deprecate": {
"requires": {
"wide-align": {
"function-bind": {
"functional-red-black-tree": {
"minimist": {
"get-caller-file": {
"get-own-enumerable-property-symbols": {
"dependencies": {
"glob-to-regexp": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"requires": {
"global-modules": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"global-prefix": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-plugin-jsx": {
"h2x-generate": {
"h2x-traverse": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"handle-thing": {
"dependencies": {
"har-validator": {
"harmony-reflect": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"source-map": {
"dependencies": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"requires": {
"hex-color-regex": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"homedir-polyfill": {
"hoist-non-react-statics": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"hosted-git-info": {
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"html-entities": {
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"html-comment-regex": {
"html-encoding-sniffer": {
"commander": {
"html-minifier": {
"@types/tapable": "1.0.2",
"dependencies": {
"html-webpack-plugin": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"requires": {
"dependencies": {
"requires": {
"string_decoder": {
"domutils": {
"http-deceiver": {
"http-parser-js": {
"readable-stream": {
"http-proxy-middleware": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"arr-diff": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"array-unique": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"define-property": {
"dependencies": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"http-signature": {
"micromatch": {
"https-browserify": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"dependencies": {
"integrity": "sha1-9KuZ4NKIF0yk4eUEB8VfuuRk7/8=",
"humanize-url": {
"normalize-url": {
"requires": {
"icss-replace-symbols": {
"requires": {
"hyphenate-style-name": {
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"identity-obj-proxy": {
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"import-local": {
"indefinite-observable": {
"dependencies": {
"import-fresh": {
"symbol-observable": {
"strip-ansi": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"requires": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"is-absolute-url": {
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"is-accessor-descriptor": {
"dependencies": {
"is-binary-path": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"ansi-regex": {
"is-builtin-module": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"is-color-stop": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-date-object": {
"is-data-descriptor": {
"is-descriptor": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-equal-shallow": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"dependencies": {
"is-fullwidth-code-point": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-generator-fn": {
"is-extendable": {
"is-directory": {
"is-in-browser": {
"is-path-in-cwd": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-plain-object": {
"is-posix-bracket": {
"is-plain-obj": {
"is-path-inside": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-primitive": {
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"is-resolvable": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"is-typedarray": {
"isomorphic-fetch": {
"istanbul-lib-coverage": {
"istanbul-api": {
"istanbul-lib-hook": {
"istanbul-lib-instrument": {
"istanbul-lib-report": {
"has-flag": {
"supports-color": {
"requires": {
"dependencies": {
"istanbul-lib-source-maps": {
"istanbul-reports": {
"dependencies": {
"ansi-regex": {
"requires": {
"requires": {
"strip-ansi": {
"jest-changed-files": {
"jest-cli": {
"dependencies": {
"requires": {
"babel-core": {
"jest-docblock": {
"requires": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"dependencies": {
"jest-environment-jsdom": {
"whatwg-url": {
"requires": {
"requires": {
"requires": {
"jest-environment-node": {
"jest-jasmine2": {
"jest-get-type": {
"jest-haste-map": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-leak-detector": {
"jest-message-util": {
"jest-matcher-utils": {
"jest-regex-util": {
"jest-pnp-resolver": {
"jest-resolve-dependencies": {
"jest-resolve": {
"source-map-support": {
"dependencies": {
"source-map": {
"dependencies": {
"jest-runtime": {
"requires": {
"requires": {
"babel-core": {
"jest-snapshot": {
"strip-bom": {
"jest-serializer": {
"requires": {
"source-map": {
"jest-validate": {
"jest-watcher": {
"dependencies": {
"js-levenshtein": {
"json-schema-traverse": {
"json-parse-better-errors": {
"json-stable-stringify": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"json-stringify-safe": {
"json-stable-stringify-without-jsonify": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"jss-camel-case": {
"requires": {
"dependencies": {
"jss-default-unit": {
"requires": {
"dependencies": {
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"jsx-ast-utils": {
"jss-vendor-prefixer": {
"last-call-webpack-plugin": {
"load-json-file": {
"jss-props-sort": {
"parse-json": {
"requires": {
"loader-fs-cache": {
"find-cache-dir": {
"dependencies": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"requires": {
"requires": {
"dependencies": {
"path-exists": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"requires": {
"loader-runner": {
"loader-utils": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"lodash._reinterpolate": {
"lodash.debounce": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"requires": {
"lodash.camelcase": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.sortby": {
"lodash.template": {
"lodash.memoize": {
"lodash.templatesettings": {
"dependencies": {
"loose-envify": {
"map-age-cleaner": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-stream": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"miller-rabin": {
"merge-descriptors": {
"minimalistic-assert": {
"minimalistic-crypto-utils": {
"dependencies": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"is-extendable": {
"requires": {
"mixin-object": {
"mini-css-extract-plugin": {
"move-concurrently": {
"multicast-dns-service-types": {
"multicast-dns": {
"dependencies": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"natural-compare": {
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"node-libs-browser": {
"dependencies": {
"punycode": {
"node-notifier": {
"node-releases": {
"normalize-package-data": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-path": {
"normalize-range": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"normalize-scroll-left": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"npm-run-path": {
"normalize-url": {
"num2fraction": {
"number-is-nan": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"object-assign": {
"define-property": {
"object-visit": {
"object.assign": {
"object.getownpropertydescriptors": {
"requires": {
"dependencies": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"integrity": "sha1-5STaCbT2b/Bd9FdUbscqyZ8TBpo=",
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"dependencies": {
"object.values": {
"wordwrap": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"optimize-css-assets-webpack-plugin": {
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"os-browserify": {
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"parallel-transform": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"parse-passwd": {
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"path-dirname": {
"path-browserify": {
"p-is-promise": {
"path-is-inside": {
"path-is-absolute": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"path-to-regexp": {
"performance-now": {
"pnp-webpack-plugin": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"dependencies": {
"requires": {
"posix-character-classes": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"dependencies": {
"pinkie-promise": {
"postcss-attribute-case-insensitive": {
"dependencies": {
"dependencies": {
"source-map": {
"requires": {
"postcss-calc": {
"dependencies": {
"source-map": {
"postcss-color-functional-notation": {
"requires": {
"requires": {
"postcss-color-hex-alpha": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-color-mod-function": {
"@csstools/convert-colors": "^1.4.0",
"dependencies": {
"requires": {
"source-map": {
"postcss-color-rebeccapurple": {
"dependencies": {
"postcss-colormin": {
"requires": {
"dependencies": {
"source-map": {
"source-map": {
"source-map": {
"postcss-convert-values": {
"dependencies": {
"requires": {
"source-map": {
"postcss-custom-media": {
"dependencies": {
"requires": {
"source-map": {
"postcss-custom-properties": {
"dependencies": {
"postcss-custom-selectors": {
"requires": {
"dependencies": {
"requires": {
"postcss-dir-pseudo-class": {
"source-map": {
"requires": {
"source-map": {
"dependencies": {
"postcss-discard-comments": {
"requires": {
"source-map": {
"dependencies": {
"postcss-discard-duplicates": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-discard-empty": {
"requires": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-discard-overridden": {
"requires": {
"postcss-env-function": {
"source-map": {
"requires": {
"dependencies": {
"source-map": {
"postcss-flexbugs-fixes": {
"dependencies": {
"requires": {
"source-map": {
"postcss-focus-visible": {
"dependencies": {
"requires": {
"source-map": {
"postcss-focus-within": {
"requires": {
"dependencies": {
"postcss-font-variant": {
"source-map": {
"dependencies": {
"requires": {
"postcss-gap-properties": {
"source-map": {
"dependencies": {
"source-map": {
"postcss-image-set-function": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-initial": {
"dependencies": {
"requires": {
"source-map": {
"@csstools/convert-colors": "^1.4.0",
"postcss-lab-function": {
"dependencies": {
"requires": {
"source-map": {
"postcss-load-config": {
"dependencies": {
"cosmiconfig": {
"requires": {
"postcss-loader": {
"dependencies": {
"requires": {
"source-map": {
"postcss-logical": {
"dependencies": {
"requires": {
"source-map": {
"postcss-media-minmax": {
"dependencies": {
"requires": {
"source-map": {
"postcss-merge-longhand": {
"requires": {
"dependencies": {
"postcss-merge-rules": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"postcss-selector-parser": {
"source-map": {
"postcss-minify-font-values": {
"requires": {
"requires": {
"postcss-minify-gradients": {
"source-map": {
"dependencies": {
"source-map": {
"requires": {
"postcss-minify-params": {
"dependencies": {
"requires": {
"postcss-minify-selectors": {
"dependencies": {
"source-map": {
"requires": {
"postcss-selector-parser": {
"postcss-modules-extract-imports": {
"requires": {
"source-map": {
"postcss-modules-local-by-default": {
"postcss-modules-scope": {
"postcss-nesting": {
"postcss-modules-values": {
"dependencies": {
"source-map": {
"requires": {
"dependencies": {
"postcss-normalize-charset": {
"requires": {
"source-map": {
"postcss-normalize-display-values": {
"dependencies": {
"postcss-normalize-positions": {
"dependencies": {
"dependencies": {
"source-map": {
"source-map": {
"requires": {
"postcss-normalize-repeat-style": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-normalize-string": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-timing-functions": {
"requires": {
"source-map": {
"postcss-normalize-unicode": {
"requires": {
"dependencies": {
"requires": {
"postcss-normalize-url": {
"source-map": {
"requires": {
"postcss-normalize-whitespace": {
"dependencies": {
"source-map": {
"dependencies": {
"source-map": {
"dependencies": {
"requires": {
"postcss-ordered-values": {
"requires": {
"postcss-overflow-shorthand": {
"dependencies": {
"requires": {
"postcss-page-break": {
"dependencies": {
"requires": {
"source-map": {
"source-map": {
"postcss-place": {
"source-map": {
"dependencies": {
"postcss-preset-env": {
"requires": {
"source-map": {
"postcss-pseudo-class-any-link": {
"source-map": {
"dependencies": {
"postcss-reduce-initial": {
"requires": {
"dependencies": {
"source-map": {
"source-map": {
"dependencies": {
"postcss-reduce-transforms": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"dependencies": {
"postcss-replace-overflow-wrap": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-safe-parser": {
"requires": {
"postcss-selector-matches": {
"source-map": {
"dependencies": {
"postcss-selector-not": {
"requires": {
"dependencies": {
"dependencies": {
"source-map": {
"postcss-selector-parser": {
"source-map": {
"requires": {
"postcss-svgo": {
"source-map": {
"dependencies": {
"dependencies": {
"postcss-unique-selectors": {
"requires": {
"postcss-value-parser": {
"postcss-values-parser": {
"prepend-http": {
"requires": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"pretty-bytes": {
"pretty-error": {
"source-map": {
"pretty-format": {
"dependencies": {
"process-nextick-args": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"promise-inflight": {
"ansi-regex": {
"public-encrypt": {
"querystring-es3": {
"dependencies": {
"query-string": {
"querystringify": {
"requires": {
"dependencies": {
"dependencies": {
"iconv-lite": {
"is-number": {
"range-parser": {
"react-app-polyfill": {
"@babel/code-frame": "7.0.0",
"dependencies": {
"react-dev-utils": {
"requires": {
"browserslist": {
"requires": {
"ansi-regex": {
"requires": {
"requires": {
"locate-path": {
"p-locate": {
"requires": {
"requires": {
"strip-ansi": {
"react-event-listener": {
"@babel/runtime": "7.0.0",
"react-material-ui-form-validator": {
"react-lifecycles-compat": {
"react-form-validator-core": {
"requires": {
"react-error-overlay": {
"react-scripts": {
"@svgr/webpack": "2.4.1",
"dependencies": {
"@babel/core": "7.1.0",
"react-swipeable-views": {
"react-swipeable-views-core": {
"@babel/runtime": "7.0.0",
"requires": {
"react-swipeable-views-utils": {
"@babel/runtime": "7.0.0",
"react-transition-group": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"path-exists": {
"dependencies": {
"@babel/runtime": "7.0.0",
"readable-stream": {
"dependencies": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"arr-diff": {
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"expand-brackets": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"dependencies": {
"define-property": {
"kind-of": {
"requires": {
"requires": {
"extend-shallow": {
"extend-shallow": {
"dependencies": {
"requires": {
"fill-range": {
"is-accessor-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"micromatch": {
"kind-of": {
"requires": {
"realpath-native": {
"recursive-readdir": {
"@babel/runtime": "^7.0.0",
"requires": {
"regenerate-unicode-properties": {
"regenerator-runtime": {
"regexpu-core": {
"regenerator-transform": {
"dependencies": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"remove-trailing-separator": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"requires": {
"css-select": {
"domutils": {
"dependencies": {
"repeat-string": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"repeat-element": {
"request-promise-core": {
"request-promise-native": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-directory": {
"require-main-filename": {
"requires": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"caller-path": {
"require-uncached": {
"require-from-string": {
"dependencies": {
"requires": {
"callsites": {
"resolve-from": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"requires-port": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"resolve-from": {
"restore-cursor": {
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"safer-buffer": {
"dependencies": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"define-property": {
"requires": {
"expand-brackets": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"extend-shallow": {
"requires": {
"define-property": {
"requires": {
"fill-range": {
"dependencies": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"extend-shallow": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"micromatch": {
"requires": {
"is-descriptor": {
"requires": {
"dependencies": {
"requires": {
"minimist": {
"clone-deep": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"shallow-clone": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"requires": {
"dependencies": {
"schema-utils": {
"kind-of": {
"requires": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"dependencies": {
"requires": {
"serialize-javascript": {
"requires": {
"dependencies": {
"serve-static": {
"dependencies": {
"requires": {
"extend-shallow": {
"setimmediate": {
"shallow-clone": {
"setprototypeof": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"dependencies": {
"set-blocking": {
"lazy-cache": {
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"requires": {
"shebang-regex": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"shebang-command": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"simple-swizzle": {
"requires": {
"dependencies": {
"is-arrayish": {
"define-property": {
"requires": {
"extend-shallow": {
"snapdragon-node": {
"dependencies": {
"dependencies": {
"requires": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"snapdragon-util": {
"dependencies": {
"requires": {
"faye-websocket": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"requires": {
"sockjs-client": {
"requires": {
"dependencies": {
"source-map-resolve": {
"source-list-map": {
"source-map-support": {
"spdx-correct": {
"source-map-url": {
"spdx-expression-parse": {
"spdx-license-ids": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"dependencies": {
"spdx-exceptions": {
"requires": {
"spdy-transport": {
"dependencies": {
"requires": {
"split-string": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"define-property": {
"stealthy-require": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"dependencies": {
"stream-shift": {
"stream-browserify": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"strict-uri-encode": {
"string-length": {
"requires": {
"dependencies": {
"strip-ansi": {
"ansi-regex": {
"string-width": {
"requires": {
"ansi-regex": {
"dependencies": {
"requires": {
"stringify-object": {
"string_decoder": {
"strip-ansi": {
"strip-comments": {
"strip-json-comments": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"integrity": "sha1-IrD6OkE4WzO+PzMVUbu4N/oM164=",
"strip-url-auth": {
"dependencies": {
"schema-utils": {
"style-loader": {
"requires": {
"dependencies": {
"requires": {
"postcss-selector-parser": {
"requires": {
"supports-color": {
"symbol-observable": {
"dependencies": {
"commander": {
"source-map": {
"source-map-support": {
"requires": {
"source-map": {
"terser-webpack-plugin": {
"dependencies": {
"requires": {
"find-cache-dir": {
"locate-path": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"source-map": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"test-exclude": {
"timers-browserify": {
"requires": {
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"to-arraybuffer": {
"to-fast-properties": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"to-object-path": {
"dependencies": {
"to-regex-range": {
"requires": {
"tough-cookie": {
"is-number": {
"dependencies": {
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"punycode": {
"trim-repeated": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"tty-browserify": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"tunnel-agent": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"dependencies": {
"ua-parser-js": {
"commander": {
"source-map": {
"uglifyjs-webpack-plugin": {
"dependencies": {
"requires": {
"commander": {
"mississippi": {
"requires": {
"requires": {
"schema-utils": {
"source-map": {
"requires": {
"requires": {
"uglify-es": {
"unicode-canonical-property-names-ecmascript": {
"requires": {
"unicode-match-property-value-ecmascript": {
"unicode-match-property-ecmascript": {
"unicode-property-aliases-ecmascript": {
"extend-shallow": {
"dependencies": {
"set-value": {
"requires": {
"requires": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"unique-filename": {
"dependencies": {
"universalify": {
"requires": {
"dependencies": {
"isobject": {
"requires": {
"has-value": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"has-values": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"dependencies": {
"punycode": {
"validate-npm-package-license": {
"vm-browserify": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"w3c-xmlserializer": {
"util.promisify": {
"webidl-conversions": {
"minimist": {
"util-deprecate": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-edit": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/helper-module-context": "1.7.6",
"dependencies": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"arr-diff": {
"requires": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"requires": {
"eslint-scope": {
"expand-brackets": {
"requires": {
"dependencies": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"is-accessor-descriptor": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"define-property": {
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"requires": {
"schema-utils": {
"webpack-dev-middleware": {
"webpack-dev-server": {
"requires": {
"camelcase": {
"requires": {
"dependencies": {
"requires": {
"decamelize": {
"requires": {
"import-local": {
"requires": {
"invert-kv": {
"locate-path": {
"requires": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"requires": {
"yargs-parser": {
"webpack-sources": {
"requires": {
"webpack-manifest-plugin": {
"requires": {
"websocket-extensions": {
"websocket-driver": {
"dependencies": {
"whatwg-mimetype": {
"source-map": {
"yargs-parser": {
"@babel/core": {
"@babel/highlight": "^7.0.0"
"@babel/code-frame": "^7.0.0",
"@babel/code-frame": {
"@babel/template": "^7.1.2",
"@babel/parser": "^7.1.6",
"@babel/helpers": "^7.1.5",
"@babel/generator": "^7.1.6",
"@babel/types": "^7.1.6",
"@babel/traverse": "^7.1.6",
"@babel/types": "^7.2.2",
"@babel/types": "^7.0.0"
"@babel/helper-annotate-as-pure": {
"@babel/generator": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0",
"@babel/helper-builder-react-jsx": {
"@babel/traverse": "^7.1.0",
"@babel/helper-call-delegate": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/helper-define-map": {
"@babel/types": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0"
"@babel/helper-function-name": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/helper-hoist-variables": {
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/helper-module-transforms": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-simple-access": "^7.1.0",
"@babel/template": "^7.2.2",
"@babel/helper-optimise-call-expression": {
"@babel/types": "^7.0.0"
"@babel/helper-regex": {
"@babel/types": "^7.0.0"
"@babel/helper-remap-async-to-generator": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-wrap-function": "^7.1.0",
"@babel/helper-plugin-utils": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/types": "^7.2.2",
"@babel/traverse": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/template": "^7.1.0",
"@babel/traverse": "^7.2.3",
"@babel/helper-simple-access": {
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/types": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.2.0"
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.2.0"
"@babel/traverse": "^7.1.5",
"@babel/template": "^7.1.2",
"@babel/helpers": {
"@babel/highlight": {
"@babel/parser": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-class-properties": {
"@babel/plugin-proposal-async-generator-functions": {
"@babel/plugin-syntax-async-generators": "^7.2.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-proposal-decorators": {
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/plugin-syntax-decorators": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-json-strings": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-json-strings": "^7.2.0"
"@babel/plugin-proposal-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/plugin-syntax-async-generators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-class-properties": {
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-syntax-dynamic-import": {
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-block-scoped-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-block-scoping": {
"@babel/plugin-transform-classes": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-transform-computed-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-transform-destructuring": {
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-flow-strip-types": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-function-name": {
"@babel/plugin-transform-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-amd": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-commonjs": {
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-umd": {
"@babel/helper-simple-access": "^7.1.0"
"@babel/plugin-transform-new-target": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-object-super": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-replace-supers": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-call-delegate": "^7.1.0",
"@babel/plugin-transform-parameters": {
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-constant-elements": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-display-name": {
"@babel/helper-builder-react-jsx": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-jsx": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-source": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-regenerator": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-spread": {
"@babel/plugin-transform-runtime": {
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-template-literals": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-regex": "^7.0.0"
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-typescript": "^7.2.0"
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/preset-env": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-proposal-json-strings": "^7.2.0",
"@babel/plugin-transform-block-scoping": "^7.2.0",
"@babel/plugin-syntax-async-generators": "^7.2.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-classes": "^7.2.0",
"@babel/plugin-transform-dotall-regex": "^7.2.0",
"@babel/plugin-transform-destructuring": "^7.2.0",
"@babel/plugin-transform-for-of": "^7.2.0",
"@babel/plugin-transform-literals": "^7.2.0",
"@babel/plugin-transform-function-name": "^7.2.0",
"@babel/plugin-transform-modules-umd": "^7.2.0",
"@babel/plugin-transform-object-super": "^7.2.0",
"@babel/plugin-transform-parameters": "^7.2.0",
"@babel/plugin-transform-modules-amd": "^7.2.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-sticky-regex": "^7.2.0",
"@babel/plugin-transform-typeof-symbol": "^7.2.0",
"@babel/plugin-transform-unicode-regex": "^7.2.0",
"@babel/plugin-transform-spread": "^7.2.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/preset-react": {
"@babel/preset-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-typescript": "^7.1.0"
"@babel/runtime": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/template": {
"regenerator-runtime": {
"@babel/code-frame": "^7.0.0",
"dependencies": {
"@babel/parser": "^7.2.2",
"@babel/generator": "^7.2.2",
"@babel/types": "^7.2.2"
"@babel/code-frame": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/types": "^7.2.2",
"@babel/parser": "^7.2.3",
"@babel/types": {
"@csstools/convert-colors": {
"@mrmlnc/readdir-enhanced": {
"@nodelib/fs.stat": {
"@babel/traverse": {
"@babel/core": "^7.0.1",
"@babel/preset-env": "^7.0.0",
"@babel/preset-react": "^7.0.0",
"@svgr/core": "^2.4.1",
"@svgr/webpack": {
"@types/tapable": {
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ast": {
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": {
"@webassemblyjs/wasm-gen": "1.7.6"
"@webassemblyjs/utf8": {
"@xtuc/long": "4.2.1"
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/leb128": {
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/wast-parser": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/helper-code-frame": "1.7.6",
"@webassemblyjs/helper-fsm": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@xtuc/long": "4.2.1",
"@webassemblyjs/wast-printer": {
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@xtuc/long": "4.2.1"
"acorn-dynamic-import": {
"dependencies": {
"@xtuc/ieee754": {
"acorn-globals": {
"ajv-keywords": {
"alphanum-sort": {
"ansi-styles": {
"ansi-escapes": {
"dependencies": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"arr-diff": {
"ansi-colors": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"extglob": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"kind-of": {
"requires": {
"append-transform": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"arr-flatten": {
"array-flatten": {
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-reduce": {
"array-includes": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-equal": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"array-unique": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"array-union": {
"inherits": {
"assert-plus": {
"assign-symbols": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"requires": {
"ast-types-flow": {
"async-limiter": {
"astral-regex": {
"postcss": {
"dependencies": {
"requires": {
"autoprefixer": {
"axobject-query": {
"source-map": {
"babel-code-frame": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"dependencies": {
"requires": {
"ansi-styles": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"js-tokens": {
"supports-color": {
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.0.0",
"@babel/traverse": "^7.0.0",
"babel-generator": {
"babel-eslint": {
"@babel/types": "^7.0.0",
"babel-extract-comments": {
"babel-helpers": {
"dependencies": {
"babel-messages": {
"babel-loader": {
"babel-plugin-dynamic-import-node": {
"babel-plugin-istanbul": {
"babel-plugin-jest-hoist": {
"babel-plugin-named-asset-import": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-syntax-object-rest-spread": {
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-transform-react-remove-prop-types": {
"babel-plugin-macros": {
"babel-preset-react-app": {
"babel-preset-jest": {
"@babel/core": "7.1.6",
"@babel/plugin-proposal-decorators": "7.1.6",
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/plugin-transform-destructuring": "7.1.3",
"@babel/plugin-transform-classes": "7.1.0",
"@babel/plugin-transform-runtime": "7.1.0",
"@babel/runtime": "7.1.5",
"@babel/preset-react": "7.0.0",
"dependencies": {
"@babel/preset-env": "7.1.6",
"@babel/plugin-proposal-object-rest-spread": {
"requires": {
"@babel/preset-typescript": "7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"requires": {
"@babel/plugin-transform-classes": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-transform-destructuring": {
"requires": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"requires": {
"@babel/plugin-transform-react-display-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"requires": {
"@babel/preset-env": {
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-spread": "^7.0.0",
"requires": {
"babel-register": {
"@babel/plugin-transform-literals": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"babel-core": {
"dependencies": {
"requires": {
"requires": {
"babel-template": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"babel-runtime": {
"babel-traverse": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"dependencies": {
"babel-types": {
"requires": {
"dependencies": {
"to-fast-properties": {
"balanced-match": {
"requires": {
"globals": {
"define-property": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"bcrypt-pbkdf": {
"kind-of": {
"requires": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"binary-extensions": {
"body-parser": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"dependencies": {
"iconv-lite": {
"requires": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"requires": {
"brace-expansion": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browser-process-hrtime": {
"resolve": {
"browser-resolve": {
"dependencies": {
"browserify-aes": {
"browserify-cipher": {
"browserify-rsa": {
"browserify-des": {
"browserify-sign": {
"browserify-zlib": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"buffer-from": {
"buffer-indexof": {
"builtin-modules": {
"builtin-status-codes": {
"dependencies": {
"browserslist": {
"lru-cache": {
"yallist": {
"call-me-maybe": {
"caller-callsite": {
"caller-path": {
"caniuse-api": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"requires": {
"caniuse-lite": {
"case-sensitive-paths-webpack-plugin": {
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"capture-exit": {
"check-types": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"is-glob": {
"requires": {
"is-extglob": {
"requires": {
"glob-parent": {
"is-glob": {
"is-number": {
"chrome-trace-event": {
"requires": {
"cipher-base": {
"circular-json": {
"dependencies": {
"class-utils": {
"define-property": {
"source-map": {
"dependencies": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"dependencies": {
"requires": {
"ansi-regex": {
"requires": {
"strip-ansi": {
"@types/q": "^1.5.1",
"collection-visit": {
"color-convert": {
"code-point-at": {
"combined-stream": {
"component-emitter": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"color-string": {
"common-tags": {
"dependencies": {
"compression": {
"compressible": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"connect-history-api-fallback": {
"confusing-browser-globals": {
"concat-stream": {
"console-browserify": {
"contains-path": {
"requires": {
"constants-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"content-disposition": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"convert-source-map": {
"content-type": {
"cookie-signature": {
"copy-descriptor": {
"copy-concurrently": {
"cosmiconfig": {
"core-util-is": {
"create-ecdh": {
"cross-spawn": {
"create-hmac": {
"crypto-browserify": {
"css-declaration-sorter": {
"css-color-names": {
"create-hash": {
"dependencies": {
"postcss": {
"requires": {
"css-select-base-adapter": {
"source-map": {
"css-selector-tokenizer": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"dependencies": {
"regexpu-core": {
"requires": {
"css-unit-converter": {
"regjsgen": {
"regjsparser": {
"css-url-regex": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"postcss": {
"requires": {
"source-map": {
"cssnano-preset-default": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"cssnano-util-get-arguments": {
"cssnano-util-get-match": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"cssnano-util-raw-cache": {
"postcss": {
"dependencies": {
"requires": {
"source-map": {
"cssnano-util-same-parent": {
"dependencies": {
"requires": {
"css-tree": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"damerau-levenshtein": {
"postcss": {
"decode-uri-component": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"default-gateway": {
"requires": {
"dependencies": {
"default-require-extensions": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"define-property": {
"define-properties": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"requires": {
"dependencies": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"pify": {
"delayed-stream": {
"detect-newline": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"detect-node": {
"detect-indent": {
"dependencies": {
"detect-port-alt": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"diffie-hellman": {
"requires": {
"dependencies": {
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"dom-converter": {
"dom-serializer": {
"path-type": {
"dependencies": {
"domelementtype": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"domexception": {
"domain-browser": {
"dotenv-expand": {
"domelementtype": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"emoji-regex": {
"electron-to-chromium": {
"emojis-list": {
"end-of-stream": {
"enhanced-resolve": {
"escape-html": {
"es-to-primitive": {
"dependencies": {
"escape-string-regexp": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"@babel/code-frame": "^7.0.0",
"es-abstract": {
"dependencies": {
"esprima": {
"ansi-regex": {
"eslint-scope": {
"strip-ansi": {
"requires": {
"requires": {
"eslint-config-react-app": {
"dependencies": {
"source-map": {
"eslint-import-resolver-node": {
"requires": {
"dependencies": {
"eslint-loader": {
"eslint-module-utils": {
"requires": {
"path-exists": {
"find-up": {
"requires": {
"requires": {
"requires": {
"pkg-dir": {
"eslint-plugin-flowtype": {
"eslint-plugin-import": {
"requires": {
"dependencies": {
"requires": {
"doctrine": {
"load-json-file": {
"requires": {
"path-type": {
"requires": {
"parse-json": {
"requires": {
"requires": {
"requires": {
"read-pkg-up": {
"requires": {
"eslint-plugin-jsx-a11y": {
"read-pkg": {
"strip-bom": {
"eslint-plugin-react": {
"eslint-visitor-keys": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"eslint-utils": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"eslint-scope": {
"eventemitter3": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"evp_bytestokey": {
"eventsource": {
"dependencies": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"requires": {
"cross-spawn": {
"expand-range": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"dependencies": {
"array-flatten": {
"requires": {
"expand-brackets": {
"dependencies": {
"extend-shallow": {
"is-extendable": {
"expand-tilde": {
"requires": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"external-editor": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"@mrmlnc/readdir-enhanced": "^2.2.1",
"@nodelib/fs.stat": "^1.1.2",
"arr-diff": {
"fast-deep-equal": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"array-unique": {
"extend-shallow": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"requires": {
"requires": {
"dependencies": {
"expand-brackets": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"extglob": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"fill-range": {
"dependencies": {
"requires": {
"extend-shallow": {
"glob-parent": {
"requires": {
"requires": {
"is-glob": {
"dependencies": {
"is-data-descriptor": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"is-glob": {
"is-extglob": {
"requires": {
"is-number": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"kind-of": {
"micromatch": {
"requires": {
"fast-json-stable-stringify": {
"requires": {
"fast-levenshtein": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"faye-websocket": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"figgy-pudding": {
"fb-watchman": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"filename-regex": {
"file-entry-cache": {
"isobject": {
"dependencies": {
"file-loader": {
"finalhandler": {
"requires": {
"dependencies": {
"find-cache-dir": {
"dependencies": {
"follow-redirects": {
"requires": {
"requires": {
"flush-write-stream": {
"fork-ts-checker-webpack-plugin-alt": {
"forever-agent": {
"dependencies": {
"arr-diff": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"dependencies": {
"expand-brackets": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"define-property": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"extglob": {
"requires": {
"fill-range": {
"extend-shallow": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"kind-of": {
"micromatch": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"requires": {
"fs-write-stream-atomic": {
"fragment-cache": {
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"dependencies": {
"ansi-regex": {
"fs.realpath": {
"are-we-there-yet": {
"balanced-match": {
"requires": {
"brace-expansion": {
"code-point-at": {
"concat-map": {
"console-control-strings": {
"core-util-is": {
"requires": {
"deep-extend": {
"requires": {
"detect-libc": {
"delegates": {
"fs-minipass": {
"requires": {
"fs.realpath": {
"requires": {
"iconv-lite": {
"requires": {
"requires": {
"ignore-walk": {
"requires": {
"has-unicode": {
"requires": {
"is-fullwidth-code-point": {
"inherits": {
"inflight": {
"minimatch": {
"isarray": {
"requires": {
"requires": {
"minipass": {
"minimist": {
"requires": {
"requires": {
"minizlib": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"requires": {
"number-is-nan": {
"requires": {
"object-assign": {
"requires": {
"requires": {
"os-homedir": {
"os-tmpdir": {
"path-is-absolute": {
"process-nextick-args": {
"requires": {
"minimist": {
"dependencies": {
"readable-stream": {
"requires": {
"safe-buffer": {
"requires": {
"requires": {
"safer-buffer": {
"set-blocking": {
"signal-exit": {
"requires": {
"string_decoder": {
"requires": {
"string-width": {
"requires": {
"strip-ansi": {
"strip-json-comments": {
"requires": {
"util-deprecate": {
"wide-align": {
"yallist": {
"requires": {
"get-caller-file": {
"functional-red-black-tree": {
"glob-parent": {
"function-bind": {
"get-own-enumerable-property-symbols": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"global-modules": {
"global-prefix": {
"glob-to-regexp": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"graceful-fs": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-traverse": {
"h2x-plugin-jsx": {
"handle-thing": {
"h2x-generate": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"source-map": {
"dependencies": {
"har-validator": {
"harmony-reflect": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"dependencies": {
"has-symbols": {
"dependencies": {
"requires": {
"is-number": {
"requires": {
"kind-of": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"home-or-tmp": {
"hex-color-regex": {
"kind-of": {
"homedir-polyfill": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"hosted-git-info": {
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"html-comment-regex": {
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"html-encoding-sniffer": {
"dependencies": {
"html-entities": {
"html-minifier": {
"@types/tapable": "1.0.2",
"html-webpack-plugin": {
"commander": {
"htmlparser2": {
"domutils": {
"dependencies": {
"isarray": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"string_decoder": {
"http-deceiver": {
"requires": {
"http-errors": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-parser-js": {
"http-proxy-middleware": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"array-unique": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"define-property": {
"extglob": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"is-extglob": {
"is-glob": {
"requires": {
"dependencies": {
"requires": {
"is-number": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"http-signature": {
"https-browserify": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"identity-obj-proxy": {
"icss-replace-symbols": {
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"import-from": {
"import-fresh": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"kind-of": {
"import-local": {
"dependencies": {
"imurmurhash": {
"strip-ansi": {
"requires": {
"ansi-regex": {
"internal-ip": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"is-binary-path": {
"is-absolute-url": {
"is-accessor-descriptor": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-builtin-module": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-arrayish": {
"is-color-stop": {
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-date-object": {
"is-data-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-callable": {
"dependencies": {
"is-descriptor": {
"kind-of": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"is-directory": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"is-extendable": {
"is-equal-shallow": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-fullwidth-code-point": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-path-cwd": {
"is-generator-fn": {
"is-plain-object": {
"is-path-in-cwd": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-posix-bracket": {
"is-primitive": {
"is-path-inside": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"is-resolvable": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"istanbul-api": {
"is-typedarray": {
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"istanbul-lib-coverage": {
"istanbul-lib-instrument": {
"dependencies": {
"istanbul-lib-hook": {
"supports-color": {
"has-flag": {
"istanbul-lib-report": {
"istanbul-lib-source-maps": {
"dependencies": {
"requires": {
"dependencies": {
"istanbul-reports": {
"requires": {
"ansi-regex": {
"strip-ansi": {
"jest-cli": {
"requires": {
"jest-changed-files": {
"dependencies": {
"jest-config": {
"requires": {
"babel-core": {
"requires": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"jest-docblock": {
"requires": {
"jest-environment-jsdom": {
"whatwg-url": {
"dependencies": {
"requires": {
"requires": {
"jest-environment-node": {
"jest-haste-map": {
"jest-get-type": {
"requires": {
"jest-leak-detector": {
"jest-jasmine2": {
"jest-matcher-utils": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-pnp-resolver": {
"jest-resolve-dependencies": {
"jest-message-util": {
"jest-regex-util": {
"jest-runner": {
"dependencies": {
"jest-resolve": {
"jest-runtime": {
"requires": {
"source-map-support": {
"source-map": {
"dependencies": {
"requires": {
"babel-core": {
"strip-bom": {
"jest-serializer": {
"jest-snapshot": {
"source-map": {
"requires": {
"jest-validate": {
"dependencies": {
"jest-watcher": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"jest-worker": {
"js-levenshtein": {
"json-stable-stringify": {
"json-schema-traverse": {
"json-schema": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-parse-better-errors": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"json-stable-stringify-without-jsonify": {
"json-stringify-safe": {
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"jsx-ast-utils": {
"dependencies": {
"load-json-file": {
"last-call-webpack-plugin": {
"parse-json": {
"loader-fs-cache": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"requires": {
"dependencies": {
"find-cache-dir": {
"find-up": {
"requires": {
"path-exists": {
"requires": {
"requires": {
"requires": {
"loader-utils": {
"pkg-dir": {
"loader-runner": {
"requires": {
"dependencies": {
"lodash._reinterpolate": {
"lodash.camelcase": {
"locate-path": {
"lodash.debounce": {
"lodash.memoize": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"lodash.sortby": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.template": {
"lodash.templatesettings": {
"lodash.tail": {
"loose-envify": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"map-age-cleaner": {
"math-random": {
"media-typer": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"merge-descriptors": {
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-stream": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"miller-rabin": {
"lodash.uniq": {
"mini-css-extract-plugin": {
"minimalistic-crypto-utils": {
"minimalistic-assert": {
"dependencies": {
"mississippi": {
"dependencies": {
"is-extendable": {
"mixin-object": {
"dependencies": {
"requires": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"move-concurrently": {
"minimist": {
"multicast-dns": {
"mute-stream": {
"multicast-dns-service-types": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"natural-compare": {
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"kind-of": {
"node-libs-browser": {
"dependencies": {
"node-releases": {
"node-notifier": {
"punycode": {
"normalize-package-data": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"normalize-range": {
"normalize-path": {
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"normalize-url": {
"num2fraction": {
"npm-run-path": {
"number-is-nan": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"object-copy": {
"dependencies": {
"define-property": {
"object-hash": {
"requires": {
"object-keys": {
"object-visit": {
"object.assign": {
"object.getownpropertydescriptors": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"object.pick": {
"integrity": "sha1-5STaCbT2b/Bd9FdUbscqyZ8TBpo=",
"object.omit": {
"object.values": {
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"dependencies": {
"integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="
"on-finished": {
"optimize-css-assets-webpack-plugin": {
"wordwrap": {
"minimist": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"os-browserify": {
"parallel-transform": {
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"p-is-promise": {
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"parse-passwd": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"path-dirname": {
"path-browserify": {
"path-exists": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"path-is-absolute": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"path-to-regexp": {
"performance-now": {
"path-is-inside": {
"pinkie-promise": {
"pnp-webpack-plugin": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"requires": {
"dependencies": {
"posix-character-classes": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"dependencies": {
"source-map": {
"dependencies": {
"postcss-attribute-case-insensitive": {
"postcss": {
"requires": {
"source-map": {
"dependencies": {
"postcss": {
"postcss-calc": {
"postcss-color-functional-notation": {
"requires": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss-color-gray": {
"postcss": {
"@csstools/convert-colors": "^1.4.0",
"requires": {
"dependencies": {
"postcss": {
"source-map": {
"postcss-color-hex-alpha": {
"postcss": {
"dependencies": {
"postcss-color-mod-function": {
"source-map": {
"@csstools/convert-colors": "^1.4.0",
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-color-rebeccapurple": {
"postcss": {
"requires": {
"dependencies": {
"postcss-colormin": {
"source-map": {
"postcss": {
"postcss": {
"dependencies": {
"source-map": {
"postcss-convert-values": {
"dependencies": {
"requires": {
"source-map": {
"postcss-custom-media": {
"postcss": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"postcss-custom-properties": {
"postcss": {
"dependencies": {
"postcss": {
"source-map": {
"dependencies": {
"postcss-custom-selectors": {
"requires": {
"source-map": {
"postcss": {
"postcss-dir-pseudo-class": {
"requires": {
"dependencies": {
"source-map": {
"postcss": {
"requires": {
"postcss-discard-comments": {
"dependencies": {
"requires": {
"source-map": {
"postcss": {
"postcss-discard-duplicates": {
"postcss": {
"dependencies": {
"dependencies": {
"postcss-discard-empty": {
"requires": {
"source-map": {
"requires": {
"source-map": {
"postcss": {
"postcss-discard-overridden": {
"dependencies": {
"postcss": {
"requires": {
"postcss-double-position-gradients": {
"postcss": {
"source-map": {
"dependencies": {
"requires": {
"postcss-env-function": {
"source-map": {
"dependencies": {
"requires": {
"source-map": {
"postcss": {
"postcss-flexbugs-fixes": {
"dependencies": {
"requires": {
"source-map": {
"postcss": {
"dependencies": {
"postcss": {
"postcss-focus-visible": {
"source-map": {
"dependencies": {
"postcss-focus-within": {
"requires": {
"postcss": {
"requires": {
"source-map": {
"postcss-font-variant": {
"postcss": {
"dependencies": {
"requires": {
"postcss-gap-properties": {
"source-map": {
"postcss": {
"requires": {
"source-map": {
"dependencies": {
"postcss": {
"dependencies": {
"postcss-image-set-function": {
"postcss-initial": {
"requires": {
"source-map": {
"dependencies": {
"postcss": {
"requires": {
"source-map": {
"postcss-lab-function": {
"@csstools/convert-colors": "^1.4.0",
"dependencies": {
"postcss": {
"source-map": {
"dependencies": {
"postcss-load-config": {
"requires": {
"dependencies": {
"postcss-loader": {
"cosmiconfig": {
"requires": {
"postcss": {
"requires": {
"postcss-logical": {
"source-map": {
"dependencies": {
"postcss": {
"requires": {
"source-map": {
"postcss-media-minmax": {
"requires": {
"dependencies": {
"postcss-merge-longhand": {
"source-map": {
"dependencies": {
"postcss": {
"postcss": {
"source-map": {
"postcss-merge-rules": {
"postcss": {
"dependencies": {
"requires": {
"postcss-selector-parser": {
"requires": {
"requires": {
"source-map": {
"postcss-minify-font-values": {
"postcss": {
"dependencies": {
"source-map": {
"postcss-minify-gradients": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss": {
"postcss-minify-params": {
"dependencies": {
"source-map": {
"requires": {
"postcss-minify-selectors": {
"dependencies": {
"postcss": {
"requires": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"postcss-modules-extract-imports": {
"postcss-modules-local-by-default": {
"postcss": {
"postcss-modules-scope": {
"postcss-modules-values": {
"dependencies": {
"postcss-nesting": {
"postcss": {
"requires": {
"source-map": {
"postcss-normalize-charset": {
"dependencies": {
"requires": {
"postcss": {
"source-map": {
"postcss-normalize-display-values": {
"postcss": {
"dependencies": {
"postcss-normalize-positions": {
"requires": {
"source-map": {
"dependencies": {
"postcss": {
"source-map": {
"postcss-normalize-repeat-style": {
"requires": {
"dependencies": {
"postcss": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-string": {
"postcss": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-timing-functions": {
"postcss": {
"requires": {
"postcss-normalize-unicode": {
"source-map": {
"dependencies": {
"requires": {
"postcss": {
"postcss-normalize-url": {
"requires": {
"dependencies": {
"source-map": {
"postcss": {
"source-map": {
"postcss-normalize-whitespace": {
"postcss": {
"dependencies": {
"requires": {
"source-map": {
"postcss-ordered-values": {
"dependencies": {
"postcss": {
"requires": {
"source-map": {
"postcss-overflow-shorthand": {
"postcss": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-page-break": {
"requires": {
"requires": {
"postcss-place": {
"postcss": {
"dependencies": {
"postcss": {
"source-map": {
"requires": {
"source-map": {
"postcss-preset-env": {
"dependencies": {
"postcss": {
"requires": {
"postcss-pseudo-class-any-link": {
"dependencies": {
"postcss": {
"source-map": {
"requires": {
"source-map": {
"postcss-reduce-initial": {
"postcss": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-reduce-transforms": {
"requires": {
"requires": {
"source-map": {
"postcss-replace-overflow-wrap": {
"postcss": {
"dependencies": {
"requires": {
"postcss": {
"postcss-safe-parser": {
"source-map": {
"dependencies": {
"source-map": {
"postcss": {
"requires": {
"postcss-selector-matches": {
"dependencies": {
"requires": {
"postcss": {
"postcss-selector-not": {
"dependencies": {
"source-map": {
"postcss-selector-parser": {
"source-map": {
"dependencies": {
"requires": {
"postcss-svgo": {
"dependencies": {
"postcss": {
"source-map": {
"requires": {
"postcss-unique-selectors": {
"dependencies": {
"postcss": {
"requires": {
"source-map": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"postcss-value-parser": {
"postcss": {
"postcss-values-parser": {
"pretty-error": {
"pretty-format": {
"pretty-bytes": {
"ansi-regex": {
"dependencies": {
"process-nextick-args": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"public-encrypt": {
"promise-inflight": {
"querystring": {
"dependencies": {
"querystring-es3": {
"requires": {
"querystringify": {
"dependencies": {
"is-number": {
"range-parser": {
"dependencies": {
"kind-of": {
"iconv-lite": {
"dependencies": {
"requires": {
"randombytes": {
"react-app-polyfill": {
"@babel/code-frame": "7.0.0",
"core-js": {
"react-dev-utils": {
"ansi-regex": {
"dependencies": {
"requires": {
"browserslist": {
"find-up": {
"requires": {
"loader-utils": {
"inquirer": {
"requires": {
"requires": {
"p-limit": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"requires": {
"react-error-overlay": {
"strip-ansi": {
"p-locate": {
"react-scripts": {
"@babel/core": "7.1.6",
"@svgr/webpack": "2.4.1",
"dependencies": {
"resolve": {
"requires": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"read-pkg-up": {
"dependencies": {
"requires": {
"path-exists": {
"find-up": {
"requires": {
"readable-stream": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"extend-shallow": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"expand-brackets": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"kind-of": {
"extglob": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"micromatch": {
"requires": {
"realpath-native": {
"recursive-readdir": {
"regenerator-runtime": {
"kind-of": {
"regenerate-unicode-properties": {
"regenerator-transform": {
"regexpu-core": {
"regex-cache": {
"regjsparser": {
"dependencies": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"remove-trailing-separator": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"css-select": {
"dependencies": {
"requires": {
"domutils": {
"repeat-element": {
"requires": {
"repeat-string": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"dependencies": {
"tough-cookie": {
"requires": {
"request-promise-native": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"punycode": {
"request-promise-core": {
"require-directory": {
"require-from-string": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"dependencies": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"require-main-filename": {
"requires": {
"caller-path": {
"require-uncached": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"resolve-from": {
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"requires-port": {
"callsites": {
"resolve-cwd": {
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"resolve-from": {
"resolve-dir": {
"resolve-url": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"restore-cursor": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"safer-buffer": {
"safe-buffer": {
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"arr-diff": {
"dependencies": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"expand-brackets": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-data-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"extglob": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"kind-of": {
"fill-range": {
"dependencies": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"micromatch": {
"kind-of": {
"requires": {
"sass-loader": {
"dependencies": {
"clone-deep": {
"requires": {
"for-own": {
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"shallow-clone": {
"dependencies": {
"kind-of": {
"requires": {
"kind-of": {
"schema-utils": {
"requires": {
"select-hose": {
"serialize-javascript": {
"serve-index": {
"dependencies": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"requires": {
"dependencies": {
"dependencies": {
"serve-static": {
"extend-shallow": {
"requires": {
"set-blocking": {
"shallow-clone": {
"setprototypeof": {
"setimmediate": {
"dependencies": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"requires": {
"kind-of": {
"shebang-command": {
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"lazy-cache": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"shell-quote": {
"shebang-regex": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"signal-exit": {
"simple-swizzle": {
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"is-arrayish": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"snapdragon-node": {
"requires": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"snapdragon-util": {
"dependencies": {
"requires": {
"kind-of": {
"faye-websocket": {
"sockjs-client": {
"dependencies": {
"requires": {
"requires": {
"source-map-support": {
"source-list-map": {
"source-map-resolve": {
"source-map-url": {
"spdx-exceptions": {
"spdx-license-ids": {
"spdx-correct": {
"spdx-expression-parse": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"dependencies": {
"requires": {
"dependencies": {
"spdy-transport": {
"stack-utils": {
"requires": {
"static-extend": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"dependencies": {
"split-string": {
"requires": {
"define-property": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"stealthy-require": {
"stream-browserify": {
"stream-http": {
"stream-shift": {
"string-length": {
"stream-each": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"strip-ansi": {
"dependencies": {
"ansi-regex": {
"dependencies": {
"string-width": {
"ansi-regex": {
"requires": {
"strip-ansi": {
"strip-comments": {
"stringify-object": {
"requires": {
"string_decoder": {
"strip-json-comments": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"style-loader": {
"dependencies": {
"requires": {
"dependencies": {
"postcss": {
"schema-utils": {
"postcss-selector-parser": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"symbol-tree": {
"supports-color": {
"source-map-support": {
"source-map": {
"terser-webpack-plugin": {
"commander": {
"dependencies": {
"find-cache-dir": {
"requires": {
"requires": {
"find-up": {
"requires": {
"p-limit": {
"locate-path": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"pkg-dir": {
"source-map": {
"requires": {
"test-exclude": {
"to-arraybuffer": {
"timers-browserify": {
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"to-fast-properties": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"to-object-path": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"is-number": {
"dependencies": {
"requires": {
"to-regex-range": {
"tough-cookie": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"tty-browserify": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"dependencies": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"tunnel-agent": {
"source-map": {
"commander": {
"uglifyjs-webpack-plugin": {
"cacache": {
"requires": {
"commander": {
"dependencies": {
"mississippi": {
"requires": {
"requires": {
"schema-utils": {
"requires": {
"source-map": {
"uglify-es": {
"requires": {
"requires": {
"unicode-canonical-property-names-ecmascript": {
"unicode-match-property-value-ecmascript": {
"unicode-match-property-ecmascript": {
"unicode-property-aliases-ecmascript": {
"dependencies": {
"extend-shallow": {
"requires": {
"union-value": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"set-value": {
"unique-filename": {
"unique-slug": {
"universalify": {
"requires": {
"unset-value": {
"dependencies": {
"requires": {
"has-value": {
"dependencies": {
"isobject": {
"has-values": {
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"requires": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"util-deprecate": {
"dependencies": {
"utils-merge": {
"util.promisify": {
"punycode": {
"validate-npm-package-license": {
"vm-browserify": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"webidl-conversions": {
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"w3c-hr-time": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wasm-edit": "1.7.6",
"@webassemblyjs/helper-module-context": "1.7.6",
"dependencies": {
"@webassemblyjs/wasm-parser": "1.7.6",
"w3c-xmlserializer": {
"array-unique": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"eslint-scope": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"kind-of": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"extglob": {
"define-property": {
"requires": {
"dependencies": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"dependencies": {
"requires": {
"is-number": {
"requires": {
"kind-of": {
"micromatch": {
"requires": {
"kind-of": {
"schema-utils": {
"webpack-dev-middleware": {
"requires": {
"webpack-dev-server": {
"requires": {
"dependencies": {
"requires": {
"camelcase": {
"decamelize": {
"requires": {
"find-up": {
"requires": {
"get-stream": {
"import-local": {
"requires": {
"invert-kv": {
"locate-path": {
"requires": {
"requires": {
"requires": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"p-limit": {
"p-locate": {
"requires": {
"requires": {
"pkg-dir": {
"yargs-parser": {
"requires": {
"webpack-log": {
"requires": {
"webpack-manifest-plugin": {
"webpack-sources": {
"websocket-driver": {
"dependencies": {
"websocket-extensions": {
"whatwg-encoding": {
"whatwg-fetch": {
"whatwg-mimetype": {
"which-module": {
"source-map": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"workbox-background-sync": {
"workbox-broadcast-cache-update": {
"workbox-build": {
"fs-extra": {
"dependencies": {
"requires": {
"workbox-cacheable-response": {
"workbox-core": {
"workbox-cache-expiration": {
"workbox-google-analytics": {
"workbox-range-requests": {
"workbox-precaching": {
"workbox-navigation-preload": {
"workbox-routing": {
"worker-farm": {
"workbox-strategies": {
"workbox-webpack-plugin": {
"workbox-streams": {
"is-fullwidth-code-point": {
"requires": {
"dependencies": {
"string-width": {
"write-file-atomic": {
"xml-name-validator": {
"yargs-parser": {
"requires": {
"dependencies": {
"camelcase": {
"@babel/code-frame": {
"@babel/generator": "^7.2.2",
"@babel/code-frame": "^7.0.0",
"@babel/highlight": "^7.0.0"
"@babel/template": "^7.2.2",
"@babel/traverse": "^7.2.2",
"@babel/helpers": "^7.2.0",
"@babel/parser": "^7.2.2",
"dependencies": {
"@babel/types": "^7.2.2",
"@babel/generator": {
"@babel/types": "^7.0.0"
"requires": {
"@babel/helper-annotate-as-pure": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.3.3",
"@babel/types": "^7.3.0",
"@babel/helper-builder-react-jsx": {
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-call-delegate": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-create-class-features-plugin": {
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-define-map": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-replace-supers": "^7.2.3"
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/helper-function-name": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-get-function-arity": {
"@babel/helper-hoist-variables": {
"@babel/types": "^7.0.0"
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": {
"@babel/types": "^7.0.0"
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-module-transforms": {
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/template": "^7.2.2",
"@babel/types": "^7.2.2",
"@babel/types": "^7.0.0"
"@babel/helper-optimise-call-expression": {
"@babel/helper-remap-async-to-generator": {
"@babel/helper-regex": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-wrap-function": "^7.1.0",
"@babel/helper-plugin-utils": {
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/traverse": "^7.2.3",
"@babel/helper-simple-access": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/helper-function-name": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.2.0"
"@babel/traverse": "^7.1.0",
"@babel/helpers": {
"@babel/types": "^7.3.0"
"@babel/template": "^7.1.2",
"@babel/traverse": "^7.1.5",
"@babel/highlight": {
"@babel/plugin-proposal-async-generator-functions": {
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/parser": {
"@babel/plugin-syntax-async-generators": "^7.2.0"
"@babel/plugin-proposal-decorators": {
"@babel/plugin-proposal-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-decorators": "^7.2.0"
"@babel/plugin-proposal-json-strings": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-json-strings": "^7.2.0"
"@babel/plugin-proposal-object-rest-spread": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-object-rest-spread": "^7.2.0"
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-async-generators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-typescript": {
"@babel/plugin-transform-arrow-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-async-to-generator": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/plugin-transform-block-scoped-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-block-scoping": {
"@babel/plugin-transform-classes": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-transform-computed-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-destructuring": {
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/plugin-transform-flow-strip-types": {
"@babel/plugin-syntax-flow": "^7.2.0"
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-function-name": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/plugin-transform-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-amd": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-commonjs": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-simple-access": "^7.1.0"
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/plugin-transform-modules-umd": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-new-target": {
"@babel/plugin-transform-object-super": {
"@babel/plugin-transform-parameters": {
"@babel/helper-replace-supers": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/plugin-transform-react-constant-elements": {
"@babel/plugin-transform-react-display-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-react-jsx": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/helper-builder-react-jsx": "^7.3.0",
"@babel/plugin-transform-react-jsx-self": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-react-jsx-source": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-regenerator": {
"@babel/plugin-transform-runtime": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-regex": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-template-literals": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typescript": {
"@babel/plugin-transform-unicode-regex": {
"@babel/plugin-syntax-typescript": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-regex": "^7.0.0",
"@babel/preset-env": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-json-strings": "^7.2.0",
"@babel/plugin-syntax-async-generators": "^7.2.0",
"@babel/plugin-syntax-json-strings": "^7.2.0",
"@babel/plugin-transform-block-scoping": "^7.2.0",
"@babel/plugin-transform-classes": "^7.2.0",
"@babel/plugin-transform-destructuring": "^7.2.0",
"@babel/plugin-transform-for-of": "^7.2.0",
"@babel/plugin-transform-duplicate-keys": "^7.2.0",
"@babel/plugin-transform-dotall-regex": "^7.2.0",
"@babel/plugin-transform-literals": "^7.2.0",
"@babel/plugin-transform-function-name": "^7.2.0",
"@babel/plugin-transform-modules-amd": "^7.2.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-modules-umd": "^7.2.0",
"@babel/plugin-transform-object-super": "^7.2.0",
"@babel/plugin-transform-parameters": "^7.2.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-spread": "^7.2.0",
"@babel/plugin-transform-sticky-regex": "^7.2.0",
"@babel/plugin-transform-typeof-symbol": "^7.2.0",
"@babel/preset-react": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.2.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/preset-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-typescript": "^7.1.0"
"regenerator-runtime": {
"dependencies": {
"@babel/runtime": {
"@babel/template": {
"@babel/code-frame": "^7.0.0",
"@babel/types": "^7.2.2"
"@babel/parser": "^7.2.2",
"@babel/traverse": {
"@babel/generator": "^7.2.2",
"@babel/code-frame": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/parser": "^7.2.3",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/types": "^7.2.2",
"@csstools/convert-colors": {
"@babel/types": {
"@nodelib/fs.stat": {
"@svgr/babel-plugin-add-jsx-attribute": {
"@mrmlnc/readdir-enhanced": {
"@svgr/babel-plugin-remove-jsx-attribute": {
"@svgr/babel-plugin-remove-jsx-empty-expression": {
"@svgr/babel-plugin-replace-jsx-attribute-value": {
"@svgr/babel-plugin-svg-dynamic-title": {
"@svgr/babel-plugin-svg-em-dimensions": {
"@svgr/babel-plugin-transform-svg-component": {
"@svgr/babel-plugin-transform-react-native-svg": {
"@svgr/babel-preset": {
"@svgr/babel-plugin-svg-dynamic-title": "^4.0.0",
"@svgr/babel-plugin-add-jsx-attribute": "^4.0.0",
"@svgr/babel-plugin-svg-em-dimensions": "^4.0.0",
"@babel/types": "^7.1.6"
"@svgr/hast-util-to-babel-ast": {
"@svgr/plugin-jsx": "^4.1.0",
"@svgr/babel-preset": "^4.1.0",
"@svgr/plugin-jsx": {
"@svgr/hast-util-to-babel-ast": "^4.1.0",
"@babel/core": "^7.1.6",
"@svgr/plugin-svgo": {
"@svgr/webpack": {
"@babel/core": "^7.1.6",
"@babel/preset-env": "^7.1.6",
"@svgr/core": "^4.1.0",
"@babel/preset-react": "^7.0.0",
"@svgr/plugin-jsx": "^4.1.0",
"@types/tapable": {
"@svgr/plugin-svgo": "^4.0.3",
"@types/node": "*",
"@types/vfile": {
"@types/unist": "*",
"@types/unist": {
"@types/vfile-message": {
"@types/vfile-message": "*"
"@types/node": "*",
"@webassemblyjs/ast": {
"@types/unist": "*"
"@webassemblyjs/helper-wasm-bytecode": "1.7.11",
"@webassemblyjs/wast-parser": "1.7.11"
"@webassemblyjs/helper-module-context": "1.7.11",
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/wast-printer": "1.7.11"
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/ast": "1.7.11",
"@webassemblyjs/helper-wasm-bytecode": "1.7.11",
"@webassemblyjs/helper-buffer": "1.7.11",
"@webassemblyjs/leb128": {
"@webassemblyjs/wasm-gen": "1.7.11"
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/ast": "1.7.11",
"@webassemblyjs/ieee754": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/utf8": {
"@webassemblyjs/wasm-edit": {
"@webassemblyjs/wasm-gen": "1.7.11",
"@webassemblyjs/helper-wasm-bytecode": "1.7.11",
"@webassemblyjs/helper-buffer": "1.7.11",
"@webassemblyjs/helper-wasm-section": "1.7.11",
"@webassemblyjs/wast-printer": "1.7.11"
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/wasm-opt": "1.7.11",
"@webassemblyjs/wasm-parser": "1.7.11",
"@webassemblyjs/leb128": "1.7.11",
"@webassemblyjs/ast": "1.7.11",
"@webassemblyjs/ieee754": "1.7.11",
"@webassemblyjs/helper-wasm-bytecode": "1.7.11",
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/ast": "1.7.11",
"@webassemblyjs/utf8": "1.7.11"
"@webassemblyjs/helper-buffer": "1.7.11",
"@webassemblyjs/wasm-gen": "1.7.11",
"@webassemblyjs/ast": "1.7.11",
"@webassemblyjs/wasm-parser": "1.7.11"
"@webassemblyjs/helper-wasm-bytecode": "1.7.11",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/ieee754": "1.7.11",
"@webassemblyjs/leb128": "1.7.11",
"@webassemblyjs/utf8": "1.7.11"
"@webassemblyjs/helper-api-error": "1.7.11",
"@webassemblyjs/wast-parser": {
"@webassemblyjs/helper-api-error": "1.7.11",
"@webassemblyjs/ast": "1.7.11",
"@webassemblyjs/helper-fsm": "1.7.11",
"@webassemblyjs/helper-code-frame": "1.7.11",
"@xtuc/long": "4.2.1"
"@webassemblyjs/wast-printer": {
"@webassemblyjs/ast": "1.7.11",
"@xtuc/ieee754": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/wast-parser": "1.7.11",
"acorn-dynamic-import": {
"dependencies": {
"acorn-globals": {
"ajv-keywords": {
"ansi-escapes": {
"alphanum-sort": {
"arr-diff": {
"dependencies": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-number": {
"requires": {
"is-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"append-transform": {
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-flatten": {
"array-includes": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"array-reduce": {
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"array-unique": {
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"inherits": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"assign-symbols": {
"requires": {
"ast-types-flow": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"autoprefixer": {
"astral-regex": {
"async-limiter": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"axobject-query": {
"babel-code-frame": {
"dependencies": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"ansi-styles": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"requires": {
"js-tokens": {
"babel-eslint": {
"supports-color": {
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.0.0",
"@babel/traverse": "^7.0.0",
"@babel/types": "^7.0.0",
"babel-generator": {
"babel-extract-comments": {
"dependencies": {
"babel-helpers": {
"babel-loader": {
"babel-messages": {
"babel-plugin-istanbul": {
"babel-plugin-dynamic-import-node": {
"babel-plugin-jest-hoist": {
"babel-plugin-macros": {
"babel-plugin-named-asset-import": {
"babel-plugin-syntax-object-rest-spread": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"babel-plugin-transform-object-rest-spread": {
"babel-plugin-transform-react-remove-prop-types": {
"babel-preset-react-app": {
"@babel/core": "7.2.2",
"babel-preset-jest": {
"@babel/plugin-proposal-decorators": "7.3.0",
"@babel/plugin-proposal-class-properties": "7.3.0",
"@babel/plugin-syntax-dynamic-import": "7.2.0",
"@babel/plugin-transform-classes": "7.2.2",
"@babel/plugin-transform-destructuring": "7.3.2",
"@babel/plugin-transform-runtime": "7.2.0",
"@babel/preset-react": "7.0.0",
"@babel/preset-env": "7.3.1",
"@babel/preset-typescript": "7.1.0",
"@babel/runtime": "7.3.1",
"@babel/plugin-transform-classes": {
"requires": {
"dependencies": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"babel-register": {
"dependencies": {
"babel-core": {
"requires": {
"requires": {
"babel-runtime": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"babel-template": {
"dependencies": {
"babel-traverse": {
"requires": {
"dependencies": {
"to-fast-properties": {
"balanced-match": {
"dependencies": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-accessor-descriptor": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"bcrypt-pbkdf": {
"requires": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"binary-extensions": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"dependencies": {
"requires": {
"iconv-lite": {
"requires": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"brace-expansion": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browserify-aes": {
"browser-process-hrtime": {
"browser-resolve": {
"dependencies": {
"browserify-cipher": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-rsa": {
"browserify-des": {
"browserify-sign": {
"builtin-status-codes": {
"browserslist": {
"browserify-zlib": {
"buffer-indexof": {
"dependencies": {
"requires": {
"lru-cache": {
"call-me-maybe": {
"capture-exit": {
"caniuse-lite": {
"caller-callsite": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"array-unique": {
"dependencies": {
"case-sensitive-paths-webpack-plugin": {
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"requires": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"requires": {
"fsevents": {
"requires": {
"fill-range": {
"requires": {
"abbrev": {
"dependencies": {
"aproba": {
"ansi-regex": {
"are-we-there-yet": {
"requires": {
"balanced-match": {
"requires": {
"brace-expansion": {
"chownr": {
"concat-map": {
"code-point-at": {
"console-control-strings": {
"core-util-is": {
"debug": {
"requires": {
"deep-extend": {
"delegates": {
"detect-libc": {
"fs.realpath": {
"requires": {
"gauge": {
"requires": {
"fs-minipass": {
"requires": {
"glob": {
"has-unicode": {
"iconv-lite": {
"ignore-walk": {
"requires": {
"requires": {
"inherits": {
"inflight": {
"requires": {
"requires": {
"is-fullwidth-code-point": {
"minimatch": {
"minimist": {
"isarray": {
"requires": {
"requires": {
"minipass": {
"minizlib": {
"mkdirp": {
"requires": {
"requires": {
"needle": {
"requires": {
"node-pre-gyp": {
"requires": {
"nopt": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"npmlog": {
"requires": {
"requires": {
"object-assign": {
"number-is-nan": {
"requires": {
"once": {
"os-homedir": {
"os-tmpdir": {
"osenv": {
"requires": {
"process-nextick-args": {
"path-is-absolute": {
"requires": {
"dependencies": {
"readable-stream": {
"minimist": {
"requires": {
"rimraf": {
"requires": {
"safer-buffer": {
"safe-buffer": {
"semver": {
"set-blocking": {
"signal-exit": {
"requires": {
"string-width": {
"string_decoder": {
"requires": {
"requires": {
"strip-json-comments": {
"strip-ansi": {
"requires": {
"util-deprecate": {
"wide-align": {
"requires": {
"wrappy": {
"yallist": {
"glob-parent": {
"dependencies": {
"requires": {
"requires": {
"is-glob": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"requires": {
"normalize-path": {
"chrome-trace-event": {
"dependencies": {
"circular-json": {
"define-property": {
"requires": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"source-map": {
"dependencies": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"requires": {
"ansi-regex": {
"dependencies": {
"strip-ansi": {
"@types/q": "^1.5.1",
"collection-visit": {
"color-convert": {
"code-point-at": {
"combined-stream": {
"color-string": {
"comma-separated-tokens": {
"requires": {
"component-emitter": {
"compressible": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"dependencies": {
"concat-stream": {
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"connect-history-api-fallback": {
"confusing-browser-globals": {
"contains-path": {
"constants-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"content-type": {
"console-browserify": {
"content-disposition": {
"convert-source-map": {
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"cookie-signature": {
"copy-descriptor": {
"core-util-is": {
"copy-concurrently": {
"crypto-browserify": {
"requires": {
"css-blank-pseudo": {
"dependencies": {
"supports-color": {
"source-map": {
"requires": {
"css-color-names": {
"requires": {
"source-map": {
"css-declaration-sorter": {
"dependencies": {
"requires": {
"supports-color": {
"css-has-pseudo": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"css-prefers-color-scheme": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"css-select-base-adapter": {
"css-selector-tokenizer": {
"dependencies": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"requires": {
"regjsparser": {
"regjsgen": {
"regexpu-core": {
"css-unit-converter": {
"css-url-regex": {
"requires": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"requires": {
"source-map": {
"dependencies": {
"supports-color": {
"cssnano-preset-default": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"cssnano-util-get-arguments": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"cssnano-util-get-match": {
"cssnano-util-raw-cache": {
"requires": {
"dependencies": {
"cssnano-util-same-parent": {
"source-map": {
"requires": {
"supports-color": {
"dependencies": {
"requires": {
"damerau-levenshtein": {
"css-tree": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"whatwg-url": {
"dependencies": {
"requires": {
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"decode-uri-component": {
"dependencies": {
"default-gateway": {
"dependencies": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"requires": {
"default-require-extensions": {
"define-properties": {
"define-property": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"dependencies": {
"requires": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"pify": {
"delayed-stream": {
"detect-newline": {
"detect-indent": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"dependencies": {
"detect-port-alt": {
"requires": {
"diffie-hellman": {
"dependencies": {
"requires": {
"path-type": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"dom-converter": {
"dom-serializer": {
"domain-browser": {
"domelementtype": {
"domexception": {
"dotenv-expand": {
"electron-to-chromium": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"es-to-primitive": {
"enhanced-resolve": {
"escape-string-regexp": {
"dependencies": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"source-map": {
"@babel/code-frame": "^7.0.0",
"dependencies": {
"ansi-regex": {
"eslint-scope": {
"import-fresh": {
"requires": {
"resolve-from": {
"requires": {
"strip-ansi": {
"requires": {
"eslint-config-react-app": {
"eslint-import-resolver-node": {
"end-of-stream": {
"dependencies": {
"eslint-loader": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"eslint-module-utils": {
"eslint-plugin-flowtype": {
"eslint-plugin-import": {
"dependencies": {
"requires": {
"doctrine": {
"load-json-file": {
"requires": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"requires": {
"parse-json": {
"path-type": {
"requires": {
"requires": {
"read-pkg": {
"requires": {
"requires": {
"read-pkg-up": {
"strip-bom": {
"eslint-plugin-jsx-a11y": {
"dependencies": {
"emoji-regex": {
"eslint-plugin-react": {
"eslint-scope": {
"eslint-utils": {
"eslint-visitor-keys": {
"eventemitter3": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"evp_bytestokey": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"dependencies": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"cross-spawn": {
"requires": {
"expand-brackets": {
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"expand-range": {
"dependencies": {
"array-flatten": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"is-extendable": {
"external-editor": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"fast-deep-equal": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"@nodelib/fs.stat": "^1.1.2",
"@mrmlnc/readdir-enhanced": "^2.2.1",
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"glob-parent": {
"requires": {
"requires": {
"dependencies": {
"is-glob": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-extglob": {
"is-descriptor": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"is-number": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"micromatch": {
"requires": {
"fast-json-stable-stringify": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"fast-levenshtein": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"faye-websocket": {
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"file-entry-cache": {
"filename-regex": {
"figgy-pudding": {
"dependencies": {
"requires": {
"isobject": {
"finalhandler": {
"dependencies": {
"find-cache-dir": {
"requires": {
"dependencies": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"follow-redirects": {
"flush-write-stream": {
"dependencies": {
"requires": {
"forever-agent": {
"fork-ts-checker-webpack-plugin-alt": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"micromatch": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"fragment-cache": {
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"fs-write-stream-atomic": {
"dependencies": {
"ansi-regex": {
"are-we-there-yet": {
"requires": {
"balanced-match": {
"brace-expansion": {
"requires": {
"code-point-at": {
"console-control-strings": {
"concat-map": {
"core-util-is": {
"requires": {
"deep-extend": {
"delegates": {
"detect-libc": {
"requires": {
"fs-minipass": {
"requires": {
"has-unicode": {
"requires": {
"fs.realpath": {
"iconv-lite": {
"requires": {
"ignore-walk": {
"requires": {
"inflight": {
"inherits": {
"is-fullwidth-code-point": {
"requires": {
"requires": {
"minimatch": {
"requires": {
"minipass": {
"minimist": {
"requires": {
"minizlib": {
"requires": {
"requires": {
"node-pre-gyp": {
"requires": {
"requires": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"requires": {
"object-assign": {
"requires": {
"number-is-nan": {
"os-homedir": {
"requires": {
"os-tmpdir": {
"requires": {
"path-is-absolute": {
"process-nextick-args": {
"requires": {
"dependencies": {
"minimist": {
"readable-stream": {
"requires": {
"safe-buffer": {
"safer-buffer": {
"requires": {
"set-blocking": {
"signal-exit": {
"string-width": {
"requires": {
"requires": {
"string_decoder": {
"requires": {
"strip-json-comments": {
"strip-ansi": {
"requires": {
"wide-align": {
"util-deprecate": {
"requires": {
"functional-red-black-tree": {
"function-bind": {
"get-caller-file": {
"get-own-enumerable-property-symbols": {
"glob-to-regexp": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"global-prefix": {
"global-modules": {
"dependencies": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"handle-thing": {
"source-map": {
"dependencies": {
"har-validator": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"harmony-reflect": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"is-number": {
"requires": {
"dependencies": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"hast-util-from-parse5": {
"hast-util-parse-selector": {
"hex-color-regex": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"hosted-git-info": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"html-encoding-sniffer": {
"html-comment-regex": {
"html-entities": {
"dependencies": {
"html-minifier": {
"commander": {
"@types/tapable": "1.0.2",
"html-webpack-plugin": {
"dependencies": {
"domutils": {
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"readable-stream": {
"requires": {
"string_decoder": {
"http-deceiver": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-parser-js": {
"dependencies": {
"http-proxy-middleware": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"fill-range": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"extend-shallow": {
"requires": {
"is-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-extglob": {
"is-number": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"http-signature": {
"https-browserify": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"icss-replace-symbols": {
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"identity-obj-proxy": {
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"import-fresh": {
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"import-local": {
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"requires": {
"dependencies": {
"dependencies": {
"ansi-regex": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"strip-ansi": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"is-accessor-descriptor": {
"is-absolute-url": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"is-binary-path": {
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-color-stop": {
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-data-descriptor": {
"is-date-object": {
"is-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"dependencies": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"is-directory": {
"is-equal-shallow": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"is-extendable": {
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"is-fullwidth-code-point": {
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"is-generator-fn": {
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-path-inside": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"is-path-in-cwd": {
"is-plain-obj": {
"is-plain-object": {
"is-posix-bracket": {
"is-primitive": {
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"is-resolvable": {
"is-typedarray": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"istanbul-api": {
"istanbul-lib-hook": {
"istanbul-lib-coverage": {
"istanbul-lib-instrument": {
"istanbul-lib-report": {
"dependencies": {
"has-flag": {
"requires": {
"supports-color": {
"istanbul-lib-source-maps": {
"requires": {
"dependencies": {
"istanbul-reports": {
"ansi-regex": {
"dependencies": {
"jest-cli": {
"strip-ansi": {
"requires": {
"requires": {
"dependencies": {
"jest-changed-files": {
"babel-core": {
"requires": {
"requires": {
"jest-docblock": {
"jest-environment-node": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"jest-get-type": {
"jest-haste-map": {
"jest-environment-jsdom": {
"jest-jasmine2": {
"jest-message-util": {
"jest-matcher-utils": {
"jest-leak-detector": {
"jest-regex-util": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-resolve": {
"jest-pnp-resolver": {
"jest-resolve-dependencies": {
"dependencies": {
"source-map": {
"requires": {
"source-map-support": {
"jest-runtime": {
"dependencies": {
"babel-core": {
"requires": {
"requires": {
"strip-bom": {
"jest-serializer": {
"source-map": {
"jest-snapshot": {
"jest-validate": {
"jest-watch-typeahead": {
"dependencies": {
"dependencies": {
"ansi-regex": {
"strip-ansi": {
"requires": {
"jest-watcher": {
"dependencies": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"js-levenshtein": {
"json-parse-better-errors": {
"json-schema-traverse": {
"json-stable-stringify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"json-stable-stringify-without-jsonify": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"jsx-ast-utils": {
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"last-call-webpack-plugin": {
"json-stringify-safe": {
"dependencies": {
"parse-json": {
"load-json-file": {
"requires": {
"loader-fs-cache": {
"dependencies": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"find-cache-dir": {
"requires": {
"loader-utils": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"loader-runner": {
"lodash._reinterpolate": {
"integrity": "sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk="
"lodash.camelcase": {
"lodash.memoize": {
"lodash.sortby": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.template": {
"loose-envify": {
"lodash.templatesettings": {
"dependencies": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"map-age-cleaner": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-descriptors": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"miller-rabin": {
"merge-stream": {
"mini-css-extract-plugin": {
"minimalistic-assert": {
"minimalistic-crypto-utils": {
"dependencies": {
"is-extendable": {
"requires": {
"mixin-object": {
"dependencies": {
"dependencies": {
"minimist": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"move-concurrently": {
"multicast-dns": {
"multicast-dns-service-types": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"array-unique": {
"natural-compare": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"node-libs-browser": {
"dependencies": {
"punycode": {
"node-notifier": {
"node-releases": {
"normalize-package-data": {
"normalize-path": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"normalize-range": {
"normalize-url": {
"num2fraction": {
"npm-run-path": {
"number-is-nan": {
"object-assign": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"define-property": {
"requires": {
"dependencies": {
"object-visit": {
"object.assign": {
"object.fromentries": {
"object.getownpropertydescriptors": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"object.values": {
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"dependencies": {
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"minimist": {
"wordwrap": {
"integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="
"optimize-css-assets-webpack-plugin": {
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"os-browserify": {
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"p-is-promise": {
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"parallel-transform": {
"parent-module": {
"callsites": {
"dependencies": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"path-browserify": {
"path-dirname": {
"path-is-absolute": {
"path-is-inside": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"path-to-regexp": {
"pinkie-promise": {
"performance-now": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"dependencies": {
"requires": {
"path-exists": {
"requires": {
"pnp-webpack-plugin": {
"dependencies": {
"requires": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"posix-character-classes": {
"dependencies": {
"source-map": {
"dependencies": {
"postcss-attribute-case-insensitive": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-calc": {
"requires": {
"postcss-color-functional-notation": {
"supports-color": {
"source-map": {
"requires": {
"dependencies": {
"source-map": {
"supports-color": {
"requires": {
"postcss-color-gray": {
"@csstools/convert-colors": "^1.4.0",
"dependencies": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"postcss-color-hex-alpha": {
"requires": {
"dependencies": {
"source-map": {
"supports-color": {
"requires": {
"postcss-color-mod-function": {
"dependencies": {
"@csstools/convert-colors": "^1.4.0",
"requires": {
"source-map": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-color-rebeccapurple": {
"supports-color": {
"source-map": {
"requires": {
"requires": {
"dependencies": {
"postcss-colormin": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-convert-values": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"postcss-custom-media": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"postcss-custom-properties": {
"source-map": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"requires": {
"postcss-custom-selectors": {
"dependencies": {
"source-map": {
"requires": {
"requires": {
"supports-color": {
"postcss-dir-pseudo-class": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"postcss-discard-comments": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-discard-duplicates": {
"requires": {
"source-map": {
"supports-color": {
"postcss-discard-empty": {
"requires": {
"source-map": {
"requires": {
"dependencies": {
"supports-color": {
"postcss-discard-overridden": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-double-position-gradients": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-env-function": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-flexbugs-fixes": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-focus-visible": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"dependencies": {
"postcss-focus-within": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"postcss-font-variant": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"postcss-gap-properties": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"dependencies": {
"postcss-image-set-function": {
"requires": {
"source-map": {
"requires": {
"requires": {
"supports-color": {
"source-map": {
"postcss-initial": {
"requires": {
"dependencies": {
"supports-color": {
"@csstools/convert-colors": "^1.4.0",
"requires": {
"postcss-lab-function": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"postcss-load-config": {
"requires": {
"dependencies": {
"cosmiconfig": {
"requires": {
"postcss-loader": {
"requires": {
"source-map": {
"dependencies": {
"supports-color": {
"requires": {
"postcss-logical": {
"source-map": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"postcss-media-minmax": {
"requires": {
"dependencies": {
"supports-color": {
"source-map": {
"requires": {
"postcss-merge-longhand": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"postcss-merge-rules": {
"requires": {
"dependencies": {
"requires": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-minify-font-values": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-minify-gradients": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-minify-params": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-minify-selectors": {
"requires": {
"dependencies": {
"postcss-selector-parser": {
"source-map": {
"requires": {
"supports-color": {
"postcss-modules-extract-imports": {
"requires": {
"postcss-modules-local-by-default": {
"postcss-modules-values": {
"postcss-modules-scope": {
"dependencies": {
"requires": {
"postcss-nesting": {
"source-map": {
"requires": {
"postcss-normalize-charset": {
"supports-color": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"postcss-normalize-display-values": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-normalize-positions": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"dependencies": {
"postcss-normalize-repeat-style": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"postcss-normalize-string": {
"requires": {
"dependencies": {
"source-map": {
"supports-color": {
"postcss-normalize-timing-functions": {
"requires": {
"dependencies": {
"source-map": {
"supports-color": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"postcss-normalize-unicode": {
"requires": {
"source-map": {
"supports-color": {
"dependencies": {
"postcss-normalize-url": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-whitespace": {
"source-map": {
"supports-color": {
"requires": {
"requires": {
"dependencies": {
"postcss-ordered-values": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-overflow-shorthand": {
"requires": {
"dependencies": {
"supports-color": {
"source-map": {
"requires": {
"postcss-page-break": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"postcss-place": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-preset-env": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"postcss-pseudo-class-any-link": {
"supports-color": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"requires": {
"postcss-reduce-initial": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"postcss-reduce-transforms": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"postcss-replace-overflow-wrap": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-safe-parser": {
"requires": {
"source-map": {
"supports-color": {
"postcss-selector-matches": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"postcss-selector-not": {
"requires": {
"dependencies": {
"source-map": {
"supports-color": {
"postcss-selector-parser": {
"dependencies": {
"requires": {
"postcss-svgo": {
"requires": {
"dependencies": {
"supports-color": {
"source-map": {
"postcss-unique-selectors": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"postcss-value-parser": {
"postcss-values-parser": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"pretty-error": {
"pretty-format": {
"pretty-bytes": {
"dependencies": {
"process-nextick-args": {
"promise-inflight": {
"property-information": {
"ansi-regex": {
"public-encrypt": {
"dependencies": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"requires": {
"querystringify": {
"querystring-es3": {
"is-number": {
"range-parser": {
"dependencies": {
"dependencies": {
"iconv-lite": {
"requires": {
"react-app-polyfill": {
"dependencies": {
"react-dev-utils": {
"@babel/code-frame": "7.0.0",
"ansi-regex": {
"dependencies": {
"requires": {
"requires": {
"inquirer": {
"requires": {
"loader-utils": {
"locate-path": {
"requires": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"strip-ansi": {
"react-error-overlay": {
"requires": {
"react-scripts": {
"@svgr/webpack": "4.1.0",
"@babel/core": "7.2.2",
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"path-exists": {
"dependencies": {
"requires": {
"requires": {
"readable-stream": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"requires": {
"define-property": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"realpath-native": {
"micromatch": {
"requires": {
"recursive-readdir": {
"regenerate-unicode-properties": {
"regenerator-runtime": {
"regenerator-transform": {
"regexpu-core": {
"dependencies": {
"rehype-parse": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"remove-trailing-separator": {
"dependencies": {
"css-select": {
"requires": {
"domutils": {
"repeat-element": {
"requires": {
"repeat-string": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"punycode": {
"dependencies": {
"tough-cookie": {
"requires": {
"request-promise-core": {
"request-promise-native": {
"require-directory": {
"require-from-string": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-main-filename": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"requires-port": {
"resolve-from": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"restore-cursor": {
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"safer-buffer": {
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"define-property": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"fill-range": {
"extend-shallow": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"is-number": {
"requires": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"dependencies": {
"clone-deep": {
"requires": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"requires": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"shallow-clone": {
"requires": {
"dependencies": {
"kind-of": {
"dependencies": {
"schema-utils": {
"serialize-javascript": {
"requires": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"serve-static": {
"requires": {
"dependencies": {
"set-blocking": {
"dependencies": {
"extend-shallow": {
"requires": {
"setimmediate": {
"setprototypeof": {
"shallow-clone": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"dependencies": {
"lazy-cache": {
"requires": {
"shebang-command": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"shebang-regex": {
"simple-swizzle": {
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"dependencies": {
"is-arrayish": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"snapdragon-node": {
"dependencies": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"requires": {
"is-descriptor": {
"snapdragon-util": {
"faye-websocket": {
"dependencies": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"sockjs-client": {
"dependencies": {
"requires": {
"requires": {
"source-list-map": {
"source-map-resolve": {
"source-map-support": {
"source-map-url": {
"space-separated-tokens": {
"spdx-exceptions": {
"spdx-correct": {
"spdx-expression-parse": {
"spdx-license-ids": {
"spdy-transport": {
"dependencies": {
"readable-stream": {
"requires": {
"split-string": {
"static-extend": {
"dependencies": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"define-property": {
"stealthy-require": {
"requires": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"stream-shift": {
"stream-browserify": {
"string-length": {
"dependencies": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"ansi-regex": {
"strip-ansi": {
"requires": {
"string-width": {
"dependencies": {
"strip-ansi": {
"ansi-regex": {
"string_decoder": {
"stringify-object": {
"requires": {
"strip-comments": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"style-loader": {
"strip-json-comments": {
"dependencies": {
"requires": {
"postcss-selector-parser": {
"source-map": {
"requires": {
"supports-color": {
"supports-color": {
"requires": {
"dependencies": {
"ansi-regex": {
"string-width": {
"requires": {
"requires": {
"strip-ansi": {
"dependencies": {
"source-map": {
"source-map-support": {
"commander": {
"requires": {
"dependencies": {
"terser-webpack-plugin": {
"source-map": {
"test-exclude": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"timers-browserify": {
"to-arraybuffer": {
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"to-fast-properties": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"to-object-path": {
"is-number": {
"requires": {
"dependencies": {
"to-regex-range": {
"tough-cookie": {
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"tty-browserify": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"tunnel-agent": {
"dependencies": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"source-map": {
"commander": {
"unicode-canonical-property-names-ecmascript": {
"unicode-match-property-ecmascript": {
"unicode-match-property-value-ecmascript": {
"unicode-property-aliases-ecmascript": {
"@types/unist": "^2.0.0",
"@types/vfile": "^3.0.0",
"dependencies": {
"extend-shallow": {
"requires": {
"set-value": {
"requires": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"unique-filename": {
"unist-util-stringify-position": {
"universalify": {
"dependencies": {
"has-value": {
"requires": {
"dependencies": {
"isobject": {
"requires": {
"has-values": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"punycode": {
"dependencies": {
"util-deprecate": {
"util.promisify": {
"validate-npm-package-license": {
"is-buffer": {
"dependencies": {
"vfile-message": {
"vm-browserify": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"web-namespaces": {
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"webidl-conversions": {
"@webassemblyjs/ast": "1.7.11",
"@webassemblyjs/wasm-edit": "1.7.11",
"@webassemblyjs/helper-module-context": "1.7.11",
"@webassemblyjs/wasm-parser": "1.7.11",
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"dependencies": {
"arr-diff": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"array-unique": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"eslint-scope": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"define-property": {
"dependencies": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"requires": {
"dependencies": {
"requires": {
"micromatch": {
"kind-of": {
"requires": {
"schema-utils": {
"requires": {
"webpack-dev-server": {
"dependencies": {
"webpack-dev-middleware": {
"camelcase": {
"requires": {
"requires": {
"requires": {
"decamelize": {
"requires": {
"get-stream": {
"requires": {
"import-local": {
"requires": {
"requires": {
"invert-kv": {
"locate-path": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"requires": {
"yargs-parser": {
"requires": {
"requires": {
"requires": {
"webpack-sources": {
"webpack-manifest-plugin": {
"source-map": {
"websocket-driver": {
"dependencies": {
"websocket-extensions": {
"whatwg-encoding": {
"which-module": {
"whatwg-fetch": {
"whatwg-mimetype": {
"workbox-background-sync": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"workbox-build": {
"dependencies": {
"workbox-broadcast-cache-update": {
"fs-extra": {
"requires": {
"workbox-cache-expiration": {
"workbox-cacheable-response": {
"workbox-core": {
"workbox-google-analytics": {
"workbox-navigation-preload": {
"workbox-routing": {
"workbox-precaching": {
"workbox-streams": {
"workbox-range-requests": {
"workbox-strategies": {
"dependencies": {
"workbox-webpack-plugin": {
"is-fullwidth-code-point": {
"requires": {
"string-width": {
"requires": {
"write-file-atomic": {
"xml-name-validator": {
"yargs-parser": {
"camelcase": {
"dependencies": {
"@babel/code-frame": {
"@babel/highlight": "^7.0.0"
"@babel/helpers": "^7.1.0",
"@babel/generator": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.1.0",
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-annotate-as-pure": {
"@babel/types": "^7.0.0"
"@babel/helper-builder-react-jsx": {
"@babel/types": "^7.0.0"
"@babel/generator": {
"@babel/helper-call-delegate": {
"@babel/types": "^7.3.0",
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/types": "^7.3.0",
"@babel/traverse": "^7.1.0",
"@babel/helper-define-map": {
"@babel/types": "^7.0.0"
"@babel/types": "^7.0.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-explode-assignable-expression": {
"@babel/types": "^7.0.0"
"@babel/traverse": "^7.1.0",
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/template": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/helper-get-function-arity": {
"@babel/types": "^7.0.0"
"@babel/helper-function-name": {
"@babel/helper-member-expression-to-functions": {
"@babel/types": "^7.0.0"
"@babel/helper-hoist-variables": {
"@babel/helper-module-imports": {
"@babel/types": "^7.0.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/types": "^7.0.0"
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/types": "^7.2.2",
"@babel/helper-simple-access": "^7.1.0",
"@babel/helper-optimise-call-expression": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.2.2",
"@babel/helper-module-transforms": {
"@babel/helper-plugin-utils": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-remap-async-to-generator": {
"@babel/helper-wrap-function": "^7.1.0",
"@babel/template": "^7.1.0",
"@babel/helper-regex": {
"@babel/traverse": "^7.1.0",
"@babel/helper-replace-supers": {
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/traverse": "^7.2.3",
"@babel/types": "^7.0.0"
"@babel/helper-simple-access": {
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/helper-split-export-declaration": {
"@babel/types": "^7.0.0"
"@babel/helper-wrap-function": {
"@babel/helper-function-name": "^7.1.0",
"@babel/traverse": "^7.1.0",
"@babel/types": "^7.0.0"
"@babel/template": "^7.1.0",
"@babel/types": "^7.2.0"
"@babel/helpers": {
"@babel/traverse": "^7.1.5",
"@babel/types": "^7.3.0"
"@babel/template": "^7.1.2",
"@babel/plugin-proposal-async-generator-functions": {
"@babel/highlight": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/parser": {
"@babel/helper-remap-async-to-generator": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/plugin-proposal-class-properties": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-syntax-async-generators": "^7.2.0"
"@babel/plugin-syntax-class-properties": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-decorators": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-proposal-json-strings": {
"@babel/plugin-syntax-decorators": "^7.1.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-json-strings": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-object-rest-spread": {
"@babel/plugin-syntax-object-rest-spread": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-proposal-unicode-property-regex": {
"@babel/plugin-syntax-async-generators": {
"@babel/plugin-proposal-optional-catch-binding": {
"@babel/helper-regex": "^7.0.0",
"@babel/plugin-syntax-class-properties": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-dynamic-import": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-decorators": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-json-strings": {
"@babel/plugin-syntax-flow": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-object-rest-spread": {
"@babel/plugin-syntax-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-typescript": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-syntax-optional-catch-binding": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-arrow-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-async-to-generator": {
"@babel/plugin-transform-block-scoped-functions": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-remap-async-to-generator": "^7.1.0"
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-block-scoping": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-optimise-call-expression": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-classes": {
"@babel/helper-replace-supers": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/plugin-transform-computed-properties": {
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-dotall-regex": {
"@babel/helper-regex": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-duplicate-keys": {
"@babel/plugin-syntax-flow": "^7.0.0"
"@babel/plugin-transform-exponentiation-operator": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-for-of": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-flow-strip-types": {
"@babel/plugin-transform-function-name": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-amd": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-modules-commonjs": {
"@babel/plugin-transform-literals": {
"@babel/helper-module-transforms": "^7.1.0",
"@babel/helper-simple-access": "^7.1.0"
"@babel/helper-hoist-variables": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-modules-systemjs": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-module-transforms": "^7.1.0",
"@babel/plugin-transform-modules-umd": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-new-target": {
"@babel/plugin-transform-object-super": {
"@babel/helper-replace-supers": "^7.1.0"
"@babel/plugin-transform-parameters": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-call-delegate": "^7.1.0",
"@babel/helper-get-function-arity": "^7.0.0",
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-react-constant-elements": {
"@babel/plugin-transform-react-display-name": {
"@babel/plugin-transform-react-jsx": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-builder-react-jsx": "^7.3.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx-self": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-react-jsx-source": {
"@babel/plugin-syntax-jsx": "^7.2.0"
"@babel/plugin-transform-regenerator": {
"@babel/plugin-transform-runtime": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-shorthand-properties": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-spread": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-sticky-regex": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0"
"@babel/plugin-transform-template-literals": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typeof-symbol": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/plugin-transform-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-syntax-typescript": "^7.2.0"
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-unicode-regex": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-regex": "^7.0.0",
"@babel/preset-env": {
"@babel/plugin-proposal-json-strings": "^7.2.0",
"@babel/plugin-syntax-async-generators": "^7.2.0",
"@babel/plugin-transform-block-scoping": "^7.2.0",
"@babel/plugin-transform-classes": "^7.2.0",
"@babel/plugin-syntax-json-strings": "^7.2.0",
"@babel/plugin-transform-destructuring": "^7.2.0",
"@babel/plugin-transform-duplicate-keys": "^7.2.0",
"@babel/plugin-transform-for-of": "^7.2.0",
"@babel/plugin-transform-dotall-regex": "^7.2.0",
"@babel/plugin-transform-function-name": "^7.2.0",
"@babel/plugin-transform-literals": "^7.2.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-modules-amd": "^7.2.0",
"@babel/plugin-transform-object-super": "^7.2.0",
"@babel/plugin-transform-parameters": "^7.2.0",
"@babel/plugin-transform-modules-umd": "^7.2.0",
"@babel/plugin-transform-regenerator": "^7.0.0",
"@babel/plugin-transform-sticky-regex": "^7.2.0",
"@babel/plugin-transform-spread": "^7.2.0",
"@babel/plugin-transform-typeof-symbol": "^7.2.0",
"@babel/preset-react": {
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/plugin-transform-react-jsx": "^7.0.0",
"@babel/plugin-transform-unicode-regex": "^7.2.0",
"@babel/plugin-transform-typescript": "^7.1.0"
"@babel/plugin-transform-react-jsx-self": "^7.0.0",
"@babel/runtime": {
"@babel/preset-typescript": {
"@babel/helper-plugin-utils": "^7.0.0",
"dependencies": {
"regenerator-runtime": {
"@babel/code-frame": "^7.0.0",
"@babel/template": {
"@babel/parser": "^7.2.2",
"@babel/types": "^7.2.2"
"@babel/code-frame": "^7.0.0",
"@babel/traverse": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-split-export-declaration": "^7.0.0",
"@babel/parser": "^7.2.3",
"@babel/generator": "^7.2.2",
"requires": {
"dependencies": {
"@babel/types": "^7.2.2",
"@mrmlnc/readdir-enhanced": {
"@csstools/convert-colors": {
"@nodelib/fs.stat": {
"@svgr/webpack": {
"@babel/types": {
"@babel/core": "^7.0.1",
"@babel/preset-env": "^7.0.0",
"@webassemblyjs/ast": {
"@svgr/core": "^2.4.1",
"@babel/preset-react": "^7.0.0",
"@webassemblyjs/helper-module-context": "1.7.6",
"@types/tapable": {
"@webassemblyjs/floating-point-hex-parser": {
"@webassemblyjs/wast-parser": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/helper-buffer": {
"@webassemblyjs/helper-api-error": {
"@webassemblyjs/helper-code-frame": {
"@webassemblyjs/helper-module-context": {
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/helper-wasm-bytecode": {
"@webassemblyjs/helper-fsm": {
"@webassemblyjs/helper-wasm-section": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/ieee754": {
"@xtuc/ieee754": "^1.2.0"
"@webassemblyjs/wasm-gen": "1.7.6"
"@webassemblyjs/leb128": {
"@webassemblyjs/utf8": {
"@webassemblyjs/wasm-edit": {
"@xtuc/long": "4.2.1"
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/helper-wasm-section": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6",
"@webassemblyjs/wasm-opt": "1.7.6",
"@webassemblyjs/wast-printer": "1.7.6"
"@webassemblyjs/wasm-gen": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-buffer": "1.7.6",
"@webassemblyjs/wasm-parser": "1.7.6"
"@webassemblyjs/wasm-opt": {
"@webassemblyjs/wasm-gen": "1.7.6",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-wasm-bytecode": "1.7.6",
"@webassemblyjs/wasm-parser": {
"@webassemblyjs/ieee754": "1.7.6",
"@webassemblyjs/utf8": "1.7.6"
"@webassemblyjs/wast-parser": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/leb128": "1.7.6",
"@webassemblyjs/helper-api-error": "1.7.6",
"@webassemblyjs/helper-code-frame": "1.7.6",
"@webassemblyjs/helper-fsm": "1.7.6",
"@xtuc/long": "4.2.1",
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/wast-printer": {
"@webassemblyjs/wast-parser": "1.7.6",
"@xtuc/ieee754": {
"acorn-dynamic-import": {
"@xtuc/long": "4.2.1"
"acorn-globals": {
"ajv-keywords": {
"alphanum-sort": {
"integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="
"ansi-escapes": {
"dependencies": {
"dependencies": {
"arr-diff": {
"array-unique": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"dependencies": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"expand-brackets": {
"requires": {
"requires": {
"requires": {
"define-property": {
"extend-shallow": {
"dependencies": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"fill-range": {
"requires": {
"dependencies": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"extend-shallow": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"micromatch": {
"append-transform": {
"integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
"array-filter": {
"integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="
"array-flatten": {
"requires": {
"array-includes": {
"array-reduce": {
"integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="
"integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="
"integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",
"dependencies": {
"inherits": {
"integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
"requires": {
"array-unique": {
"integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="
"assign-symbols": {
"astral-regex": {
"async-limiter": {
"ast-types-flow": {
"dependencies": {
"requires": {
"autoprefixer": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"babel-code-frame": {
"integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
"requires": {
"axobject-query": {
"integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
"dependencies": {
"ansi-styles": {
"js-tokens": {
"ansi-regex": {
"integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="
"requires": {
"strip-ansi": {
"supports-color": {
"babel-eslint": {
"requires": {
"@babel/code-frame": "^7.0.0",
"@babel/parser": "^7.0.0",
"@babel/types": "^7.0.0",
"@babel/traverse": "^7.0.0",
"babel-extract-comments": {
"babel-generator": {
"babel-helpers": {
"dependencies": {
"babel-messages": {
"babel-plugin-dynamic-import-node": {
"babel-plugin-istanbul": {
"dependencies": {
"locate-path": {
"babel-loader": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"babel-plugin-jest-hoist": {
"babel-plugin-named-asset-import": {
"babel-plugin-syntax-object-rest-spread": {
"babel-plugin-transform-object-rest-spread": {
"integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="
"requires": {
"babel-plugin-transform-react-remove-prop-types": {
"babel-plugin-macros": {
"babel-preset-react-app": {
"@babel/plugin-syntax-dynamic-import": "7.0.0",
"@babel/plugin-proposal-class-properties": "7.1.0",
"babel-preset-jest": {
"@babel/core": "7.1.0",
"@babel/plugin-proposal-decorators": "7.1.2",
"@babel/plugin-transform-destructuring": "7.0.0",
"@babel/preset-react": "7.0.0",
"@babel/plugin-transform-classes": "7.1.0",
"@babel/plugin-transform-runtime": "7.1.0",
"@babel/preset-typescript": "7.1.0",
"dependencies": {
"@babel/preset-env": "7.1.0",
"@babel/plugin-proposal-object-rest-spread": {
"@babel/runtime": "7.0.0",
"@babel/plugin-transform-classes": {
"@babel/helper-plugin-utils": "^7.0.0",
"requires": {
"@babel/helper-annotate-as-pure": "^7.0.0",
"requires": {
"@babel/helper-function-name": "^7.1.0",
"@babel/helper-plugin-utils": "^7.0.0",
"@babel/helper-define-map": "^7.1.0",
"@babel/helper-replace-supers": "^7.1.0",
"@babel/plugin-transform-destructuring": {
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-plugin-utils": "^7.0.0"
"@babel/helper-annotate-as-pure": "^7.0.0",
"requires": {
"@babel/plugin-transform-react-display-name": {
"requires": {
"@babel/helper-plugin-utils": "^7.0.0"
"requires": {
"@babel/preset-env": {
"@babel/helper-plugin-utils": "^7.0.0",
"requires": {
"@babel/helper-module-imports": "^7.0.0",
"@babel/plugin-transform-classes": "^7.1.0",
"@babel/plugin-transform-new-target": "^7.0.0",
"@babel/plugin-transform-for-of": "^7.0.0",
"@babel/plugin-transform-parameters": "^7.1.0",
"@babel/plugin-transform-literals": "^7.0.0",
"babel-register": {
"@babel/plugin-transform-spread": "^7.0.0",
"babel-core": {
"dependencies": {
"requires": {
"integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",
"requires": {
"babel-template": {
"babel-runtime": {
"integrity": "sha1-3gPi0WOWsGn0bdn/+FIfsaDjXgI=",
"requires": {
"dependencies": {
"dependencies": {
"babel-traverse": {
"dependencies": {
"to-fast-properties": {
"define-property": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"is-accessor-descriptor": {
"balanced-match": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
"binary-extensions": {
"requires": {
"requires": {
"bcrypt-pbkdf": {
"integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
"requires": {
"dependencies": {
"iconv-lite": {
"integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="
"requires": {
"integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
"browser-process-hrtime": {
"browser-resolve": {
"dependencies": {
"brace-expansion": {
"browserify-cipher": {
"browserify-des": {
"integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
"browserify-aes": {
"browserify-sign": {
"browserslist": {
"browserify-rsa": {
"buffer-indexof": {
"builtin-modules": {
"dependencies": {
"builtin-status-codes": {
"browserify-zlib": {
"lru-cache": {
"requires": {
"caller-callsite": {
"integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
"capture-exit": {
"call-me-maybe": {
"caniuse-lite": {
"case-sensitive-paths-webpack-plugin": {
"integrity": "sha1-HF/MSJ/QqwDU8ax64QcuMXP7q28=",
"requires": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"extend-shallow": {
"array-unique": {
"fill-range": {
"glob-parent": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"is-glob": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"requires": {
"is-number": {
"circular-json": {
"dependencies": {
"chrome-trace-event": {
"requires": {
"define-property": {
"source-map": {
"integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
"dependencies": {
"integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="
"@types/q": "^1.5.1",
"code-point-at": {
"collection-visit": {
"color-convert": {
"combined-stream": {
"component-emitter": {
"integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY="
"integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
"requires": {
"compressible": {
"concat-stream": {
"dependencies": {
"color-string": {
"console-browserify": {
"confusing-browser-globals": {
"connect-history-api-fallback": {
"constants-browserify": {
"integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="
"integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="
"content-disposition": {
"contains-path": {
"convert-source-map": {
"content-type": {
"copy-concurrently": {
"cookie-signature": {
"copy-descriptor": {
"crypto-browserify": {
"css-color-names": {
"core-util-is": {
"css-declaration-sorter": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"supports-color": {
"css-select-base-adapter": {
"css-selector-tokenizer": {
"regexpu-core": {
"source-map": {
"dependencies": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"requires": {
"regjsparser": {
"integrity": "sha1-fuj4Tcb6eS0/0K4ijSS9lJ6tIFw=",
"regjsgen": {
"requires": {
"css-unit-converter": {
"integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="
"css-url-regex": {
"requires": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"cssnano-preset-default": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"requires": {
"source-map": {
"cssnano-util-get-arguments": {
"cssnano-util-get-match": {
"integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="
"cssnano-util-raw-cache": {
"dependencies": {
"supports-color": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"cssnano-util-same-parent": {
"requires": {
"dependencies": {
"damerau-levenshtein": {
"requires": {
"integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="
"css-tree": {
"integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="
"integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="
"default-gateway": {
"decode-uri-component": {
"requires": {
"get-stream": {
"default-require-extensions": {
"integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
"define-properties": {
"dependencies": {
"define-property": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"dependencies": {
"is-descriptor": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"dependencies": {
"delayed-stream": {
"detect-indent": {
"requires": {
"integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="
"detect-newline": {
"pify": {
"detect-port-alt": {
"dependencies": {
"diffie-hellman": {
"requires": {
"dependencies": {
"integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="
"dom-converter": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"path-type": {
"dom-serializer": {
"requires": {
"dependencies": {
"domain-browser": {
"domelementtype": {
"domelementtype": {
"domexception": {
"integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="
"dotenv-expand": {
"integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
"es-to-primitive": {
"electron-to-chromium": {
"integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
"end-of-stream": {
"enhanced-resolve": {
"escape-string-regexp": {
"integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="
"@babel/code-frame": "^7.0.0",
"source-map": {
"eslint-scope": {
"dependencies": {
"dependencies": {
"eslint-config-react-app": {
"eslint-import-resolver-node": {
"dependencies": {
"eslint-module-utils": {
"requires": {
"dependencies": {
"eslint-loader": {
"dependencies": {
"eslint-plugin-import": {
"requires": {
"eslint-plugin-flowtype": {
"requires": {
"requires": {
"requires": {
"requires": {
"integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",
"load-json-file": {
"doctrine": {
"locate-path": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"parse-json": {
"requires": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"requires": {
"path-type": {
"read-pkg": {
"requires": {
"read-pkg-up": {
"requires": {
"eslint-scope": {
"eslint-plugin-react": {
"eslint-plugin-jsx-a11y": {
"strip-bom": {
"requires": {
"eslint-utils": {
"eslint-visitor-keys": {
"integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="
"integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="
"expand-brackets": {
"integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
"expand-range": {
"eventemitter3": {
"evp_bytestokey": {
"integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
"integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",
"expand-tilde": {
"extend-shallow": {
"dependencies": {
"array-flatten": {
"dependencies": {
"is-extendable": {
"requires": {
"external-editor": {
"integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
"requires": {
"fast-deep-equal": {
"integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
"dependencies": {
"@mrmlnc/readdir-enhanced": "^2.2.1",
"@nodelib/fs.stat": "^1.1.2",
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"requires": {
"dependencies": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"extend-shallow": {
"arr-diff": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"requires": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"dependencies": {
"requires": {
"is-descriptor": {
"requires": {
"requires": {
"kind-of": {
"kind-of": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"glob-parent": {
"requires": {
"requires": {
"dependencies": {
"is-glob": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"is-extglob": {
"requires": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"requires": {
"requires": {
"is-number": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"fast-json-stable-stringify": {
"requires": {
"integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
"faye-websocket": {
"integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",
"fast-levenshtein": {
"integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",
"integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
"figgy-pudding": {
"filename-regex": {
"file-entry-cache": {
"isobject": {
"dependencies": {
"finalhandler": {
"requires": {
"dependencies": {
"flush-write-stream": {
"find-cache-dir": {
"requires": {
"follow-redirects": {
"requires": {
"dependencies": {
"forever-agent": {
"fork-ts-checker-webpack-plugin-alt": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"dependencies": {
"arr-diff": {
"extend-shallow": {
"requires": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"requires": {
"requires": {
"kind-of": {
"extend-shallow": {
"is-accessor-descriptor": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"is-descriptor": {
"requires": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"requires": {
"fill-range": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"is-number": {
"kind-of": {
"dependencies": {
"requires": {
"micromatch": {
"integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
"integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
"requires": {
"fragment-cache": {
"integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
"dependencies": {
"fs-write-stream-atomic": {
"ansi-regex": {
"balanced-match": {
"are-we-there-yet": {
"requires": {
"brace-expansion": {
"concat-map": {
"code-point-at": {
"core-util-is": {
"console-control-strings": {
"requires": {
"deep-extend": {
"requires": {
"detect-libc": {
"fs-minipass": {
"fs.realpath": {
"delegates": {
"requires": {
"iconv-lite": {
"requires": {
"has-unicode": {
"requires": {
"ignore-walk": {
"requires": {
"requires": {
"inherits": {
"inflight": {
"is-fullwidth-code-point": {
"requires": {
"minimatch": {
"requires": {
"minipass": {
"minimist": {
"requires": {
"requires": {
"requires": {
"minizlib": {
"requires": {
"node-pre-gyp": {
"requires": {
"requires": {
"requires": {
"npm-bundled": {
"npm-packlist": {
"requires": {
"number-is-nan": {
"requires": {
"requires": {
"object-assign": {
"os-homedir": {
"path-is-absolute": {
"os-tmpdir": {
"process-nextick-args": {
"requires": {
"minimist": {
"dependencies": {
"readable-stream": {
"safe-buffer": {
"requires": {
"safer-buffer": {
"requires": {
"signal-exit": {
"set-blocking": {
"requires": {
"string-width": {
"requires": {
"string_decoder": {
"requires": {
"requires": {
"strip-ansi": {
"util-deprecate": {
"strip-json-comments": {
"wide-align": {
"functional-red-black-tree": {
"requires": {
"requires": {
"get-caller-file": {
"get-own-enumerable-property-symbols": {
"integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="
"function-bind": {
"glob-to-regexp": {
"global-prefix": {
"global-modules": {
"dependencies": {
"dependencies": {
"integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",
"h2x-generate": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-plugin-jsx": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"h2x-traverse": {
"integrity": "sha1-/Xqtcmvxpf0W38KbL3pmAdJxOcQ="
"dependencies": {
"har-validator": {
"source-map": {
"handle-thing": {
"integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="
"harmony-reflect": {
"dependencies": {
"integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
"ansi-regex": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"is-number": {
"requires": {
"kind-of": {
"integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
"hex-color-regex": {
"integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
"homedir-polyfill": {
"integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
"integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="
"integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="
"html-encoding-sniffer": {
"hosted-git-info": {
"html-comment-regex": {
"dependencies": {
"html-entities": {
"html-webpack-plugin": {
"commander": {
"html-minifier": {
"dependencies": {
"@types/tapable": "1.0.2",
"requires": {
"integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
"domutils": {
"readable-stream": {
"http-deceiver": {
"http-parser-js": {
"integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
"http-proxy-middleware": {
"dependencies": {
"arr-diff": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"string_decoder": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"array-unique": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"requires": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"define-property": {
"requires": {
"extend-shallow": {
"dependencies": {
"is-accessor-descriptor": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"is-data-descriptor": {
"kind-of": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"is-descriptor": {
"kind-of": {
"requires": {
"dependencies": {
"requires": {
"define-property": {
"extend-shallow": {
"fill-range": {
"requires": {
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"requires": {
"is-descriptor": {
"requires": {
"is-extglob": {
"integrity": "sha1-lSHHaEXMJhCoUgPd8ICpWML/q8A=",
"is-number": {
"requires": {
"dependencies": {
"kind-of": {
"requires": {
"micromatch": {
"requires": {
"requires": {
"integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="
"https-browserify": {
"icss-replace-symbols": {
"http-signature": {
"integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="
"integrity": "sha1-g/Cg7DeL8yRheLbCrZE28TWxyWI=",
"identity-obj-proxy": {
"integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",
"integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="
"integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
"import-local": {
"import-fresh": {
"strip-ansi": {
"dependencies": {
"ansi-regex": {
"integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="
"integrity": "sha1-6qM9bd16zo9/b+DJygRA5wZzix4="
"requires": {
"is-absolute-url": {
"integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
"integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
"is-binary-path": {
"is-accessor-descriptor": {
"integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
"is-builtin-module": {
"integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
"is-descriptor": {
"is-data-descriptor": {
"integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="
"is-date-object": {
"is-color-stop": {
"is-directory": {
"dependencies": {
"integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="
"integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="
"integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="
"is-path-in-cwd": {
"integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="
"is-equal-shallow": {
"is-extendable": {
"is-generator-fn": {
"is-fullwidth-code-point": {
"integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
"integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
"is-path-inside": {
"is-posix-bracket": {
"integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="
"integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="
"is-resolvable": {
"is-plain-object": {
"istanbul-api": {
"is-typedarray": {
"integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="
"istanbul-lib-coverage": {
"is-primitive": {
"istanbul-lib-report": {
"istanbul-lib-instrument": {
"istanbul-lib-hook": {
"has-flag": {
"supports-color": {
"requires": {
"istanbul-reports": {
"istanbul-lib-source-maps": {
"dependencies": {
"dependencies": {
"cross-spawn": {
"requires": {
"camelcase": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"invert-kv": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"get-stream": {
"requires": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"requires": {
"requires": {
"requires": {
"locate-path": {
"os-locale": {
"jest-cli": {
"requires": {
"requires": {
"requires": {
"p-locate": {
"requires": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"requires": {
"yargs-parser": {
"jest-changed-files": {
"requires": {
"dependencies": {
"requires": {
"babel-core": {
"jest-docblock": {
"integrity": "sha1-8IXh8YVI2Z/dabICB+b9VdkTg6c=",
"dependencies": {
"requires": {
"jest-environment-jsdom": {
"requires": {
"whatwg-url": {
"requires": {
"jest-environment-node": {
"requires": {
"jest-haste-map": {
"jest-get-type": {
"jest-leak-detector": {
"jest-jasmine2": {
"@babel/code-frame": "^7.0.0-beta.35",
"jest-message-util": {
"requires": {
"jest-matcher-utils": {
"jest-resolve-dependencies": {
"dependencies": {
"jest-regex-util": {
"jest-pnp-resolver": {
"requires": {
"jest-resolve": {
"jest-runtime": {
"source-map": {
"source-map-support": {
"requires": {
"integrity": "sha1-6L0O/uWPz/b4+UUQoKVUu/ojVEk=",
"camelcase": {
"babel-core": {
"cross-spawn": {
"integrity": "sha1-lEvs00zEHuMqY6n68nrVpl/Fl3c=",
"dependencies": {
"requires": {
"requires": {
"requires": {
"requires": {
"get-stream": {
"integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
"invert-kv": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"os-locale": {
"requires": {
"requires": {
"requires": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"p-locate": {
"strip-bom": {
"requires": {
"yargs-parser": {
"jest-serializer": {
"requires": {
"dependencies": {
"jest-validate": {
"integrity": "sha1-0uKM50+NrWxq/JIrksq+9u0FyRw=",
"jest-watcher": {
"jest-snapshot": {
"json-parse-better-errors": {
"json-stable-stringify": {
"integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
"js-levenshtein": {
"json-schema-traverse": {
"json-stable-stringify-without-jsonify": {
"source-map": {
"json-stringify-safe": {
"integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
"integrity": "sha1-6AGxs5mF4g//yHtA43SAgOLcrH8=",
"last-call-webpack-plugin": {
"jsx-ast-utils": {
"dependencies": {
"load-json-file": {
"requires": {
"parse-json": {
"dependencies": {
"loader-fs-cache": {
"integrity": "sha1-VuC/CL2XCLJqdltoUJhAyN7J/bw=",
"find-cache-dir": {
"requires": {
"requires": {
"requires": {
"path-exists": {
"loader-runner": {
"integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
"loader-utils": {
"dependencies": {
"requires": {
"lodash._reinterpolate": {
"lodash.camelcase": {
"requires": {
"integrity": "sha1-gteb/zCmfEAF/9XiUVMArZyk168="
"minimist": {
"lodash.debounce": {
"integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="
"lodash.sortby": {
"lodash.memoize": {
"lodash.templatesettings": {
"loose-envify": {
"map-age-cleaner": {
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"lodash.template": {
"integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
"integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
"dependencies": {
"merge-descriptors": {
"integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
"merge-stream": {
"integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
"mini-css-extract-plugin": {
"miller-rabin": {
"minimalistic-crypto-utils": {
"integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
"is-extendable": {
"minimalistic-assert": {
"dependencies": {
"requires": {
"dependencies": {
"multicast-dns": {
"move-concurrently": {
"mixin-object": {
"multicast-dns-service-types": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"node-libs-browser": {
"integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="
"dependencies": {
"natural-compare": {
"node-notifier": {
"node-releases": {
"normalize-package-data": {
"punycode": {
"normalize-path": {
"normalize-range": {
"integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
"integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="
"num2fraction": {
"normalize-url": {
"number-is-nan": {
"integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
"npm-run-path": {
"object-assign": {
"define-property": {
"dependencies": {
"object-visit": {
"object.assign": {
"requires": {
"integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
"object.values": {
"object.getownpropertydescriptors": {
"integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
"wordwrap": {
"dependencies": {
"integrity": "sha1-ko9dD0cNSTQmUepnlLCFfBAGk/c="
"integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
"os-browserify": {
"optimize-css-assets-webpack-plugin": {
"integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="
"integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
"integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
"p-is-promise": {
"integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",
"parallel-transform": {
"integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
"integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="
"parse-passwd": {
"integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="
"integrity": "sha1-/CidTtiZMRlGDBViUyYs3I3mW/M="
"path-browserify": {
"path-is-absolute": {
"integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="
"path-dirname": {
"path-to-regexp": {
"integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
"path-is-inside": {
"pinkie-promise": {
"performance-now": {
"integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
"dependencies": {
"requires": {
"locate-path": {
"requires": {
"p-locate": {
"dependencies": {
"requires": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"requires": {
"requires": {
"locate-path": {
"requires": {
"requires": {
"p-locate": {
"integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="
"pnp-webpack-plugin": {
"requires": {
"dependencies": {
"posix-character-classes": {
"requires": {
"dependencies": {
"integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="
"source-map": {
"postcss-attribute-case-insensitive": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"requires": {
"requires": {
"supports-color": {
"dependencies": {
"postcss-calc": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-color-functional-notation": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-color-hex-alpha": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"postcss-color-mod-function": {
"dependencies": {
"requires": {
"@csstools/convert-colors": "^1.4.0",
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"postcss-color-rebeccapurple": {
"requires": {
"dependencies": {
"supports-color": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-colormin": {
"dependencies": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"dependencies": {
"postcss-convert-values": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"postcss-custom-media": {
"requires": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-custom-properties": {
"dependencies": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"postcss-custom-selectors": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"dependencies": {
"postcss-dir-pseudo-class": {
"requires": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"source-map": {
"supports-color": {
"requires": {
"dependencies": {
"dependencies": {
"postcss-discard-comments": {
"requires": {
"supports-color": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"requires": {
"dependencies": {
"postcss-discard-duplicates": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"postcss-discard-empty": {
"requires": {
"dependencies": {
"supports-color": {
"dependencies": {
"source-map": {
"requires": {
"requires": {
"requires": {
"supports-color": {
"postcss-discard-overridden": {
"dependencies": {
"requires": {
"supports-color": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"dependencies": {
"postcss-env-function": {
"requires": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"requires": {
"postcss-flexbugs-fixes": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-focus-visible": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-focus-within": {
"requires": {
"dependencies": {
"dependencies": {
"dependencies": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-font-variant": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"supports-color": {
"source-map": {
"requires": {
"requires": {
"postcss-gap-properties": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-image-set-function": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"dependencies": {
"source-map": {
"requires": {
"requires": {
"postcss-initial": {
"supports-color": {
"dependencies": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"supports-color": {
"requires": {
"requires": {
"dependencies": {
"postcss-lab-function": {
"@csstools/convert-colors": "^1.4.0",
"dependencies": {
"source-map": {
"supports-color": {
"requires": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"postcss-load-config": {
"requires": {
"dependencies": {
"source-map": {
"postcss-loader": {
"cosmiconfig": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-logical": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-media-minmax": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"requires": {
"postcss-merge-longhand": {
"requires": {
"dependencies": {
"supports-color": {
"dependencies": {
"source-map": {
"requires": {
"requires": {
"supports-color": {
"postcss-merge-rules": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"postcss-selector-parser": {
"requires": {
"requires": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-minify-font-values": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"postcss-minify-gradients": {
"dependencies": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"postcss-minify-params": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-minify-selectors": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"dependencies": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"postcss-modules-scope": {
"postcss-modules-extract-imports": {
"postcss-modules-local-by-default": {
"dependencies": {
"postcss-modules-values": {
"dependencies": {
"postcss-nesting": {
"requires": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"postcss-normalize-charset": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"supports-color": {
"dependencies": {
"postcss-normalize-display-values": {
"requires": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-normalize-positions": {
"requires": {
"dependencies": {
"supports-color": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"requires": {
"postcss-normalize-repeat-style": {
"dependencies": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"supports-color": {
"requires": {
"source-map": {
"postcss-normalize-string": {
"requires": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"supports-color": {
"postcss-normalize-timing-functions": {
"requires": {
"dependencies": {
"supports-color": {
"source-map": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"requires": {
"supports-color": {
"dependencies": {
"postcss-normalize-unicode": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"postcss-normalize-url": {
"supports-color": {
"requires": {
"dependencies": {
"supports-color": {
"supports-color": {
"dependencies": {
"requires": {
"requires": {
"source-map": {
"dependencies": {
"postcss-normalize-whitespace": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"supports-color": {
"postcss-ordered-values": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"supports-color": {
"supports-color": {
"source-map": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"postcss-overflow-shorthand": {
"dependencies": {
"supports-color": {
"source-map": {
"requires": {
"supports-color": {
"postcss-page-break": {
"dependencies": {
"requires": {
"requires": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"supports-color": {
"requires": {
"postcss-place": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-preset-env": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"postcss-pseudo-class-any-link": {
"supports-color": {
"requires": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"supports-color": {
"source-map": {
"dependencies": {
"postcss-reduce-initial": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"requires": {
"supports-color": {
"postcss-reduce-transforms": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-replace-overflow-wrap": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"dependencies": {
"source-map": {
"supports-color": {
"requires": {
"postcss-safe-parser": {
"requires": {
"dependencies": {
"requires": {
"supports-color": {
"requires": {
"requires": {
"dependencies": {
"supports-color": {
"postcss-selector-matches": {
"requires": {
"source-map": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"requires": {
"supports-color": {
"source-map": {
"requires": {
"postcss-selector-not": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"source-map": {
"requires": {
"supports-color": {
"postcss-selector-parser": {
"dependencies": {
"requires": {
"requires": {
"postcss-svgo": {
"requires": {
"dependencies": {
"supports-color": {
"requires": {
"dependencies": {
"source-map": {
"supports-color": {
"requires": {
"postcss-unique-selectors": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"dependencies": {
"requires": {
"source-map": {
"supports-color": {
"supports-color": {
"postcss-value-parser": {
"postcss-values-parser": {
"requires": {
"integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="
"pretty-format": {
"pretty-error": {
"process-nextick-args": {
"integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="
"pretty-bytes": {
"promise-inflight": {
"public-encrypt": {
"querystring-es3": {
"requires": {
"dependencies": {
"querystringify": {
"dependencies": {
"is-number": {
"range-parser": {
"requires": {
"iconv-lite": {
"dependencies": {
"react-dev-utils": {
"react-app-polyfill": {
"dependencies": {
"@babel/code-frame": "7.0.0",
"dependencies": {
"requires": {
"browserslist": {
"inquirer": {
"loader-utils": {
"integrity": "sha1-yYrvSIvM7aL/teLeZG1qdUQp9c0=",
"requires": {
"react-error-overlay": {
"requires": {
"@babel/core": "7.1.0",
"@svgr/webpack": "2.4.1",
"react-scripts": {
"integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
"dependencies": {
"path-exists": {
"requires": {
"requires": {
"readable-stream": {
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"arr-diff": {
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"requires": {
"dependencies": {
"define-property": {
"is-accessor-descriptor": {
"requires": {
"extend-shallow": {
"dependencies": {
"requires": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"requires": {
"kind-of": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"fill-range": {
"dependencies": {
"requires": {
"requires": {
"extend-shallow": {
"requires": {
"is-data-descriptor": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-descriptor": {
"requires": {
"is-number": {
"dependencies": {
"requires": {
"kind-of": {
"micromatch": {
"recursive-readdir": {
"requires": {
"realpath-native": {
"regenerate-unicode-properties": {
"regenerator-runtime": {
"requires": {
"regenerator-transform": {
"dependencies": {
"regexpu-core": {
"integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="
"remove-trailing-separator": {
"integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="
"ansi-regex": {
"dependencies": {
"css-select": {
"requires": {
"requires": {
"requires": {
"repeat-element": {
"strip-ansi": {
"repeat-string": {
"domutils": {
"integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="
"tough-cookie": {
"dependencies": {
"request-promise-core": {
"punycode": {
"request-promise-native": {
"integrity": "sha1-UoF3D2jgyXGeUWP9P6tIIhX0/aU=",
"require-directory": {
"integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="
"require-from-string": {
"require-main-filename": {
"integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="
"require-uncached": {
"requires": {
"dependencies": {
"caller-path": {
"requires": {
"callsites": {
"resolve-from": {
"integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo="
"integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY="
"integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",
"requires-port": {
"restore-cursor": {
"integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="
"integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
"integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",
"resolve-from": {
"safer-buffer": {
"integrity": "sha1-tNwYYcIbQn6SlQej51HiosuKs/o=",
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"requires": {
"arr-diff": {
"dependencies": {
"extend-shallow": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"requires": {
"dependencies": {
"define-property": {
"requires": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"is-data-descriptor": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"kind-of": {
"dependencies": {
"define-property": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"requires": {
"fill-range": {
"extend-shallow": {
"is-accessor-descriptor": {
"requires": {
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"is-number": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"micromatch": {
"dependencies": {
"requires": {
"clone-deep": {
"requires": {
"minimist": {
"requires": {
"integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",
"integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
"shallow-clone": {
"requires": {
"dependencies": {
"requires": {
"schema-utils": {
"kind-of": {
"dependencies": {
"integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
"serialize-javascript": {
"requires": {
"dependencies": {
"serve-static": {
"dependencies": {
"extend-shallow": {
"set-blocking": {
"requires": {
"setimmediate": {
"shallow-clone": {
"integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",
"setprototypeof": {
"lazy-cache": {
"dependencies": {
"integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="
"shebang-command": {
"requires": {
"shebang-regex": {
"integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
"integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="
"integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
"simple-swizzle": {
"dependencies": {
"is-arrayish": {
"dependencies": {
"define-property": {
"requires": {
"requires": {
"extend-shallow": {
"snapdragon-node": {
"dependencies": {
"requires": {
"define-property": {
"is-accessor-descriptor": {
"integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
"requires": {
"is-data-descriptor": {
"is-descriptor": {
"requires": {
"requires": {
"faye-websocket": {
"dependencies": {
"requires": {
"snapdragon-util": {
"integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
"sockjs-client": {
"requires": {
"requires": {
"source-map-resolve": {
"dependencies": {
"source-list-map": {
"source-map-url": {
"source-map-support": {
"spdx-exceptions": {
"spdx-correct": {
"spdx-license-ids": {
"spdx-expression-parse": {
"integrity": "sha1-Qv9B7OXMD5mjpsKKq7c/XDsDrLw=",
"spdy-transport": {
"dependencies": {
"dependencies": {
"requires": {
"split-string": {
"integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
"requires": {
"static-extend": {
"define-property": {
"stealthy-require": {
"integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="
"requires": {
"dependencies": {
"stream-browserify": {
"stream-shift": {
"string-length": {
"integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",
"string_decoder": {
"string-width": {
"integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="
"strip-comments": {
"stringify-object": {
"strip-json-comments": {
"dependencies": {
"style-loader": {
"schema-utils": {
"requires": {
"dependencies": {
"dependencies": {
"supports-color": {
"requires": {
"postcss-selector-parser": {
"requires": {
"source-map": {
"requires": {
"requires": {
"requires": {
"supports-color": {
"dependencies": {
"supports-color": {
"source-map": {
"dependencies": {
"commander": {
"requires": {
"source-map-support": {
"terser-webpack-plugin": {
"find-cache-dir": {
"dependencies": {
"requires": {
"source-map": {
"requires": {
"integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
"timers-browserify": {
"integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
"to-arraybuffer": {
"integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="
"test-exclude": {
"to-fast-properties": {
"to-object-path": {
"integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="
"dependencies": {
"to-regex-range": {
"is-number": {
"tough-cookie": {
"integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",
"requires": {
"tty-browserify": {
"integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="
"integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="
"dependencies": {
"tunnel-agent": {
"integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
"commander": {
"source-map": {
"uglifyjs-webpack-plugin": {
"dependencies": {
"requires": {
"requires": {
"mississippi": {
"requires": {
"commander": {
"requires": {
"schema-utils": {
"source-map": {
"requires": {
"uglify-es": {
"unicode-canonical-property-names-ecmascript": {
"requires": {
"unicode-match-property-ecmascript": {
"unicode-match-property-value-ecmascript": {
"unicode-property-aliases-ecmascript": {
"extend-shallow": {
"requires": {
"dependencies": {
"set-value": {
"universalify": {
"integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="
"requires": {
"unique-filename": {
"dependencies": {
"dependencies": {
"requires": {
"has-value": {
"has-values": {
"requires": {
"integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="
"integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="
"integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
"dependencies": {
"punycode": {
"util-deprecate": {
"isobject": {
"vm-browserify": {
"validate-npm-package-license": {
"integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",
"integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",
"w3c-xmlserializer": {
"minimist": {
"dependencies": {
"util.promisify": {
"@webassemblyjs/ast": "1.7.6",
"@webassemblyjs/helper-module-context": "1.7.6",
"@webassemblyjs/wasm-edit": "1.7.6",
"webidl-conversions": {
"@webassemblyjs/wasm-parser": "1.7.6",
"dependencies": {
"integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="
"array-unique": {
"integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="
"arr-diff": {
"extend-shallow": {
"requires": {
"dependencies": {
"requires": {
"eslint-scope": {
"requires": {
"expand-brackets": {
"requires": {
"integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
"dependencies": {
"requires": {
"define-property": {
"requires": {
"extend-shallow": {
"requires": {
"requires": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"dependencies": {
"requires": {
"is-descriptor": {
"requires": {
"kind-of": {
"dependencies": {
"kind-of": {
"requires": {
"requires": {
"extend-shallow": {
"define-property": {
"requires": {
"fill-range": {
"extend-shallow": {
"requires": {
"dependencies": {
"is-accessor-descriptor": {
"is-data-descriptor": {
"requires": {
"requires": {
"is-number": {
"requires": {
"is-descriptor": {
"requires": {
"dependencies": {
"requires": {
"kind-of": {
"requires": {
"requires": {
"micromatch": {
"schema-utils": {
"webpack-dev-server": {
"requires": {
"dependencies": {
"ansi-regex": {
"webpack-dev-middleware": {
"decamelize": {
"import-local": {
"camelcase": {
"strip-ansi": {
"requires": {
"requires": {
"requires": {
"yargs-parser": {
"requires": {
"requires": {
"webpack-manifest-plugin": {
"webpack-sources": {
"source-map": {
"dependencies": {
"requires": {
"websocket-driver": {
"websocket-extensions": {
"whatwg-encoding": {
"which-module": {
"whatwg-mimetype": {
"whatwg-fetch": {
"integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="
"workbox-background-sync": {
"workbox-broadcast-cache-update": {
"workbox-build": {
"fs-extra": {
"dependencies": {
"workbox-cache-expiration": {
"workbox-cacheable-response": {
"requires": {
"workbox-google-analytics": {
"workbox-navigation-preload": {
"workbox-range-requests": {
"workbox-routing": {
"workbox-strategies": {
"workbox-core": {
"workbox-precaching": {
"workbox-webpack-plugin": {
"dependencies": {
"workbox-streams": {
"is-fullwidth-code-point": {
"ansi-regex": {
"string-width": {
"requires": {
"strip-ansi": {
"requires": {
"requires": {
"write-file-atomic": {
"xml-name-validator": {
"yargs-parser": {
